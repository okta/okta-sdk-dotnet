openapi: 3.0.3
info:
  title: Okta API
  description: Allows customers to easily access the Okta API
  termsOfService: https://developer.okta.com/terms/
  contact:
    name: Okta Developer Team
    url: https://developer.okta.com/
    email: devex-public@okta.com
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 3.0.0
  x-logo:
    url: logo.svg
    backgroundColor: transparent
    altText: Okta Developer
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
servers:
  - url: https://{subdomain}.{domain}
    variables:
      subdomain:
        default: your-subdomain
        description: The subdomain of your organization
      domain:
        enum:
          - okta.com
          - oktapreview.com
          - okta-emea.com
        default: okta.com
        description: The okta domain of your organization.
  - url: https://{customDomain}
    variables:
      customDomain:
        default: auth.your-custom-domain.com
        description: The custom domain configured for your organization
tags:
  - name: AgentPools
    x-displayName: Agent Pools
  - name: ApiToken
    x-displayName: API Tokens
  - name: Application
    x-displayName: Applications
  - name: Authenticator
    x-displayName: Authenticators
  - name: AuthorizationServer
    x-displayName: Authorization Servers
  - name: Behavior
    x-displayName: Behavior Rules
  - name: Customization
    x-displayName: Customizations
  - name: CAPTCHA
    x-displayName: CAPTCHAs
  - name: Domain
    x-displayName: Domains
  - name: EventHook
    x-displayName: Event Hooks
  - name: Feature
    x-displayName: Features
  - name: Group
    x-displayName: Groups
  - name: IdentityProvider
    x-displayName: Identity Providers
  - name: InlineHook
    x-displayName: Inline Hooks
  - name: SystemLog
    x-displayName: System Log
  - name: ProfileMapping
    x-displayName: Profile Mappings
  - name: UserType
    x-displayName: User Types
  - name: Schema
    x-displayName: Schemas
  - name: LinkedObject
    x-displayName: Linked Objects
  - name: OrgSetting
    x-displayName: Org Settings
  - name: Policy
    x-displayName: Policies
  - name: PrincipalRateLimit
    x-displayName: Principal Rate Limits
  - name: PushProvider
    x-displayName: Push Providers
  - name: Session
    x-displayName: Sessions
  - name: Subscription
    x-displayName: Subscriptions
  - name: Template
    x-displayName: SMS Templates
  - name: ThreatInsight
    x-displayName: ThreatInsight
  - name: TrustedOrigin
    x-displayName: Trusted Origins
  - name: User
    x-displayName: Users
  - name: UserFactor
    x-displayName: Factors
  - name: NetworkZone
    x-displayName: Network Zones
  - name: DeviceAssurance
    x-displayName: Device Assurance Policies
x-tagGroups:
  - name: User Directory
    tags:
      - User
      - Group
      - UserType
      - Schema
      - LinkedObject
      - ProfileMapping
  - name: Security
    tags:
      - ApiToken
      - Application
      - Authenticator
      - AuthorizationServer
      - Behavior
      - CAPTCHA
      - DeviceAssurance
      - IdentityProvider
      - Policy
      - PushProvider
      - Session
      - ThreatInsight
      - TrustedOrigin
      - UserFactor
      - NetworkZone
  - name: Customization
    tags:
      - Customization
      - Domain
      - Template
  - name: Rate Limits
    tags:
      - PrincipalRateLimit
  - name: Other
    tags:
      - AgentPools
      - EventHook
      - Feature
      - InlineHook
      - OrgSetting
      - SystemLog
      - Subscription
paths:
  /api/v1/agentPools:
    get:
      summary: List all Agent Pools
      description: Fetches AgentPools based on request parameters for a given org
      operationId: getAgentPools
      parameters:
        - $ref: '#/components/parameters/queryLimitPerPoolType'
        - $ref: '#/components/parameters/queryPoolType'
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentPool'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.read
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates:
    get:
      summary: List all Agent Pool updates
      description: Gets List of Agent pool updates
      operationId: getAgentPoolsUpdates
      parameters:
        - $ref: '#/components/parameters/pathPoolId'
        - $ref: '#/components/parameters/queryScheduled'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.read
      tags:
        - AgentPools
    post:
      summary: Create an Agent Pool update
      description: Creates an Agent pool update \n For user flow 2 manual update, starts the update immediately. \n For user flow 3, schedules the update based on the configured update window and delay.
      operationId: createAgentPoolsUpdate
      parameters:
        - $ref: '#/components/parameters/pathPoolId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/settings:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
    get:
      summary: Retrieve an Agent Pool update's settings
      description: Gets the current state of the agent pool update instance settings
      operationId: getAgentPoolsUpdateSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.read
      tags:
        - AgentPools
    post:
      summary: Update an Agent pool update settings
      description: Updates Agent pool update settings
      operationId: setAgentPoolsUpdateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdateSetting'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    get:
      summary: Retrieve an Agent Pool update by id
      description: Gets Agent pool update from updateId
      operationId: getAgentPoolsUpdateInstance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.read
      tags:
        - AgentPools
    post:
      summary: Update an Agent Pool update by id
      description: Updates Agent pool update and return latest agent pool update
      operationId: updateAgentPoolsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
    delete:
      summary: Delete an Agent Pool update
      description: Deletes Agent pool update
      operationId: deleteAgentPoolsUpdate
      responses:
        '204':
          description: Deleted
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/activate:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Activate an Agent Pool update
      description: Activates scheduled Agent pool update
      operationId: activateAgentPoolsUpdate
      responses:
        '201':
          description: Activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/deactivate:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Deactivate an Agent Pool update
      description: Deactivates scheduled Agent pool update
      operationId: deactivateAgentPoolsUpdate
      responses:
        '201':
          description: Deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/pause:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Pause an Agent Pool update
      description: Pauses running or queued Agent pool update
      operationId: pauseAgentPoolsUpdate
      responses:
        '201':
          description: Paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/resume:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Resume an Agent Pool update
      description: Resumes running or queued Agent pool update
      operationId: resumeAgentPoolsUpdate
      responses:
        '201':
          description: Resumed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/retry:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Retry an Agent Pool update
      description: Retries Agent pool update
      operationId: retryAgentPoolsUpdate
      responses:
        '201':
          description: Retried
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/stop:
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
    post:
      summary: Stop an Agent Pool update
      description: Stops Agent pool update
      operationId: stopAgentPoolsUpdate
      responses:
        '201':
          description: Stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.agentPools.manage
      tags:
        - AgentPools
  /api/v1/api-tokens:
    get:
      summary: List all API Token Metadata
      description: Enumerates the metadata of the active API tokens in your organization.
      operationId: listApiTokens
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - name: q
          in: query
          description: Finds a token that matches the name or clientName.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiToken'
              examples:
                List Tokens:
                  $ref: '#/components/examples/ApiTokenListMetadataResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apiTokens.read
      tags:
        - ApiToken
  /api/v1/api-tokens/current:
    delete:
      summary: Revoke the Current API Token
      description: Revokes the API token provided in the Authorization header.
      operationId: revokeCurrentApiToken
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
      tags:
        - ApiToken
  /api/v1/api-tokens/{apiTokenId}:
    parameters:
      - $ref: '#/components/parameters/pathApiTokenId'
    get:
      summary: Retrieve an API Token's Metadata
      description: Get the metadata for an active API token by id.
      operationId: getApiToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/ApiTokenMetadataResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apiTokens.read
      tags:
        - ApiToken
    delete:
      summary: Revoke an API Token
      description: Revoke an API token by id.
      operationId: revokeApiToken
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apiTokens.manage
      tags:
        - ApiToken
  /api/v1/apps:
    get:
      summary: List all Applications
      description: Enumerates apps added to your organization with pagination. A subset of apps can be returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of apps
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: -1
        - name: filter
          in: query
          description: Filters apps by status, user.id, group.id or credentials.signing.kid expression
          schema:
            type: string
        - name: expand
          in: query
          description: Traverses users link relationship and optionally embeds Application User resource
          schema:
            type: string
        - name: includeNonDeleted
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    post:
      summary: Create an Application
      description: Adds a new application to your Okta organization.
      operationId: createApplication
      parameters:
        - name: activate
          in: query
          description: Executes activation lifecycle operation when creating the app
          schema:
            type: boolean
            default: true
        - name: OktaAccessGateway-Agent
          in: header
          schema:
            type: string
      x-codegen-request-body-name: application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}:
    get:
      summary: Retrieve an Application
      description: Fetches an application from your Okta organization by `id`.
      operationId: getApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    put:
      summary: Replace an Application
      description: Updates an application in your organization.
      operationId: updateApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
    delete:
      summary: Delete an Application
      description: Removes an inactive application.
      operationId: deleteApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/connections/default:
    get:
      summary: Retrieve the default Provisioning Connection
      description: Get default Provisioning Connection for application
      operationId: getDefaultProvisioningConnectionForApplication
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    post:
      summary: Update the default Provisioning Connection
      description: Set default Provisioning Connection for application
      operationId: setDefaultProvisioningConnectionForApplication
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
        - in: query
          name: activate
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConnectionRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/connections/default/lifecycle/activate:
    post:
      summary: Activate the default Provisioning Connection
      description: Activates the default Provisioning Connection for an application.
      operationId: activateDefaultProvisioningConnectionForApplication
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:
    post:
      summary: Deactivate the default Provisioning Connection for an Application
      description: Deactivates the default Provisioning Connection for an application.
      operationId: deactivateDefaultProvisioningConnectionForApplication
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/credentials/csrs:
    get:
      summary: List all Certificate Signing Requests
      description: Enumerates Certificate Signing Requests for an application
      operationId: listCsrsForApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    post:
      summary: Generate a Certificate Signing Request
      description: Generates a new key pair and returns the Certificate Signing Request for it.
      operationId: generateCsrForApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/credentials/csrs/{csrId}:
    get:
      summary: Retrieve a Certificate Signing Request
      description: Fetches a certificate signing request for the app by `id`.
      operationId: getCsrForApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: csrId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    delete:
      summary: Revoke a Certificate Signing Request
      description: Revokes a certificate signing request and deletes the key pair from the application.
      operationId: revokeCsrFromApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: csrId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      summary: Publish a Certificate Signing Request
      description: Updates a certificate signing request for the app with a signed X.509 certificate and adds it into the application key credentials
      operationId: publishCsrFromApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: csrId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-x509-ca-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryCerCert
          application/pkix-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryDerCert
          application/x-pem-file:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryPemCert
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/credentials/keys:
    get:
      summary: List all Key Credentials
      description: Enumerates key credentials for an application
      operationId: listApplicationKeys
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
  /api/v1/apps/{appId}/credentials/keys/generate:
    post:
      summary: Generate a Key Credential
      description: Generates a new X.509 certificate for an application key credential
      operationId: generateApplicationKey
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: validityYears
          in: query
          schema:
            type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/credentials/keys/{keyId}:
    get:
      summary: Retrieve a Key Credential
      description: Gets a specific application key credential by kid
      operationId: getApplicationKey
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
    post:
      summary: Clone a Key Credential
      description: Clones a X.509 certificate for an application key credential from a source application to target application.
      operationId: cloneApplicationKey
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
        - name: targetAid
          in: query
          description: Unique key of the target Application
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/features:
    get:
      summary: List all Features
      description: List Features for application
      operationId: listFeaturesForApplication
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationFeature'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
  /api/v1/apps/{appId}/features/{name}:
    get:
      summary: Retrieve a Feature
      description: Fetches a Feature object for an application.
      operationId: getFeatureForApplication
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    put:
      summary: Update a Feature
      description: Updates a Feature object for an application.
      operationId: updateFeatureForApplication
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilitiesObject'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/grants:
    get:
      summary: List all Scope Consent Grants
      description: Lists all scope consent grants for the application
      operationId: listScopeConsentGrants
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
      tags:
        - Application
    post:
      summary: Grant Consent to Scope
      description: Grants consent for the application to request an OAuth 2.0 Okta scope
      operationId: grantConsentToScope
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: oAuth2ScopeConsentGrant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
      tags:
        - Application
  /api/v1/apps/{appId}/grants/{grantId}:
    get:
      summary: Retrieve a Scope Consent Grant
      description: Fetches a single scope consent grant for the application
      operationId: getScopeConsentGrant
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: grantId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
      tags:
        - Application
    delete:
      summary: Revoke a Scope Consent Grant
      description: Revokes permission for the application to request the given scope
      operationId: revokeScopeConsentGrant
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: grantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
      tags:
        - Application
  /api/v1/apps/{appId}/groups:
    get:
      summary: List all Assigned Groups
      description: Enumerates group assignments for an application.
      operationId: listApplicationGroupAssignments
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of assignments
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: -1
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
  /api/v1/apps/{appId}/groups/{groupId}:
    get:
      summary: Retrieve an Assigned Group
      description: Fetches an application group assignment
      operationId: getApplicationGroupAssignment
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    put:
      summary: Assign a Group
      description: Assigns a group to an application
      operationId: createApplicationGroupAssignment
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: applicationGroupAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupAssignment'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
    delete:
      summary: Unassign a Group
      description: Removes a group assignment from an application.
      operationId: deleteApplicationGroupAssignment
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/lifecycle/activate:
    post:
      summary: Activate an Application
      description: Activates an inactive application.
      operationId: activateApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/lifecycle/deactivate:
    post:
      summary: Deactivate an Application
      description: Deactivates an active application.
      operationId: deactivateApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/logo:
    post:
      summary: Upload a Logo
      description: The file must be in PNG, JPG, or GIF format, and less than 1 MB in size. For best results use landscape orientation, a transparent background, and a minimum size of 420px by 120px to prevent upscaling.
      operationId: uploadApplicationLogo
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/tokens:
    get:
      summary: List all OAuth 2.0 Tokens
      description: Lists all tokens for the application
      operationId: listOAuth2TokensForApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Token'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    delete:
      summary: Revoke all OAuth 2.0 Tokens
      description: Revokes all tokens for the specified application
      operationId: revokeOAuth2TokensForApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/tokens/{tokenId}:
    get:
      summary: Retrieve an OAuth 2.0 Token
      description: Gets a token for the specified application
      operationId: getOAuth2TokenForApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    delete:
      summary: Revoke an OAuth 2.0 Token
      description: Revokes the specified token for the specified application
      operationId: revokeOAuth2TokenForApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/users:
    get:
      summary: List all Assigned Users
      description: Enumerates all assigned [application users](#application-user-model) for an application.
      operationId: listApplicationUsers
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: query_scope
          in: query
          schema:
            type: string
        - name: after
          in: query
          description: specifies the pagination cursor for the next page of assignments
          schema:
            type: string
        - name: limit
          in: query
          description: specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: -1
        - name: filter
          in: query
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    post:
      summary: Assign a User
      description: Assigns an user to an application with [credentials](#application-user-credentials-object) and an app-specific [profile](#application-user-profile-object). Profile mappings defined for the application are first applied before applying any profile properties specified in the request.
      operationId: assignUserToApplication
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: appUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/apps/{appId}/users/{userId}:
    get:
      summary: Retrieve an Assigned User
      description: Fetches a specific user assignment for application by `id`.
      operationId: getApplicationUser
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.read
      tags:
        - Application
    post:
      summary: Update an Application Profile for Assigned User
      description: Updates a user's profile for an application
      operationId: updateApplicationUser
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: appUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
    delete:
      summary: Unassign a User
      description: Removes an assignment for a user from an application.
      operationId: deleteApplicationUser
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: sendEmail
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - Application
  /api/v1/authenticators:
    get:
      summary: List all Authenticators
      description: Enumerates authenticators in your organization.
      operationId: listAuthenticators
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Authenticator'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authenticators.read
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}:
    get:
      summary: Retrieve an Authenticator
      description: Fetches an authenticator from your Okta organization by `authenticatorId`.
      operationId: getAuthenticator
      parameters:
        - in: path
          name: authenticatorId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authenticators.read
      tags:
        - Authenticator
    put:
      summary: Replace an Authenticator
      description: Updates an authenticator
      operationId: updateAuthenticator
      parameters:
        - in: path
          name: authenticatorId
          required: true
          schema:
            type: string
      x-codegen-request-body-name: authenticator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticator'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/lifecycle/activate:
    post:
      summary: Activate an Authenticator
      description: Activates an authenticator by `authenticatorId`.
      operationId: activateAuthenticator
      parameters:
        - in: path
          name: authenticatorId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:
    post:
      summary: Deactivate an Authenticator
      description: Deactivates an authenticator by `authenticatorId`.
      operationId: deactivateAuthenticator
      parameters:
        - in: path
          name: authenticatorId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authenticators.manage
      tags:
        - Authenticator
  /api/v1/authorizationServers:
    get:
      summary: List all Authorization Servers
      description: Success
      operationId: listAuthorizationServers
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create an Authorization Server
      description: Success
      operationId: createAuthorizationServer
      x-codegen-request-body-name: authorizationServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}:
    get:
      summary: Retrieve an Authorization Server
      description: Success
      operationId: getAuthorizationServer
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace an Authorization Server
      description: Success
      operationId: updateAuthorizationServer
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: authorizationServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete an Authorization Server
      description: Success
      operationId: deleteAuthorizationServer
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/claims:
    get:
      summary: List all Custom Token Claims
      description: Success
      operationId: listOAuth2Claims
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Claim'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Custom Token Claim
      description: Success
      operationId: createOAuth2Claim
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: oAuth2Claim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/claims/{claimId}:
    get:
      summary: Retrieve a Custom Token Claim
      description: Success
      operationId: getOAuth2Claim
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: claimId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Custom Token Claim
      description: Success
      operationId: updateOAuth2Claim
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: claimId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: oAuth2Claim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Custom Token Claim
      description: Success
      operationId: deleteOAuth2Claim
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: claimId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients:
    get:
      summary: List all Clients
      description: Success
      operationId: listOAuth2ClientsForAuthorizationServer
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Client'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:
    get:
      summary: List all Refresh Tokens for a Client
      description: Success
      operationId: listRefreshTokensForAuthorizationServerAndClient
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    delete:
      summary: Revoke all Refresh Tokens for a Client
      description: Success
      operationId: revokeRefreshTokensForAuthorizationServerAndClient
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:
    get:
      summary: Retrieve a Refresh Token for a Client
      description: Success
      operationId: getRefreshTokenForAuthorizationServerAndClient
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    delete:
      summary: Revoke a Refresh Token for a Client
      description: Success
      operationId: revokeRefreshTokenForAuthorizationServerAndClient
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/credentials/keys:
    get:
      summary: List all Credential Keys
      description: Success
      operationId: listAuthorizationServerKeys
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:
    post:
      summary: Rotate all Credential Keys
      description: Success
      operationId: rotateAuthorizationServerKeys
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: use
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwkUse'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/lifecycle/activate:
    post:
      summary: Activate an Authorization Server
      description: Success
      operationId: activateAuthorizationServer
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:
    post:
      summary: Deactivate an Authorization Server
      description: Success
      operationId: deactivateAuthorizationServer
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies:
    get:
      summary: List all Policies
      description: Success
      operationId: listAuthorizationServerPolicies
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Policy
      description: Success
      operationId: createAuthorizationServerPolicy
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}:
    get:
      summary: Retrieve a Policy
      description: Success
      operationId: getAuthorizationServerPolicy
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Policy
      description: Success
      operationId: updateAuthorizationServerPolicy
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Policy
      description: Success
      operationId: deleteAuthorizationServerPolicy
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:
    post:
      summary: Activate a Policy
      description: Activate Authorization Server Policy
      operationId: activateAuthorizationServerPolicy
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Policy
      description: Deactivate Authorization Server Policy
      operationId: deactivateAuthorizationServerPolicy
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:
    get:
      summary: List all Policy Rules
      description: Enumerates all policy rules for the specified Custom Authorization Server and Policy.
      operationId: listAuthorizationServerPolicyRules
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Policy Rule
      description: Creates a policy rule for the specified Custom Authorization Server and Policy.
      operationId: createAuthorizationServerPolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:
    get:
      summary: Retrieve a Policy Rule
      description: Returns a Policy Rule by ID that is defined in the specified Custom Authorization Server and Policy.
      operationId: getAuthorizationServerPolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Policy Rule
      description: Updates the configuration of the Policy Rule defined in the specified Custom Authorization Server and Policy.
      operationId: updateAuthorizationServerPolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Policy Rule
      description: Deletes a Policy Rule defined in the specified Custom Authorization Server and Policy.
      operationId: deleteAuthorizationServerPolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      summary: Activate a Policy Rule
      description: Activate Authorization Server Policy Rule
      operationId: activateAuthorizationServerPolicyRule
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Policy Rule
      description: Deactivate Authorization Server Policy Rule
      operationId: deactivateAuthorizationServerPolicyRule
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/scopes:
    get:
      summary: List all Custom Token Scopes
      description: Success
      operationId: listOAuth2Scopes
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: cursor
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Scope'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    post:
      summary: Create a Custom Token Scope
      description: Success
      operationId: createOAuth2Scope
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: oAuth2Scope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:
    get:
      summary: Retrieve a Custom Token Scope
      description: Success
      operationId: getOAuth2Scope
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: scopeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.read
      tags:
        - AuthorizationServer
    put:
      summary: Replace a Custom Token Scope
      description: Success
      operationId: updateOAuth2Scope
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: scopeId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: oAuth2Scope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
    delete:
      summary: Delete a Custom Token Scope
      description: Success
      operationId: deleteOAuth2Scope
      parameters:
        - name: authServerId
          in: path
          required: true
          schema:
            type: string
        - name: scopeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.authorizationServers.manage
      tags:
        - AuthorizationServer
  /api/v1/behaviors:
    get:
      summary: List all Behavior Detection Rules
      description: Enumerates Behavior Detection Rules in your organization with pagination.
      operationId: listBehaviorDetectionRules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BehaviorRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.behaviors.read
      tags:
        - Behavior
    post:
      summary: Create a Behavior Detection Rule
      description: Adds a new Behavior Detection Rule to your organization.
      operationId: createBehaviorDetectionRule
      x-codegen-request-body-name: rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorRule'
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/behaviors/{behaviorId}:
    parameters:
      - $ref: '#/components/parameters/pathBehaviorId'
    get:
      summary: Retrieve a Behavior Detection Rule
      description: Fetches a Behavior Detection Rule by `behaviorId`.
      operationId: getBehaviorDetectionRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BehaviorRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.behaviors.read
      tags:
        - Behavior
    put:
      summary: Replace a Behavior Detection Rule
      description: Update a Behavior Detection Rule by `behaviorId`.
      operationId: updateBehaviorDetectionRule
      x-codegen-request-body-name: rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BehaviorRule'
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
        required: true
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.behaviors.manage
      tags:
        - Behavior
    delete:
      summary: Delete a Behavior Detection Rule
      description: Delete a Behavior Detection Rule by `behaviorId`.
      operationId: deleteBehaviorDetectionRule
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/behaviors/{behaviorId}/lifecycle/activate:
    post:
      summary: Activate a Behavior Detection Rule
      description: Activate Behavior Detection Rule
      operationId: activateBehaviorDetectionRule
      parameters:
        - $ref: '#/components/parameters/pathBehaviorId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/behaviors/{behaviorId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Behavior Detection Rule
      description: Deactivate Behavior Detection Rule
      operationId: deactivateBehaviorDetectionRule
      parameters:
        - $ref: '#/components/parameters/pathBehaviorId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BehaviorRule'
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.behaviors.manage
      tags:
        - Behavior
  /api/v1/brands:
    get:
      summary: List all Brands
      description: List all the brands in your org.
      operationId: listBrands
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}:
    parameters:
      - in: path
        name: brandId
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a Brand
      description: Fetches a brand by `brandId`
      operationId: getBrand
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace a Brand
      description: Updates a brand by `brandId`
      operationId: updateBrand
      x-codegen-request-body-name: brand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/error:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Error Page
      description: Retrieves the error page.
      operationId: retrieveErrorPage
      responses:
        '200':
          description: Successfully retrieved the error page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizablePage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Error Page
      description: Replaces the error page.
      operationId: replaceErrorPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomizablePage'
        required: true
      responses:
        '200':
          description: Successfully replaced the error page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizablePage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Reset the Error Page
      description: Resets the error page.
      operationId: resetErrorPage
      responses:
        '204':
          description: Successfully reset the error page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/error/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    post:
      summary: Preview the Error Page
      description: Previews the error page.
      operationId: previewErrorPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomizablePage'
        required: true
      responses:
        '200':
          description: Successfully previewed the error page.
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Sign-in Page
      description: Retrieves the sign-in page.
      operationId: retrieveSignInPage
      responses:
        '200':
          description: Successfully retrieved the sign-in page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Sign-in Page
      description: Replaces the sign-in page.
      operationId: replaceSignInPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the sign-in page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Reset the Sign-in Page
      description: Reset the sign-in page.
      operationId: resetSignInPage
      responses:
        '204':
          description: Successfully reset the sign-in page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    post:
      summary: Preview the Sign-in Page.
      description: Preview the sign-in page.
      operationId: previewSignInPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        '200':
          description: Successfully previewed the sign-in page.
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-in/widget-versions:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: List all Sign-in Widget Versions
      description: List all sign-in widget versions.
      operationId: listAllSignInWidgetVersions
      responses:
        '200':
          description: Successfully listed the sign-in widget versions.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  pattern: ^\d+\.\d+$
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/pages/sign-out:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: Retrieve the Sign-out Page Settings
      description: Retrieves the sign-out page settings.
      operationId: retrieveSignOutPageSettings
      responses:
        '200':
          description: Successfully retrieved the sign-out page settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace the Sign-out Page Settings
      description: Replaces the sign-out page settings.
      operationId: replaceSignOutPageSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostedPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the sign-out page settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
    get:
      summary: List all Email Templates
      description: Lists all email templates.
      operationId: listEmailTemplates
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - $ref: '#/components/parameters/queryExpandEmailTemplate'
      responses:
        '200':
          description: Successfully returned the list of email templates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailTemplate'
              examples:
                List email templates response:
                  $ref: '#/components/examples/ListEmailTemplateResponse'
          headers:
            Link:
              schema:
                type: string
              description: The pagination header containing links to the current and next page of results. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination) for more information.
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Retrieve an Email Template
      description: Gets the details of an email template by name.
      operationId: getEmailTemplate
      parameters:
        - $ref: '#/components/parameters/queryExpandEmailTemplate'
      responses:
        '200':
          description: Successfully retrieved the email template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
              examples:
                Get email template response:
                  $ref: '#/components/examples/GetEmailTemplateResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: List all Email Customizations
      description: Lists all customizations of an email template.
      operationId: listEmailCustomizations
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Successfully retrieved all email customizations for the specified email template.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailCustomization'
              examples:
                List Email customizations response:
                  $ref: '#/components/examples/ListEmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
    post:
      summary: Create an Email Customization
      description: Creates a new email customization.
      operationId: createEmailCustomization
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
            examples:
              Create email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
      responses:
        '201':
          description: Successfully created the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Create email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Could not create the email customization because it conflicts with an existing email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Customization
    delete:
      summary: Delete all Email Customizations
      description: Deletes all customizations for an email template.
      operationId: deleteAllCustomizations
      responses:
        '204':
          description: Successfully deleted all customizations for the email template.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
      - $ref: '#/components/parameters/pathCustomizationId'
    get:
      summary: Retrieve an Email Customization
      description: Gets an email customization by its unique identifier.
      operationId: getEmailCustomization
      responses:
        '200':
          description: Successfully retrieved the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Get email customization response:
                  $ref: '#/components/examples/EmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
    put:
      summary: Replace an Email Customization
      description: Updates an existing email customization using the property values provided.
      operationId: updateEmailCustomization
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
            examples:
              Update email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
        description: Request
      responses:
        '200':
          description: Successfully updated the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Update email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Could not update the email customization because the update would cause a conflict with an existing email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
                Cannot set the default email customization's isDefault to false:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotClearDefault'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Customization
    delete:
      summary: Delete an Email Customization
      description: Deletes an email customization by its unique identifier.
      operationId: deleteEmailCustomization
      responses:
        '204':
          description: Successfully deleted the email customization.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Could not delete the email customization deleted because it is the default email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot delete default email customization:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotDeleteDefault'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
      - $ref: '#/components/parameters/pathCustomizationId'
    get:
      summary: Preview an Email Customization
      description: Generates a preview of an email customization. All variable references (e.g., `${user.profile.firstName}`) are populated using the current user's context.
      operationId: getCustomizationPreview
      responses:
        '200':
          description: Successfully generated a preview of the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
              examples:
                Preview email customization response:
                  $ref: '#/components/examples/PreviewEmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Retrieve an Email Template Default Content
      description: Gets an email template's default content.
      operationId: getEmailDefaultContent
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '200':
          description: Successfully retrieved the email template's default content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDefaultContent'
              examples:
                Get email template default content response:
                  $ref: '#/components/examples/EmailTemplateDefaultContentResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Preview the Email Template Default Content
      description: Generates a preview of an email template's default content. All variable references (e.g., `${user.profile.firstName}`) are populated using the current user's context.
      operationId: getEmailDefaultPreview
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '200':
          description: Successfully generated a preview of the email template's default content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
              examples:
                Preview email template default content response:
                  $ref: '#/components/examples/PreviewEmailTemplateDefaultContentResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/settings:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    get:
      summary: Retrieve the Email Template Settings
      description: Gets an email template's settings.
      operationId: getEmailSettings
      responses:
        '200':
          description: Successfully retrieved the email template's settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSettings'
              examples:
                Get email template settings response:
                  $ref: '#/components/examples/EmailSettingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
    put:
      summary: Replace the Email Template Settings
      description: Updates an email template's settings.
      operationId: updateEmailSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSettings'
      responses:
        '204':
          description: Successfully updated the email template's settings.
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '422':
          description: Could not update the email template's settings due to an invalid setting value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Invalid email template recipients:
                  $ref: '#/components/examples/ErrorInvalidEmailTemplateRecipients'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/test:
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
    post:
      summary: Send a Test Email
      description: |-
        Sends a test email to the current user’s primary and secondary email addresses. The email content is selected based on the following priority:
        1. The email customization for the language specified in the `language` query parameter.
        2. The email template's default customization.
        3. The email template’s default content, translated to the current user's language.
      operationId: sendTestEmail
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '204':
          description: Successfully sent a test email.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes:
    parameters:
      - in: path
        name: brandId
        required: true
        schema:
          type: string
    get:
      summary: List all Themes
      description: List all the themes in your brand
      operationId: listBrandThemes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}:
    parameters:
      - in: path
        name: brandId
        required: true
        schema:
          type: string
      - in: path
        name: themeId
        required: true
        schema:
          type: string
    get:
      summary: Retrieve a Theme
      description: Fetches a theme for a brand
      operationId: getBrandTheme
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.read
      tags:
        - Customization
    put:
      summary: Replace a Theme
      description: Updates a theme for a brand
      operationId: updateBrandTheme
      x-codegen-request-body-name: theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/background-image:
    parameters:
      - in: path
        name: brandId
        required: true
        schema:
          type: string
      - in: path
        name: themeId
        required: true
        schema:
          type: string
    post:
      summary: Upload the Background Image
      description: Updates the background image for your Theme
      operationId: uploadBrandThemeBackgroundImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: The file must be in PNG, JPG, or GIF format and less than 2 MB in size.
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: background image file
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Background Image
      description: Deletes a Theme background image.
      operationId: deleteBrandThemeBackgroundImage
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/favicon:
    parameters:
      - in: path
        name: brandId
        required: true
        schema:
          type: string
      - in: path
        name: themeId
        required: true
        schema:
          type: string
    post:
      summary: Upload the Favicon
      description: Updates the favicon for your theme
      operationId: uploadBrandThemeFavicon
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: The file must be in PNG, or ico format and less than ?? in size and 128 x 128 dimensions
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: favicon file
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Favicon
      description: Deletes a Theme favicon. The theme will use the default Okta favicon.
      operationId: deleteBrandThemeFavicon
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/logo:
    parameters:
      - in: path
        name: brandId
        required: true
        schema:
          type: string
      - in: path
        name: themeId
        required: true
        schema:
          type: string
    post:
      summary: Upload the Logo
      description: Updates the logo for your Theme
      operationId: uploadBrandThemeLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: logo file
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
    delete:
      summary: Delete the Logo
      description: Deletes a Theme logo. The theme will use the default Okta logo.
      operationId: deleteBrandThemeLogo
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.brands.manage
      tags:
        - Customization
  /api/v1/captchas:
    get:
      summary: List all CAPTCHA instances
      description: Enumerates CAPTCHA instances in your organization with pagination. A subset of CAPTCHA instances can be returned that match a supported filter expression or query.
      operationId: listCaptchaInstances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CAPTCHAInstance'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.captchas.read
      tags:
        - CAPTCHA
    post:
      summary: Create a CAPTCHA instance
      description: Adds a new CAPTCHA instance to your organization. In the current release, we only allow one CAPTCHA instance per org.
      operationId: createCaptchaInstance
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Error Limit of One CAPTCHA instance per org:
                  $ref: '#/components/examples/ErrorCAPTCHALimitOfOne'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.captchas.manage
      tags:
        - CAPTCHA
  /api/v1/captchas/{captchaId}:
    parameters:
      - $ref: '#/components/parameters/pathCaptchaId'
    get:
      summary: Retrieve a CAPTCHA Instance
      description: Fetches a CAPTCHA instance by `captchaId`.
      operationId: getCaptchaInstance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.captchas.read
      tags:
        - CAPTCHA
    post:
      summary: Update a CAPTCHA instance
      description: Partially update a CAPTCHA instance by `captchaId`.
      operationId: partialUpdateCaptchaInstance
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.captchas.manage
      tags:
        - CAPTCHA
    put:
      summary: Replace a CAPTCHA instance
      description: Update a CAPTCHA instance by `captchaId`.
      operationId: updateCaptchaInstance
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.captchas.manage
      tags:
        - CAPTCHA
    delete:
      summary: Delete a CAPTCHA Instance
      description: Delete a CAPTCHA instance by `captchaId`. If the CAPTCHA instance is currently being used in the org, the delete will not be allowed.
      operationId: deleteCaptchaInstance
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Cannot remove CAPTCHA in use:
                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSetting'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.captchas.manage
      tags:
        - CAPTCHA
  /api/v1/device-assurances:
    get:
      summary: List all Device Assurance Policies
      description: Enumerates Device Assurance Policies in your organization.
      operationId: listDeviceAssurancePolicies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceAssurance'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.deviceAssurance.read
      tags:
        - DeviceAssurance
    post:
      summary: Create a Device Assurance Policy
      description: Adds a new Device Assurance Policy.
      operationId: createDeviceAssurancePolicy
      x-codegen-request-body-name: deviceAssurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAssurance'
            examples:
              ANDROID:
                $ref: '#/components/examples/DeviceAssuranceAndroidRequest'
              MACOS:
                $ref: '#/components/examples/DeviceAssuranceMacOSRequest'
              WINDOWS:
                $ref: '#/components/examples/DeviceAssuranceWindowsRequest'
              IOS:
                $ref: '#/components/examples/DeviceAssuranceIosRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
              examples:
                DeviceAssuranceResponse:
                  $ref: '#/components/examples/DeviceAssuranceResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.deviceAssurance.manage
      tags:
        - DeviceAssurance
  /api/v1/device-assurances/{deviceAssuranceId}:
    get:
      summary: Retrieve a Device Assurance Policy
      description: Fetches a Device Assurance Policy by `deviceAssuranceId`.
      operationId: getDeviceAssurancePolicy
      parameters:
        - $ref: '#/components/parameters/pathDeviceAssuranceId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
              examples:
                DeviceAssuranceResponse:
                  $ref: '#/components/examples/DeviceAssuranceResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.deviceAssurance.read
      tags:
        - DeviceAssurance
    put:
      summary: Replace a Device Assurance Policy
      description: Updates a Device Assurance Policy by `deviceAssuranceId`.
      operationId: updateDeviceAssurancePolicy
      parameters:
        - $ref: '#/components/parameters/pathDeviceAssuranceId'
      x-codegen-request-body-name: deviceAssurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAssurance'
            examples:
              DeviceAssuranceResponse:
                $ref: '#/components/examples/DeviceAssuranceResponse'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
              examples:
                DeviceAssuranceResponse:
                  $ref: '#/components/examples/DeviceAssuranceResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.deviceAssurance.manage
      tags:
        - DeviceAssurance
    delete:
      summary: Delete a Device Assurance Policy
      description: Delete a Device Assurance Policy by `deviceAssuranceId`. If the Device Assurance Policy is currently being used in the org Authentication Policies, the delete will not be allowed.
      operationId: deleteDeviceAssurancePolicy
      parameters:
        - $ref: '#/components/parameters/pathDeviceAssuranceId'
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot delete device assurance policy in use by authentication policies:
                  $ref: '#/components/examples/ErrorDeviceAssuranceInUse'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.deviceAssurance.manage
      tags:
        - DeviceAssurance
  /api/v1/domains:
    get:
      summary: List all Domains
      description: List all verified custom Domains for the org.
      operationId: listDomains
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.domains.read
      tags:
        - Domain
    post:
      summary: Create a Domain
      description: Creates your domain.
      operationId: createDomain
      x-codegen-request-body-name: domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.domains.manage
      tags:
        - Domain
  /api/v1/domains/{domainId}:
    get:
      summary: Retrieve a Domain
      description: Fetches a Domain by `id`.
      operationId: getDomain
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.domains.read
      tags:
        - Domain
    delete:
      summary: Delete a Domain
      description: Deletes a Domain by `id`.
      operationId: deleteDomain
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.domains.manage
      tags:
        - Domain
  /api/v1/domains/{domainId}/certificate:
    put:
      summary: Replace the Certificate
      description: Creates the Certificate for the Domain.
      operationId: createCertificate
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificate'
        required: true
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.domains.manage
      tags:
        - Domain
  /api/v1/domains/{domainId}/verify:
    post:
      summary: Verify a Domain
      description: Verifies the Domain by `id`.
      operationId: verifyDomain
      parameters:
        - name: domainId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.domains.manage
      tags:
        - Domain
  /api/v1/email-domains:
    get:
      summary: List all email domains
      description: List all the email domains in your org.
      operationId: listEmailDomains
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.email-domains.read
      tags:
        - EmailDomain
    post:
      summary: Create an Email Domain
      description: Creates a custom email domain.
      operationId: createEmailDomain
      x-codegen-request-body-name: emailDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDomain'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.email-domains.manage
      tags:
        - EmailDomain
  /api/v1/email-domains/{emailDomainId}:
    get:
      summary: Retrieve a Email Domain
      description: Fetches an Email Domain by `emailDomainId`.
      operationId: getEmailDomain
      parameters:
        - $ref: '#/components/parameters/pathEmailDomainId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.email-domains.read
      tags:
        - EmailDomain
    put:
      summary: Update an Email Domain
      description: Updates an email domain by `emailDomainId`
      operationId: updateEmailDomain
      parameters:
        - $ref: '#/components/parameters/pathEmailDomainId'
      x-codegen-request-body-name: updateEmailDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailDomain'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.email-domains.manage
      tags:
        - EmailDomain
    delete:
      summary: Delete an Email Domain
      description: Deletes an Email Domain by `emailDomainId`.
      operationId: deleteEmailDomain
      parameters:
        - $ref: '#/components/parameters/pathEmailDomainId'
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.email-domains.manage
      tags:
        - EmailDomain
  /api/v1/email-domains/{emailDomainId}/brands:
    get:
      summary: List all brands linked to an email domain
      description: List all brands linked to an email domain.
      operationId: listEmailDomainBrands
      parameters:
        - $ref: '#/components/parameters/pathEmailDomainId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.email-domains.read
      tags:
        - EmailDomain
  /api/v1/email-domains/{emailDomainId}/verify:
    post:
      summary: Verify Email Domain
      description: Verifies the Email Domain by `id`.
      operationId: verifyEmailDomain
      parameters:
        - $ref: '#/components/parameters/pathEmailDomainId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.email-domains.manage
      tags:
        - EmailDomain
  /api/v1/eventHooks:
    get:
      summary: List all Event Hooks
      description: Success
      operationId: listEventHooks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.read
      tags:
        - EventHook
    post:
      summary: Create an Event Hook
      description: Success
      operationId: createEventHook
      x-codegen-request-body-name: eventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}:
    get:
      summary: Retrieve an Event Hook
      description: Success
      operationId: getEventHook
      parameters:
        - name: eventHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.read
      tags:
        - EventHook
    put:
      summary: Replace an Event Hook
      description: Success
      operationId: updateEventHook
      parameters:
        - name: eventHookId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: eventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.manage
      tags:
        - EventHook
    delete:
      summary: Delete an Event Hook
      description: Success
      operationId: deleteEventHook
      parameters:
        - name: eventHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    post:
      summary: Activate an Event Hook
      description: Success
      operationId: activateEventHook
      parameters:
        - name: eventHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    post:
      summary: Deactivate an Event Hook
      description: Success
      operationId: deactivateEventHook
      parameters:
        - name: eventHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    post:
      summary: Verify an Event Hook
      description: Success
      operationId: verifyEventHook
      parameters:
        - name: eventHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.eventHooks.manage
      tags:
        - EventHook
  /api/v1/features:
    get:
      summary: List all Features
      description: Success
      operationId: listFeatures
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}:
    get:
      summary: Retrieve a Feature
      description: Success
      operationId: getFeature
      parameters:
        - name: featureId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}/dependencies:
    get:
      summary: List all Dependencies
      description: Success
      operationId: listFeatureDependencies
      parameters:
        - name: featureId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}/dependents:
    get:
      summary: List all Dependents
      description: Success
      operationId: listFeatureDependents
      parameters:
        - name: featureId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.features.read
      tags:
        - Feature
  /api/v1/features/{featureId}/{lifecycle}:
    post:
      summary: Update a Feature Lifecycle
      description: Success
      operationId: updateFeatureLifecycle
      parameters:
        - name: featureId
          in: path
          required: true
          schema:
            type: string
        - name: lifecycle
          in: path
          required: true
          schema:
            type: string
        - name: mode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.features.manage
      tags:
        - Feature
  /api/v1/groups:
    get:
      summary: List all Groups
      description: Enumerates groups in your organization with pagination. A subset of groups can be returned that match a supported filter expression or query.
      operationId: listGroups
      parameters:
        - name: q
          in: query
          description: Searches the name property of groups for matching value
          schema:
            type: string
        - name: search
          in: query
          description: Filter expression for groups
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of groups
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of group results in a page
          schema:
            type: integer
            format: int32
            default: 10000
        - name: expand
          in: query
          description: If specified, it causes additional metadata to be included in the response.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.read
      tags:
        - Group
    post:
      summary: Create a Group
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: createGroup
      x-codegen-request-body-name: group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules:
    get:
      summary: List all Group Rules
      description: Lists all group rules for your organization.
      operationId: listGroupRules
      parameters:
        - name: limit
          in: query
          description: Specifies the number of rule results in a page
          schema:
            type: integer
            format: int32
            default: 50
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of rules
          schema:
            type: string
        - name: search
          in: query
          description: Specifies the keyword to search fules for
          schema:
            type: string
        - name: expand
          in: query
          description: If specified as `groupIdToGroupNameMap`, then show group names
          schema:
            type: string
          x-okta-added-version: 1.3.0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.read
      tags:
        - Group
    post:
      summary: Create a Group Rule
      description: Creates a group rule to dynamically add users to the specified group if they match the condition
      operationId: createGroupRule
      x-codegen-request-body-name: groupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules/{ruleId}:
    get:
      summary: Retrieve a Group Rule
      description: Fetches a specific group rule by id from your organization
      operationId: getGroupRule
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.read
      tags:
        - Group
    put:
      summary: Replace a Group Rule
      description: Updates a group rule. Only `INACTIVE` rules can be updated.
      operationId: updateGroupRule
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: groupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
    delete:
      summary: Delete a group Rule
      description: Removes a specific group rule by id from your organization
      operationId: deleteGroupRule
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
        - name: removeUsers
          in: query
          description: Indicates whether to keep or remove users from groups assigned by this rule.
          schema:
            type: boolean
      responses:
        '202':
          description: Accepted
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules/{ruleId}/lifecycle/activate:
    post:
      summary: Activate a Group Rule
      description: Activates a specific group rule by id from your organization
      operationId: activateGroupRule
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Group Rule
      description: Deactivates a specific group rule by id from your organization
      operationId: deactivateGroupRule
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/{groupId}:
    get:
      summary: List all Group Rules
      description: Fetches a group from your organization.
      operationId: getGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.read
      tags:
        - Group
    put:
      summary: Replace a Group
      description: Updates the profile for a group with `OKTA_GROUP` type from your organization.
      operationId: updateGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
    delete:
      summary: Delete a Group
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: deleteGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/apps:
    get:
      summary: List all Assigned Applications
      description: Enumerates all applications that are assigned to a group.
      operationId: listAssignedApplicationsForGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of apps
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of app results for a page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.read
      tags:
        - Group
  /api/v1/groups/{groupId}/roles:
    get:
      summary: List all Assigned Roles
      description: Success
      operationId: listGroupAssignedRoles
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - Group
    post:
      summary: Assign a Role
      description: Assigns a Role to a Group
      operationId: assignRoleToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: disableNotifications
          in: query
          schema:
            type: boolean
      x-codegen-request-body-name: assignRoleRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '201':
          description: Success
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/roles/{roleId}:
    get:
      summary: Retrieve a Role
      description: Success
      operationId: getRole
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - Group
    delete:
      summary: Delete a Role
      description: Unassigns a Role from a Group
      operationId: removeRoleFromGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
    get:
      summary: List all Application Targets for an Application Administrator Role
      description: Lists all App targets for an `APP_ADMIN` Role assigned to a Group. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
    put:
      summary: Assign an Application Target to Administrator Role
      description: Success
      operationId: addApplicationTargetToAdminRoleGivenToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
    delete:
      summary: Delete an Application Target from Application Administrator Role
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    put:
      summary: Assign an Application Instance Target to Application Administrator Role
      description: Add App Instance Target to App Administrator Role given to a Group
      operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
    delete:
      summary: Delete an Application Instance Target to Application Administrator Role
      description: Remove App Instance Target to App Administrator Role given to a Group
      operationId: removeApplicationTargetFromAdministratorRoleGivenToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
    get:
      summary: List all Group Targets for a Group Role
      description: Enumerates group targets for a group role.
      operationId: listGroupTargetsForGroupRole
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
    put:
      summary: Assign a Group Target for Group Role
      description: Enumerates group targets for a group role.
      operationId: addGroupTargetToGroupAdministratorRoleForGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: targetGroupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
    delete:
      summary: Delete a Group Target for Group Role
      description: remove group target for a group role.
      operationId: removeGroupTargetFromGroupAdministratorRoleGivenToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: targetGroupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Group
  /api/v1/groups/{groupId}/users:
    get:
      summary: List all Member Users
      description: Enumerates all users that are a member of a group.
      operationId: listGroupUsers
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of users
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of user results in a page
          schema:
            type: integer
            format: int32
            default: 1000
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.read
      tags:
        - Group
  /api/v1/groups/{groupId}/users/{userId}:
    put:
      summary: Assign a User
      description: Adds a user to a group with 'OKTA_GROUP' type.
      operationId: addUserToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
    delete:
      summary: Unassign a User
      description: Removes a user from a group with 'OKTA_GROUP' type.
      operationId: removeUserFromGroup
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.groups.manage
      tags:
        - Group
  /api/v1/idps:
    get:
      summary: List all Identity Providers
      description: Enumerates IdPs in your organization with pagination. A subset of IdPs can be returned that match a supported filter expression or query.
      operationId: listIdentityProviders
      parameters:
        - name: q
          in: query
          description: Searches the name property of IdPs for matching value
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of IdPs
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of IdP results in a page
          schema:
            type: integer
            format: int32
            default: 20
        - name: type
          in: query
          description: Filters IdPs by type
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Create an Identity Provider
      description: Adds a new IdP to your organization.
      operationId: createIdentityProvider
      x-codegen-request-body-name: identityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/credentials/keys:
    get:
      summary: List all Credential Keys
      description: Enumerates IdP key credentials.
      operationId: listIdentityProviderKeys
      parameters:
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of keys
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of key results in a page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Create an X.509 Certificate Public Key
      description: Adds a new X.509 certificate credential to the IdP key store.
      operationId: createIdentityProviderKey
      x-codegen-request-body-name: jsonWebKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/credentials/keys/{keyId}:
    get:
      summary: Retrieve an Credential Key
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderKey
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
    delete:
      summary: Delete a Signing Credential Key
      description: Deletes a specific IdP Key Credential by `kid` if it is not currently being used by an Active or Inactive IdP.
      operationId: deleteIdentityProviderKey
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}:
    get:
      summary: Retrieve an Identity Provider
      description: Fetches an IdP by `id`.
      operationId: getIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
    put:
      summary: Replace an Identity Provider
      description: Updates the configuration for an IdP.
      operationId: updateIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: identityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
    delete:
      summary: Delete an Identity Provider
      description: Removes an IdP from your organization.
      operationId: deleteIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs:
    get:
      summary: List all Certificate Signing Requests
      description: Enumerates Certificate Signing Requests for an IdP
      operationId: listCsrsForIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Generate a Certificate Signing Request
      description: Generates a new key pair and returns a Certificate Signing Request for it.
      operationId: generateCsrForIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}:
    get:
      summary: Retrieve a Certificate Signing Request
      description: Gets a specific Certificate Signing Request model by id
      operationId: getCsrForIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: csrId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
    delete:
      summary: Revoke a Certificate Signing Request
      description: Revoke a Certificate Signing Request and delete the key pair from the IdP
      operationId: revokeCsrForIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: csrId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      summary: Publish a Certificate Signing Request
      description: Update the Certificate Signing Request with a signed X.509 certificate and add it into the signing key credentials for the IdP.
      operationId: publishCsrForIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: csrId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-x509-ca-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryCerCertForIdentityProvider
          application/pkix-cert:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryDerCertForIdentityProvider
          application/x-pem-file:
            schema:
              type: string
              format: binary
              x-okta-operationId: publishBinaryPemCertForIdentityProvider
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys:
    get:
      summary: List all Signing Credential Keys
      description: Enumerates signing key credentials for an IdP
      operationId: listIdentityProviderSigningKeys
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/generate:
    post:
      summary: Generate a new Signing Credential Key
      description: Generates a new X.509 certificate for an IdP signing key credential to be used for signing assertions sent to the IdP
      operationId: generateIdentityProviderSigningKey
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: validityYears
          in: query
          description: expiry of the IdP Key Credential
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{keyId}:
    get:
      summary: Retrieve a Signing Credential Key
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderSigningKey
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:
    post:
      summary: Clone a Signing Credential Key
      description: Clones a X.509 certificate for an IdP signing key credential from a source IdP to target IdP
      operationId: cloneIdentityProviderKey
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
        - name: targetIdpId
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/activate:
    post:
      summary: Activate an Identity Provider
      description: Activates an inactive IdP.
      operationId: activateIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    post:
      summary: Deactivate an Identity Provider
      description: Deactivates an active IdP.
      operationId: deactivateIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/users:
    get:
      summary: List all Users
      description: Find all the users linked to an identity provider
      operationId: listIdentityProviderApplicationUsers
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/users/{userId}:
    get:
      summary: Retrieve a User
      description: Fetches a linked IdP user by ID
      operationId: getIdentityProviderApplicationUser
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
    post:
      summary: Link a User to a Social IdP
      description: Links an Okta user to an existing Social Identity Provider. This does not support the SAML2 Identity Provider Type
      operationId: linkUserToIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: userIdentityProviderLinkRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - IdentityProvider
    delete:
      summary: Unlink a User from IdP
      description: Removes the link between the Okta user and the IdP user.
      operationId: unlinkUserFromIdentityProvider
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.manage
      tags:
        - IdentityProvider
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    get:
      summary: List all Tokens from a OIDC Identity Provider
      description: Fetches the tokens minted by the Social Authentication Provider when the user authenticates with Okta via Social Auth.
      operationId: listSocialAuthTokens
      parameters:
        - name: idpId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialAuthToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.idps.read
      tags:
        - IdentityProvider
  /api/v1/inlineHooks:
    get:
      summary: List all Inline Hooks
      description: Success
      operationId: listInlineHooks
      parameters:
        - name: type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InlineHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.read
      tags:
        - InlineHook
    post:
      summary: Create an Inline Hook
      description: Success
      operationId: createInlineHook
      x-codegen-request-body-name: inlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}:
    get:
      summary: Retrieve an Inline Hook
      description: Gets an inline hook by ID
      operationId: getInlineHook
      parameters:
        - name: inlineHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.read
      tags:
        - InlineHook
    put:
      summary: Replace an Inline Hook
      description: Updates an inline hook by ID
      operationId: updateInlineHook
      parameters:
        - name: inlineHookId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: inlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
    delete:
      summary: Delete an Inline Hook
      description: Deletes the Inline Hook matching the provided id. Once deleted, the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks with a status of INACTIVE are eligible for deletion.
      operationId: deleteInlineHook
      parameters:
        - name: inlineHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}/execute:
    post:
      summary: Execute an Inline Hook
      description: Executes the Inline Hook matching the provided inlineHookId using the request body as the input. This will send the provided data through the Channel and return a response if it matches the correct data contract. This execution endpoint should only be used for testing purposes.
      operationId: executeInlineHook
      parameters:
        - name: inlineHookId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: payloadData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookPayload'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
    post:
      summary: Activate an Inline Hook
      description: Activates the Inline Hook matching the provided id
      operationId: activateInlineHook
      parameters:
        - name: inlineHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
    post:
      summary: Deactivate an Inline Hook
      description: Deactivates the Inline Hook matching the provided id
      operationId: deactivateInlineHook
      parameters:
        - name: inlineHookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
  /api/v1/logs:
    get:
      summary: List all System Log Events
      description: The Okta System Log API provides read access to your organization’s system log. This API provides more functionality than the Events API
      operationId: getLogs
      parameters:
        - name: since
          in: query
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          schema:
            type: string
            format: date-time
        - name: filter
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
        - name: sortOrder
          in: query
          schema:
            type: string
            default: ASCENDING
        - name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogEvent'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.logs.read
      tags:
        - SystemLog
  /api/v1/mappings:
    get:
      summary: List all Profile Mappings
      description: Enumerates Profile Mappings in your organization with pagination.
      operationId: listProfileMappings
      parameters:
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
        - name: sourceId
          in: query
          schema:
            type: string
        - name: targetId
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileMapping'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.profileMappings.read
      tags:
        - ProfileMapping
  /api/v1/mappings/{mappingId}:
    get:
      summary: Retrieve a Profile Mapping
      description: Fetches a single Profile Mapping referenced by its ID.
      operationId: getProfileMapping
      parameters:
        - name: mappingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.profileMappings.read
      tags:
        - ProfileMapping
    post:
      summary: Update a Profile Mapping
      description: Updates an existing Profile Mapping by adding, updating, or removing one or many Property Mappings.
      operationId: updateProfileMapping
      parameters:
        - name: mappingId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: profileMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileMapping'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.profileMappings.manage
      tags:
        - ProfileMapping
  /api/v1/meta/layouts/apps/{appName}:
    get:
      summary: Retrieve the UI Layout for an Application
      description: Takes an Application name as an input parameter and retrieves the App Instance page Layout for that Application.
      operationId: getApplicationLayout
      parameters:
        - name: appName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLayout'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.schemas.read
      tags:
        - Schema
  /api/v1/meta/schemas/apps/{appInstanceId}/default:
    get:
      summary: Retrieve the default Application User Schema for an Application
      description: Fetches the Schema for an App User
      operationId: getApplicationUserSchema
      parameters:
        - name: appInstanceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.schemas.read
      tags:
        - Schema
    post:
      summary: Update the default Application User Schema for an Application
      description: Partial updates on the User Profile properties of the Application User Schema.
      operationId: updateApplicationUserProfile
      parameters:
        - name: appInstanceId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.schemas.manage
      tags:
        - Schema
  /api/v1/meta/schemas/group/default:
    get:
      summary: Retrieve the default Group Schema
      description: Fetches the group schema
      operationId: getGroupSchema
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.schemas.read
      tags:
        - Schema
    post:
      summary: Update the default Group Schema
      description: Updates, adds or removes one or more custom Group Profile properties in the schema
      operationId: updateGroupSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSchema'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.schemas.manage
      tags:
        - Schema
  /api/v1/meta/schemas/user/linkedObjects:
    get:
      summary: List all Linked Object Definitions
      description: Success
      operationId: listLinkedObjectDefinitions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LinkedObject'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.linkedObjects.read
      tags:
        - LinkedObject
    post:
      summary: Create a Linked Object Definition
      description: Success
      operationId: addLinkedObjectDefinition
      x-codegen-request-body-name: linkedObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedObject'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.linkedObjects.manage
      tags:
        - LinkedObject
  /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:
    get:
      summary: Retrieve a Linked Object Definition
      description: Success
      operationId: getLinkedObjectDefinition
      parameters:
        - name: linkedObjectName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.linkedObjects.read
      tags:
        - LinkedObject
    delete:
      summary: Delete a Linked Object Definition
      description: Success
      operationId: deleteLinkedObjectDefinition
      parameters:
        - name: linkedObjectName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.linkedObjects.manage
      tags:
        - LinkedObject
  /api/v1/meta/schemas/user/{schemaId}:
    get:
      summary: Retrieve a User Schema
      description: Fetches the schema for a Schema Id.
      operationId: getUserSchema
      parameters:
        - name: schemaId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.schemas.read
      tags:
        - Schema
    post:
      summary: Update a User Schema
      description: Partial updates on the User Profile properties of the user schema.
      operationId: updateUserProfile
      parameters:
        - name: schemaId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: userSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.schemas.manage
      tags:
        - Schema
  /api/v1/meta/types/user:
    get:
      summary: List all User Types
      description: Fetches all User Types in your org
      operationId: listUserTypes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserType'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.userTypes.read
      tags:
        - UserType
    post:
      summary: Create a User Type
      description: Creates a new User Type. A default User Type is automatically created along with your org, and you may add another 9 User Types for a maximum of 10.
      operationId: createUserType
      x-codegen-request-body-name: userType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.userTypes.manage
      tags:
        - UserType
  /api/v1/meta/types/user/{typeId}:
    get:
      summary: Retrieve a User Type
      description: Fetches a User Type by ID. The special identifier `default` may be used to fetch the default User Type.
      operationId: getUserType
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.userTypes.read
      tags:
        - UserType
    post:
      summary: Update a User Type
      description: Updates an existing User Type
      operationId: updateUserType
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: userType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.userTypes.manage
      tags:
        - UserType
    put:
      summary: Replace a User Type
      description: Replace an existing User Type
      operationId: replaceUserType
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: userType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.userTypes.manage
      tags:
        - UserType
    delete:
      summary: Delete a User Type
      description: Deletes a User Type permanently. This operation is not permitted for the default type, nor for any User Type that has existing users
      operationId: deleteUserType
      parameters:
        - name: typeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.userTypes.manage
      tags:
        - UserType
  /api/v1/org:
    get:
      summary: Retrieve the Org Settings
      description: Get settings of your organization.
      operationId: getOrgSettings
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.read
      tags:
        - OrgSetting
    post:
      summary: Update the Org Settings
      description: Partial update settings of your organization.
      operationId: partialUpdateOrgSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
    put:
      summary: Replace the Org Settings
      description: Update settings of your organization.
      operationId: updateOrgSetting
      x-codegen-request-body-name: orgSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/contacts:
    get:
      summary: Retrieve the Org Contact Types
      description: Gets Contact Types of your organization.
      operationId: getOrgContactTypes
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrgContactTypeObj'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/contacts/{contactType}:
    get:
      summary: Retrieve the User of the Contact Type
      description: Retrieves the URL of the User associated with the specified Contact Type.
      operationId: getOrgContactUser
      parameters:
        - in: path
          name: contactType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.read
      tags:
        - OrgSetting
    put:
      summary: Replace the User of the Contact Type
      description: Updates the User associated with the specified Contact Type.
      operationId: updateOrgContactUser
      parameters:
        - in: path
          name: contactType
          required: true
          schema:
            type: string
      x-codegen-request-body-name: orgContactUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgContactUser'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/email/bounces/remove-list:
    post:
      summary: Remove Emails from Email Provider Bounce List
      description: A list of email addresses to be removed from the set of email addresses that are bounced.
      operationId: bulkRemoveEmailAddressBounces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BouncesRemoveListObj'
            examples:
              example-1:
                value:
                  emailAddresses:
                    - name@company.com
                    - unknown.email@okta.com
                    - name@okta@com
      responses:
        '200':
          description: Removes the provided list of emails from the set of email addresses that are bounced so that the provider resumes sending emails to those addresses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BouncesRemoveListResult'
              examples:
                example-1:
                  value:
                    errors:
                      - emailAddress: unknown.email@okta.com
                        reason: This email address does not belong to any user in your organization.
                      - emailAddress: name@okta@com
                        reason: Invalid email address. The provided email address failed validation against RFC 3696.
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/logo:
    post:
      summary: Upload the Org Logo
      description: Updates the logo for your organization.
      operationId: updateOrgLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: The file must be in PNG, JPG, or GIF format and less than 100kB in size. For best results use landscape orientation, a transparent background, and a minimum size of 300px by 50px to prevent upscaling.
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: logo file
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.apps.manage
      tags:
        - OrgSetting
  /api/v1/org/preferences:
    get:
      summary: Retrieve the Org Preferences
      description: Gets preferences of your organization.
      operationId: getOrgPreferences
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/preferences/hideEndUserFooter:
    post:
      summary: Update the Preference to Hide the Okta Dashboard Footer
      description: Hide the Okta UI footer for all end users of your organization.
      operationId: hideOktaUIFooter
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/preferences/showEndUserFooter:
    post:
      summary: Update the Preference to Show the Okta Dashboard Footer
      description: Makes the Okta UI footer visible for all end users of your organization.
      operationId: showOktaUIFooter
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaCommunication:
    get:
      summary: Retreive the Okta Communication Settings
      description: Gets Okta Communication Settings of your organization.
      operationId: getOktaCommunicationSettings
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaCommunication/optIn:
    post:
      summary: Opt in all Users to Okta Communication emails
      description: Opts in all users of this org to Okta Communication emails.
      operationId: optInUsersToOktaCommunicationEmails
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaCommunication/optOut:
    post:
      summary: Opt out all Users from Okta Communication emails
      description: Opts out all users of this org from Okta Communication emails.
      operationId: optOutUsersFromOktaCommunicationEmails
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport:
    get:
      summary: Retrieve the Okta Support Settings
      description: Gets Okta Support Settings of your organization.
      operationId: getOrgOktaSupportSettings
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.read
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport/extend:
    post:
      summary: Extend Okta Support Access
      description: Extends the length of time that Okta Support can access your org by 24 hours. This means that 24 hours are added to the remaining access time.
      operationId: extendOktaSupport
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport/grant:
    post:
      summary: Grant Okta Support Access to your Org
      description: Enables you to temporarily allow Okta Support to access your org as an administrator for eight hours.
      operationId: grantOktaSupport
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/org/privacy/oktaSupport/revoke:
    post:
      summary: Revoke Okta Support Access
      description: Revokes Okta Support access to your organization.
      operationId: revokeOktaSupport
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.orgs.manage
      tags:
        - OrgSetting
  /api/v1/policies:
    get:
      summary: List all Policies
      description: Gets all policies with the specified type.
      operationId: listPolicies
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Policy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.read
      tags:
        - Policy
    post:
      summary: Create a Policy
      description: Creates a policy.
      operationId: createPolicy
      parameters:
        - name: activate
          in: query
          schema:
            type: boolean
            default: true
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}:
    get:
      summary: Retrieve a Policy
      description: Gets a policy.
      operationId: getPolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.read
      tags:
        - Policy
    put:
      summary: Replace a Policy
      description: Updates a policy.
      operationId: updatePolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
    delete:
      summary: Delete a Policy
      description: Removes a policy.
      operationId: deletePolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/clone:
    post:
      summary: Clone an existing policy
      description: Clones an existing policy.
      operationId: clonePolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/lifecycle/activate:
    post:
      summary: Activate a Policy
      description: Activates a policy.
      operationId: activatePolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Policy
      description: Deactivates a policy.
      operationId: deactivatePolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules:
    get:
      summary: List all Policy Rules
      description: Enumerates all policy rules.
      operationId: listPolicyRules
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.read
      tags:
        - Policy
    post:
      summary: Create a Policy Rule
      description: Creates a policy rule.
      operationId: createPolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules/{ruleId}:
    get:
      summary: Retrieve a Policy Rule
      description: Gets a policy rule.
      operationId: getPolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.read
      tags:
        - Policy
    put:
      summary: Replace a Policy Rule
      description: Updates a policy rule.
      operationId: updatePolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: policyRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
    delete:
      summary: Delete a Policy Rule
      description: Removes a policy rule.
      operationId: deletePolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      summary: Activate a Policy Rule
      description: Activates a policy rule.
      operationId: activatePolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Policy Rule
      description: Deactivates a policy rule.
      operationId: deactivatePolicyRule
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.policies.manage
      tags:
        - Policy
  /api/v1/principal-rate-limits:
    get:
      summary: List all Principal Rate Limits
      description: Lists all Principal Rate Limit entities considering the provided parameters.
      operationId: listPrincipalRateLimitEntities
      parameters:
        - name: filter
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
            maximum: 50
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrincipalRateLimitEntity'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.principalRateLimits.read
      tags:
        - PrincipalRateLimit
    post:
      summary: Create a Principal Rate Limit
      description: Adds a new Principal Rate Limit entity to your organization. In the current release, we only allow one Principal Rate Limit entity per org and principal.
      operationId: createPrincipalRateLimitEntity
      x-codegen-request-body-name: entity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.principalRateLimits.manage
      tags:
        - PrincipalRateLimit
  /api/v1/principal-rate-limits/{principalRateLimitId}:
    parameters:
      - $ref: '#/components/parameters/pathPrincipalRateLimitId'
    get:
      summary: Retrieve a Principal Rate Limit
      description: Fetches a Principal Rate Limit entity by `principalRateLimitId`.
      operationId: getPrincipalRateLimitEntity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.principalRateLimits.read
      tags:
        - PrincipalRateLimit
    put:
      summary: Replace a Principal Rate Limit
      description: Update a  Principal Rate Limit entity by `principalRateLimitId`.
      operationId: updatePrincipalRateLimitEntity
      x-codegen-request-body-name: entity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.principalRateLimits.manage
      tags:
        - PrincipalRateLimit
  /api/v1/push-providers:
    get:
      summary: List all Push Providers
      description: Enumerates push providers in your organization.
      operationId: listPushProviders
      parameters:
        - name: type
          in: query
          description: Filters push providers by `providerType`
          schema:
            $ref: '#/components/schemas/ProviderType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PushProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.pushProviders.read
      tags:
        - PushProvider
    post:
      summary: Create a Push Provider
      description: Adds a new push provider to your organization.
      operationId: createPushProvider
      x-codegen-request-body-name: pushProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushProvider'
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushProvider'
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.pushProviders.manage
      tags:
        - PushProvider
  /api/v1/push-providers/{pushProviderId}:
    get:
      summary: Retrieve a Push Provider
      description: Fetches a push provider by `pushProviderId`.
      operationId: getPushProvider
      parameters:
        - $ref: '#/components/parameters/pathPushProviderId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushProvider'
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.pushProviders.read
      tags:
        - PushProvider
    put:
      summary: Replace a Push Provider
      description: Updates a push provider by `pushProviderId`.
      operationId: updatePushProvider
      parameters:
        - $ref: '#/components/parameters/pathPushProviderId'
      x-codegen-request-body-name: pushProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushProvider'
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushProvider'
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.pushProviders.manage
      tags:
        - PushProvider
    delete:
      summary: Delete a Push Provider
      description: Delete a push provider by `pushProviderId`. If the push provider is currently being used in the org by a custom authenticator, the delete will not be allowed.
      operationId: deletePushProvider
      parameters:
        - $ref: '#/components/parameters/pathPushProviderId'
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot remove push provider in use by a custom app authenticator:
                  $ref: '#/components/examples/ErrorPushProviderUsedByCustomAppAuthenticator'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.pushProviders.manage
      tags:
        - PushProvider
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions:
    get:
      summary: List all Subscriptions of a Custom Role
      description: When roleType List all subscriptions of a Role. Else when roleId List subscriptions of a Custom Role
      operationId: listRoleSubscriptions
      parameters:
        - in: path
          name: roleTypeOrRoleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - Subscription
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}:
    get:
      summary: List all Subscriptions of a Custom Role with a specific notification type
      description: When roleType Get subscriptions of a Role with a specific notification type. Else when roleId Get subscription of a Custom Role with a specific notification type.
      operationId: getRoleSubscriptionByNotificationType
      parameters:
        - in: path
          name: roleTypeOrRoleId
          required: true
          schema:
            type: string
        - in: path
          name: notificationType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - Subscription
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/subscribe:
    post:
      summary: Subscribe a Custom Role to a specific notification type
      description: When roleType Subscribes a Role to a specific notification type. When you change the subscription status of a Role, it overrides the subscription of any individual user of that Role. Else when roleId Subscribes a Custom Role to a specific notification type. When you change the subscription status of a Custom Role, it overrides the subscription of any individual user of that Custom Role.
      operationId: subscribeRoleSubscriptionByNotificationType
      parameters:
        - in: path
          name: roleTypeOrRoleId
          required: true
          schema:
            type: string
        - in: path
          name: notificationType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Subscription
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/unsubscribe:
    post:
      summary: Unsubscribe a Custom Role from a specific notification type
      description: When roleType Unsubscribes a Role from a specific notification type. When you change the subscription status of a Role, it overrides the subscription of any individual user of that Role. Else when roleId Unsubscribes a Custom Role from a specific notification type. When you change the subscription status of a Custom Role, it overrides the subscription of any individual user of that Custom Role.
      operationId: unsubscribeRoleSubscriptionByNotificationType
      parameters:
        - in: path
          name: roleTypeOrRoleId
          required: true
          schema:
            type: string
        - in: path
          name: notificationType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - Subscription
  /api/v1/sessions:
    post:
      summary: Create a Session with Session Token
      description: Creates a new session for a user with a valid session token. Use this API if, for example, you want to set the session cookie yourself instead of allowing Okta to set it, or want to hold the session ID in order to delete a session via the API instead of visiting the logout URL.
      operationId: createSession
      x-codegen-request-body-name: createSessionRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
      tags:
        - Session
  /api/v1/sessions/{sessionId}:
    get:
      summary: Retrieve a Session
      description: Get details about a session.
      operationId: getSession
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad Request
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.sessions.read
      tags:
        - Session
    delete:
      summary: Delete a Session
      description: End a session.
      operationId: endSession
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.sessions.manage
      tags:
        - Session
  /api/v1/sessions/{sessionId}/lifecycle/refresh:
    post:
      summary: Refresh a Session
      description: Refresh a session.
      operationId: refreshSession
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.sessions.manage
      tags:
        - Session
  /api/v1/templates/sms:
    get:
      summary: List all SMS Templates
      description: Enumerates custom SMS templates in your organization. A subset of templates can be returned that match a template type.
      operationId: listSmsTemplates
      parameters:
        - name: templateType
          in: query
          schema:
            $ref: '#/components/schemas/SmsTemplateType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmsTemplate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Template
    post:
      summary: Create an SMS Template
      description: Adds a new custom SMS template to your organization.
      operationId: createSmsTemplate
      x-codegen-request-body-name: smsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Template
  /api/v1/templates/sms/{templateId}:
    get:
      summary: Retrieve an SMS Template
      description: Fetches a specific template by `id`
      operationId: getSmsTemplate
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.read
      tags:
        - Template
    post:
      summary: Update an SMS Template
      description: 'Updates only some of the SMS template properties:'
      operationId: partialUpdateSmsTemplate
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: smsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Template
    put:
      summary: Replace an SMS Template
      description: Updates the SMS template.
      operationId: updateSmsTemplate
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: smsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Template
    delete:
      summary: Delete an SMS Template
      description: Removes an SMS template.
      operationId: deleteSmsTemplate
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.templates.manage
      tags:
        - Template
  /api/v1/threats/configuration:
    get:
      summary: Retrieve the ThreatInsight Configuration
      description: Gets current ThreatInsight configuration
      operationId: getCurrentConfiguration
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.threatInsights.read
      tags:
        - ThreatInsight
    post:
      summary: Update the ThreatInsight Configuration
      description: Updates ThreatInsight configuration
      operationId: updateConfiguration
      x-codegen-request-body-name: threatInsightConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatInsightConfiguration'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.threatInsights.manage
      tags:
        - ThreatInsight
  /api/v1/trustedOrigins:
    get:
      summary: List all Trusted Origins
      description: Success
      operationId: listOrigins
      parameters:
        - name: q
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.trustedOrigins.read
      tags:
        - TrustedOrigin
    post:
      summary: Create a Trusted Origin
      description: Success
      operationId: createOrigin
      x-codegen-request-body-name: trustedOrigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}:
    get:
      summary: Retrieve a Trusted Origin
      description: Success
      operationId: getOrigin
      parameters:
        - name: trustedOriginId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.trustedOrigins.read
      tags:
        - TrustedOrigin
    put:
      summary: Replace a Trusted Origin
      description: Success
      operationId: updateOrigin
      parameters:
        - name: trustedOriginId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: trustedOrigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
    delete:
      summary: Delete a Trusted Origin
      description: Success
      operationId: deleteOrigin
      parameters:
        - name: trustedOriginId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:
    post:
      summary: Activate a Trusted Origin
      description: Success
      operationId: activateOrigin
      parameters:
        - name: trustedOriginId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Trusted Origin
      description: Success
      operationId: deactivateOrigin
      parameters:
        - name: trustedOriginId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.trustedOrigins.manage
      tags:
        - TrustedOrigin
  /api/v1/users:
    get:
      summary: List all Users
      description: Lists users in your organization with pagination in most cases.  A subset of users can be returned that match a supported filter expression or search criteria.
      operationId: listUsers
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - name: q
          in: query
          description: Finds a user that matches firstName, lastName, and email properties
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results returned. Defaults to 10 if `q` is provided.
          schema:
            type: integer
            format: int32
            default: 200
        - name: filter
          in: query
          description: Filters users with a supported expression for a subset of properties
          schema:
            type: string
        - name: search
          in: query
          description: Searches for users with a supported filtering  expression for most properties
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: sortOrder
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                User List:
                  $ref: '#/components/examples/ListUsersResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    post:
      summary: Create a User
      description: Creates a new user in your Okta organization with or without credentials.
      operationId: createUser
      parameters:
        - name: activate
          in: query
          description: Executes activation lifecycle operation when creating the user
          schema:
            type: boolean
            default: true
        - name: provider
          in: query
          description: Indicates whether to create a user with a specified authentication provider
          schema:
            type: boolean
            default: false
        - name: nextLogin
          in: query
          description: With activate=true, set nextLogin to "changePassword" to have the password be EXPIRED, so user must change it the next time they log in.
          schema:
            $ref: '#/components/schemas/UserNextLogin'
          x-okta-added-version: 0.14.0
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Create user with too many groups specified:
                  $ref: '#/components/examples/ErrorCreateUserWithTooManyManyGroupsResponse'
                Create user with expired password and activate set to `false`:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithoutActivation'
                Create user with expired password and `null` password:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithNullPassword'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
    put:
      summary: Create a Linked Object for two User
      description: Sets a linked object for two users.
      operationId: setLinkedObjectForUser
      parameters:
        - name: associatedUserId
          in: path
          required: true
          schema:
            type: string
        - name: primaryRelationshipName
          in: path
          required: true
          schema:
            type: string
        - name: primaryUserId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}:
    get:
      summary: Retrieve a User
      description: Fetches a user from your Okta organization.
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/pathUserId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    post:
      summary: Update a User
      description: Fetch a user by `id`, `login`, or `login shortname` if the short name is unambiguous.
      operationId: partialUpdateUser
      parameters:
        - $ref: '#/components/parameters/pathUserId'
        - name: strict
          in: query
          schema:
            type: boolean
      x-codegen-request-body-name: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
    put:
      summary: Replace a User
      description: Update a user's profile and/or credentials using strict-update semantics.
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/pathUserId'
        - name: strict
          in: query
          schema:
            type: boolean
          x-okta-added-version: 1.10.0
      x-codegen-request-body-name: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
    delete:
      summary: Delete a User
      description: Deletes a user permanently.  This operation can only be performed on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**
      operationId: deactivateOrDeleteUser
      parameters:
        - $ref: '#/components/parameters/pathUserId'
        - name: sendEmail
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/appLinks:
    get:
      summary: List all Assigned Application Links
      description: Fetches appLinks for all direct or indirect (via group membership) assigned applications.
      operationId: listAppLinks
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppLink'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/clients:
    get:
      summary: List all Clients
      description: Lists all client resources for which the specified user has grants or tokens.
      operationId: listUserClients
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Client'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/clients/{clientId}/grants:
    get:
      summary: List all Grants for a Client
      description: Lists all grants for a specified user and client
      operationId: listGrantsForUserAndClient
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke all Grants for a Client
      description: Revokes all grants for the specified user and client
      operationId: revokeGrantsForUserAndClient
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/clients/{clientId}/tokens:
    get:
      summary: List all Refresh Tokens for a Client
      description: Lists all refresh tokens issued for the specified User and Client.
      operationId: listRefreshTokensForUserAndClient
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke all Refresh Tokens for a Client
      description: Revokes all refresh tokens issued for the specified User and Client.
      operationId: revokeTokensForUserAndClient
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
    get:
      summary: Retrieve a Refresh Token for a Client
      description: Gets a refresh token issued for the specified User and Client.
      operationId: getRefreshTokenForUserAndClient
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: after
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke a Token for a Client
      description: Revokes the specified refresh token.
      operationId: revokeTokenForUserAndClient
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/change_password:
    post:
      summary: Change Password
      description: Changes a user's password by validating the user's current password. This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid password credential
      operationId: changePassword
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: strict
          in: query
          schema:
            type: boolean
          x-okta-added-version: 1.10.0
      x-codegen-request-body-name: changePasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/change_recovery_question:
    post:
      summary: Change Recovery Question
      description: Changes a user's recovery question & answer credential by validating the user's current password.  This operation can only be performed on users in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password credential
      operationId: changeRecoveryQuestion
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: userCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/forgot_password:
    post:
      summary: Initiate Forgot Password
      description: Initiate forgot password flow. Generates a one-time token (OTT) that can be used to reset a user's password.
      operationId: forgotPassword
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: sendEmail
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Reset url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/credentials/forgot_password_recovery_question:
    post:
      summary: Reset Password with Recovery Question
      description: Resets the user's password to the specified password if the provided answer to the recovery question is correct.
      operationId: forgotPasswordSetNewPassword
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: sendEmail
          in: query
          required: false
          schema:
            type: boolean
            default: true
      x-codegen-request-body-name: userCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        '200':
          description: Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/factors:
    get:
      summary: List all Factors
      description: Enumerates all the enrolled factors for the specified user
      operationId: listFactors
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactor'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - UserFactor
    post:
      summary: Enroll a Factor
      description: Enrolls a user with a supported factor.
      operationId: enrollFactor
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: updatePhone
          in: query
          schema:
            type: boolean
            default: false
        - name: templateId
          in: query
          description: id of SMS template (only for SMS factor)
          schema:
            type: string
        - name: tokenLifetimeSeconds
          in: query
          schema:
            type: integer
            format: int32
            default: 300
          x-okta-added-version: 1.3.0
        - name: activate
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.3.0
      x-codegen-request-body-name: body
      requestBody:
        description: Factor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactor'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/catalog:
    get:
      summary: List all Supported Factors
      description: Enumerates all the supported factors that can be enrolled for the specified user
      operationId: listSupportedFactors
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactor'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/questions:
    get:
      summary: List all Supported Security Questions
      description: Enumerates all available security questions for a user's `question` factor
      operationId: listSupportedSecurityQuestions
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityQuestion'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}:
    get:
      summary: Retrieve a Factor
      description: Fetches a factor for the specified user
      operationId: getFactor
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: factorId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - UserFactor
    delete:
      summary: Delete a Factor
      description: Unenrolls an existing factor for the specified user, allowing the user to enroll a new factor.
      operationId: deleteFactor
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: factorId
          in: path
          required: true
          schema:
            type: string
        - name: removeEnrollmentRecovery
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    post:
      summary: Activate a Factor
      description: The `sms` and `token:software:totp` factor types require activation to complete the enrollment process.
      operationId: activateFactor
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: factorId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateFactorRequest'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
    get:
      summary: Retrieve a Factor Transaction Status
      description: Polls factors verification transaction for status.
      operationId: getFactorTransactionStatus
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: factorId
          in: path
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/verify:
    post:
      summary: Verify an MFA Factor
      description: Verifies an OTP for a `token` or `token:hardware` factor
      operationId: verifyFactor
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: factorId
          in: path
          required: true
          schema:
            type: string
        - name: templateId
          in: query
          schema:
            type: string
        - name: tokenLifetimeSeconds
          in: query
          schema:
            type: integer
            format: int32
            default: 300
          x-okta-added-version: 1.3.0
        - name: X-Forwarded-For
          in: header
          schema:
            type: string
          x-okta-added-version: 1.11.0
        - name: User-Agent
          in: header
          schema:
            type: string
          x-okta-added-version: 1.11.0
        - name: Accept-Language
          in: header
          schema:
            type: string
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyFactorRequest'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - UserFactor
  /api/v1/users/{userId}/grants:
    get:
      summary: List all User Grants
      description: Lists all grants for the specified user
      operationId: listUserGrants
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: scopeId
          in: query
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke all User Grants
      description: Revokes all grants for a specified user
      operationId: revokeUserGrants
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/grants/{grantId}:
    get:
      summary: Retrieve a User Grant
      description: Gets a grant for the specified user
      operationId: getUserGrant
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: grantId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Revoke a User Grant
      description: Revokes one grant for a specified user
      operationId: revokeUserGrant
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: grantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/groups:
    get:
      summary: List all Groups
      description: Fetches the groups of which the user is a member.
      operationId: listUserGroups
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/idps:
    get:
      summary: List all Identity Providers
      description: Lists the IdPs associated with the user.
      operationId: listUserIdentityProviders
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/activate:
    post:
      summary: Activate a User
      description: Activates a user.  This operation can only be performed on users with a `STAGED` status.  Activation of a user is an asynchronous operation. The user will have the `transitioningToStatus` property with a value of `ACTIVE` during activation to indicate that the user hasn't completed the asynchronous operation.  The user will have a status of `ACTIVE` when the activation process is complete.
      operationId: activateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: sendEmail
          in: query
          description: Sends an activation email to the user if true
          required: true
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/deactivate:
    post:
      summary: Deactivate a User
      description: 'Deactivates a user. This operation can only be performed on users that do not have a `DEPROVISIONED` status. While the asynchronous operation (triggered by HTTP header `Prefer: respond-async`) is proceeding the user''s `transitioningToStatus` property is `DEPROVISIONED`. The user''s status is `DEPROVISIONED` when the deactivation process is complete.'
      operationId: deactivateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: sendEmail
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/expire_password:
    post:
      summary: Expire Password
      description: This operation transitions the user to the status of `PASSWORD_EXPIRED` so that the user is required to change their password at their next login.
      operationId: expirePassword
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/expire_password_with_temp_password:
    post:
      summary: Expire Password and Set Temporary Password
      description: This operation transitions the user to the status of `PASSWORD_EXPIRED` so that the user is required to change their password at their next login, and also sets the user's password to a temporary password returned in the response.
      operationId: expirePasswordAndGetTemporaryPassword
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempPassword'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/reactivate:
    post:
      summary: Reactivate a User
      description: Reactivates a user.  This operation can only be performed on users with a `PROVISIONED` status.  This operation restarts the activation workflow if for some reason the user activation was not completed when using the activationToken from [Activate User](#activate-user).
      operationId: reactivateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: sendEmail
          in: query
          description: Sends an activation email to the user if true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/reset_factors:
    post:
      summary: Reset all Factors
      description: This operation resets all factors for the specified user. All MFA factor enrollments returned to the unenrolled state. The user's status remains ACTIVE. This link is present only if the user is currently enrolled in one or more MFA factors.
      operationId: resetFactors
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/reset_password:
    post:
      summary: Reset Password
      description: Generates a one-time token (OTT) that can be used to reset a user's password.  The OTT link can be automatically emailed to the user or returned to the API caller and distributed using a custom flow.
      operationId: resetPassword
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: sendEmail
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/suspend:
    post:
      summary: Suspend a User
      description: Suspends a user.  This operation can only be performed on users with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when the process is complete.
      operationId: suspendUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/unlock:
    post:
      summary: Unlock a User
      description: Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE` status.  Users will be able to login with their current password.
      operationId: unlockUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/lifecycle/unsuspend:
    post:
      summary: Unsuspend a User
      description: Unsuspends a user and returns them to the `ACTIVE` state.  This operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/linkedObjects/{relationshipName}:
    get:
      summary: List all Linked Objects
      description: Get linked objects for a user, relationshipName can be a primary or associated relationship name
      operationId: getLinkedObjectsForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: relationshipName
          in: path
          required: true
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: -1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseLinks'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - User
    delete:
      summary: Delete a Linked Object
      description: Delete linked objects for a user, relationshipName can be ONLY a primary relationship name
      operationId: removeLinkedObjectForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: relationshipName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/roles:
    get:
      summary: List all Assigned Roles
      description: Lists all roles assigned to a user.
      operationId: listAssignedRolesForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - User
    post:
      summary: Assign a Role
      description: Assigns a role to a user.
      operationId: assignRoleToUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: disableNotifications
          in: query
          schema:
            type: boolean
      x-codegen-request-body-name: assignRoleRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
  /api/v1/users/{userId}/roles/{roleId}:
    get:
      summary: Retrieve a Role
      description: Gets role that is assigned to user.
      operationId: getUserRole
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: roleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - User
    delete:
      summary: Delete a Role
      description: Unassigns a role from a user.
      operationId: removeRoleFromUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:
    get:
      summary: List all Application Targets for Application Administrator Role
      description: Lists all App targets for an `APP_ADMIN` Role assigned to a User. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - User
    put:
      summary: Assign all Apps as Target to Role
      description: Assign all Apps as Target to Role
      operationId: addAllAppsAsTargetToRole
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:
    put:
      summary: Assign an Application Target to Administrator Role
      description: Success
      operationId: addApplicationTargetToAdminRoleForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
    delete:
      summary: Unassign an Application Target from Application Administrator Role
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    put:
      summary: Assign an Application Instance Target to an Application Administrator Role
      description: Add App Instance Target to App Administrator Role given to a User
      operationId: addApplicationTargetToAppAdminRoleForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
    delete:
      summary: Unassign an Application Instance Target to Application Administrator Role
      description: Remove App Instance Target to App Administrator Role given to a User
      operationId: removeApplicationTargetFromAdministratorRoleForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: appName
          in: path
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
  /api/v1/users/{userId}/roles/{roleId}/targets/groups:
    get:
      summary: List all Group Targets for Role
      description: Success
      operationId: listGroupTargetsForRole
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.read
      tags:
        - User
  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
    put:
      summary: Assign a Group Target to Role
      description: Assign a Group Target to Role
      operationId: addGroupTargetToRole
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
    delete:
      summary: Unassign a Group Target from Role
      description: Unassign a Group Target from Role
      operationId: removeGroupTargetFromRole
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.roles.manage
      tags:
        - User
  /api/v1/users/{userId}/sessions:
    delete:
      summary: Delete all User Sessions
      description: Removes all active identity provider sessions. This forces the user to authenticate on the next operation. Optionally revokes OpenID Connect and OAuth refresh and access tokens issued to the user.
      operationId: clearUserSessions
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: oauthTokens
          in: query
          description: Revoke issued OpenID Connect and OAuth refresh and access tokens
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - User
  /api/v1/users/{userId}/subscriptions:
    get:
      summary: List all Subscriptions
      description: List subscriptions of a User. Only lists subscriptions for current user. An AccessDeniedException message is sent if requests are made from other users.
      operationId: listUserSubscriptions
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}:
    get:
      summary: List all Subscriptions by type
      description: Get the subscriptions of a User with a specific notification type. Only gets subscriptions for current user. An AccessDeniedException message is sent if requests are made from other users.
      operationId: getUserSubscriptionByNotificationType
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: notificationType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.read
      tags:
        - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
    post:
      summary: Subscribe to a specific notification type
      description: Subscribes a User to a specific notification type. Only the current User can subscribe to a specific notification type. An AccessDeniedException message is sent if requests are made from other users.
      operationId: subscribeUserSubscriptionByNotificationType
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: notificationType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
    post:
      summary: Unsubscribe from a specific notification type
      description: Unsubscribes a User from a specific notification type. Only the current User can unsubscribe from a specific notification type. An AccessDeniedException message is sent if requests are made from other users.
      operationId: unsubscribeUserSubscriptionByNotificationType
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: notificationType
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.users.manage
      tags:
        - Subscription
  /api/v1/zones:
    get:
      summary: List all Network Zones
      description: Enumerates network zones added to your organization with pagination. A subset of zones can be returned that match a supported filter expression or query.
      operationId: listNetworkZones
      parameters:
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of network zones
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results for a page
          schema:
            type: integer
            format: int32
            default: -1
        - name: filter
          in: query
          description: Filters zones by usage or id expression
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkZone'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.networkZones.read
      tags:
        - NetworkZone
    post:
      summary: Create a Network Zone
      description: Adds a new network zone to your Okta organization.
      operationId: createNetworkZone
      x-codegen-request-body-name: zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.networkZones.manage
      tags:
        - NetworkZone
  /api/v1/zones/{zoneId}:
    get:
      summary: Retrieve a Network Zone
      description: Fetches a network zone from your Okta organization by `id`.
      operationId: getNetworkZone
      parameters:
        - name: zoneId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.networkZones.read
      tags:
        - NetworkZone
    put:
      summary: Replace a Network Zone
      description: Updates a network zone in your organization.
      operationId: updateNetworkZone
      parameters:
        - name: zoneId
          in: path
          required: true
          schema:
            type: string
      x-codegen-request-body-name: zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.networkZones.manage
      tags:
        - NetworkZone
    delete:
      summary: Delete a Network Zone
      description: Removes network zone.
      operationId: deleteNetworkZone
      parameters:
        - name: zoneId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.networkZones.manage
      tags:
        - NetworkZone
  /api/v1/zones/{zoneId}/lifecycle/activate:
    post:
      summary: Activate a Network Zone
      description: Activate Network Zone
      operationId: activateNetworkZone
      parameters:
        - name: zoneId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.networkZones.manage
      tags:
        - NetworkZone
  /api/v1/zones/{zoneId}/lifecycle/deactivate:
    post:
      summary: Deactivate a Network Zone
      description: Deactivates a network zone.
      operationId: deactivateNetworkZone
      parameters:
        - name: zoneId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - API_Token: []
        - OAuth_2.0:
            - okta.networkZones.manage
      tags:
        - NetworkZone
components:
  securitySchemes:
    API_Token:
      description: 'Pass the API token as the Authorization header value prefixed with SSWS: `Authorization: SSWS {API Token}`'
      name: Authorization
      type: apiKey
      in: header
    OAuth_2.0:
      type: oauth2
      description: 'Pass the access_token as the value of the Authorization header: `Authorization: {access_token}`'
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          tokenUrl: /oauth2/v1/token
          scopes:
            okta.agentPools.manage: Read or modify Agent Pools
            okta.agentPools.read: Read Agent Pools
            okta.apiToken.read: Read API Tokens.
            okta.apiToken.manage: Read or modify API Tokens.
            okta.apps.read: Read Apps.
            okta.apps.manage: Read or modify Apps.
            okta.authenticators.read: Read Authenticators.
            okta.authenticators.manage: Read or modify Authenticators.
            okta.authorizationServers.read: Read Authorization Servers.
            okta.authorizationServers.manage: Read or modify Authorization Servers.
            okta.behaviors.read: Read Behavior Detection Rules.
            okta.behaviors.manage: Read or modify Behavior Detection Rules.
            okta.brands.read: Read Brands.
            okta.brands.manage: Read or modify Brands.
            okta.captchas.manage: Read or modify CAPTCHA instances in your org.
            okta.captchas.read: Read CAPTCHA instances in your org.
            okta.domains.read: Read Domains.
            okta.domains.manage: Read or modify Domains.
            okta.eventHooks.read: Read Event Hooks.
            okta.eventHooks.manage: Read or modify Event Hooks.
            okta.groups.read: Read Groups.
            okta.groups.manage: Read or modify Groups.
            okta.roles.read: Read Roles.
            okta.roles.manage: Read or modify Roles.
            okta.idps.read: Read Identity Providers.
            okta.idps.manage: Read or modify Identity Providers.
            okta.users.read: Read Users.
            okta.users.manage: Read or modify Users.
            okta.inlineHooks.read: Read Inline Hooks.
            okta.inlineHooks.manage: Read or modify Inline Hooks.
            okta.logs.read: Read Logs.
            okta.profileMappings.read: Read Profile Mappings.
            okta.profileMappings.manage: Read or modify Profile Mappings.
            okta.schemas.read: Read Schemas.
            okta.schemas.manage: Read or modify Schemas.
            okta.linkedObjects.read: Read Linked Objects.
            okta.linkedObjects.manage: Read or modify Linked Objects.
            okta.userTypes.read: Read Usertypes.
            okta.userTypes.manage: Read or modify Usertypes.
            okta.orgs.read: Read Org Settings.
            okta.orgs.manage: Read or modify Org Settings.
            okta.policies.read: Read Policies.
            okta.policies.manage: Read or modify Policies.
            okta.principalRateLimits.read: Read Principal Rate Limits.
            okta.principalRateLimits.manage: Read or modify Principal Rate Limits.
            okta.pushProviders.read: Read Push Providers such as APNs and FCM.
            okta.pushProviders.manage: Read or modify Push Providers such as APNs and FCM.
            okta.sessions.read: Read Sessions.
            okta.sessions.manage: Read or modify Sessions.
            okta.templates.read: Read Templates.
            okta.templates.manage: Read or modify Templates.
            okta.trustedOrigins.read: Read Trusted Origins.
            okta.trustedOrigins.manage: Read or modify Trusted Origins.
            okta.deviceAssurance.read: Read device assurance policies.
            okta.deviceAssurance.manage: Read or modify device assurance policies.
  examples:
    ApiTokenListMetadataResponse:
      value:
        - name: My API Token
          userId: 00uabcdefg1234567890
          tokenWindow: P30D
          id: 00Tabcdefg1234567890
          clientName: Okta API
          expiresAt: 2021-12-11T20:38:10.000Z
          created: 2021-11-09T20:38:10.000Z
          lastUpdated: 2021-11-11T20:38:10.000Z
          _links:
            self:
              href: https://${yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://${yourOktaDomain}/api/v1/users/00uabcdefg1234567890
              hints:
                allow:
                  - GET
        - name: Another API Token
          userId: 00uabcdefg1234567890
          tokenWindow: PT5M
          id: 00T1234567890abcdefg
          clientName: Okta API
          expiresAt: 2021-11-11T20:43:10.000Z
          created: 2021-11-09T20:38:10.000Z
          lastUpdated: 2021-11-11T20:38:10.000Z
          _links:
            self:
              href: https://${yourOktaDomain}/api/v1/api-tokens/00T1234567890abcdefg
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://${yourOktaDomain}/api/v1/users/00uabcdefg1234567890
              hints:
                allow:
                  - GET
    ApiTokenMetadataResponse:
      value:
        name: My API Token
        userId: 00uXXXXXXXXXXXXXXXXX
        tokenWindow: P30D
        id: 00Tabcdefg1234567890
        clientName: Okta API
        expiresAt: 2021-12-11T20:38:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://${yourOktaDomain}/api/v1/users/00uXXXXXXXXXXXXXXXXX
            hints:
              allow:
                - GET
    BehaviorRuleRequest:
      value:
        name: My Behavior Rule
        type: VELOCITY
    BehaviorRuleResponse:
      value:
        id: abcd1234
        name: My Behavior Rule
        type: VELOCITY
        settings:
          velocityKph: 805
        status: ACTIVE
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/behaviors/abcd1234
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    CAPTCHAInstanceRequestHCaptcha:
      value:
        name: myHCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
    CAPTCHAInstanceRequestReCaptcha:
      value:
        name: myReCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
    CAPTCHAInstanceResponseHCaptcha:
      value:
        id: abcd1234
        name: myHCaptcha
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd1234
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    CAPTCHAInstanceResponseReCaptcha:
      value:
        id: abcd4567
        name: myReCaptcha
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
                - GET
                - POST
                - PUT
                - DELETE
    CreateUpdateEmailCustomizationRequest:
      value:
        language: fr
        subject: Bienvenue dans ${org.name}!
        body: <!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a href="${activationLink}">Activer le compte</a></p></body></html>
        isDefault: false
    CreateUpdateEmailCustomizationResponse:
      value:
        language: fr
        subject: Bienvenue dans ${org.name}!
        body: <!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a href="${activationLink}">Activer le compte</a></p></body></html>
        isDefault: false
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          template:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
                - GET
          test:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    DeviceAssuranceAndroidRequest:
      value:
        name: Device Assurance Android
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
            - USER
            - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
            - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceIosRequest:
      value:
        name: Device Assurance IOS
        osVersion:
          minimum: 12.4.5
        jailbreak: false
        platform: IOS
        screenLockType:
          include:
            - BIOMETRIC
    DeviceAssuranceMacOSRequest:
      value:
        name: Device Assurance macOS
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceResponse:
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Example
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    DeviceAssuranceWindowsRequest:
      value:
        name: Device Assurance Windows
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
            - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
            - PASSCODE
            - BIOMETRIC
        secureHardwarePresent: true
    EmailCustomizationResponse:
      value:
        language: en
        isDefault: true
        subject: Welcome to ${org.name}!
        body: <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click <a href="${activationLink}">here</a> to activate your account.</body></html>
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          template:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
                - GET
          test:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    EmailSettingsResponse:
      value:
        recipients: ALL_USERS
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/settings
            hints:
              allow:
                - GET
                - PUT
          template:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
    EmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to ${org.name}!
        body: <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click <a href="${activationLink}">here</a> to activate your account.</body></html>
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content
            hints:
              allow:
                - GET
          template:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content/preview
            hints:
              allow:
                - GET
    ErrorAccessDenied:
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorApiValidationFailed:
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorCAPTCHALimitOfOne:
      value:
        errorCode: E0000165
        errorSummary: CAPTCHA count limit reached. At most one CAPTCHA instance is allowed per Org.
        errorLink: E0000165
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorCAPTCHAOrgWideSetting:
      value:
        errorCode: E0000149
        errorSummary: Current CAPTCHA is associated with org-wide settings, cannot be removed.
        errorLink: E0000149
        errorId: samplezsusshPdiTWiITwqBt8
        errorCauses: []
    ErrorCreateUserWithExpiredPasswordWithNullPassword:
      value:
        errorCode: E0000124
        errorSummary: Could not create user. To create a user and expire their password immediately, a password must be specified
        errorLink: E0000124
        errorId: oaeXxuZgXBySvqi1FvtkwoYCA
        errorCauses:
          - errorSummary: Could not create user. To create a user and expire their password immediately, a password must be specified
    ErrorCreateUserWithExpiredPasswordWithoutActivation:
      value:
        errorCode: E0000125
        errorSummary: Could not create user. To create a user and expire their password immediately, "activate" must be true
        errorLink: E0000125
        errorId: oaeDd77L9R-TJaD7j_rXsQ31w
        errorCauses:
          - errorSummary: Could not create user. To create a user and expire their password immediately, "activate" must be true
    ErrorCreateUserWithTooManyManyGroupsResponse:
      value:
        errorCode: E0000093
        errorSummary: Target count limit exceeded
        errorLink: E0000093
        errorId: oaePVSLIYnIQsC0B-ptBIllVA
        errorCauses:
          - errorSummary: The number of group targets is too large.
    ErrorDeviceAssuranceInUse:
      value:
        errorSummary: Device assurance is in use and cannot be deleted.
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorEmailCustomizationCannotClearDefault:
      value:
        errorCode: E0000185
        errorSummary: The isDefault parameter of the default email template customization can't be set to false.
        errorLink: E0000185
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorEmailCustomizationCannotDeleteDefault:
      value:
        errorCode: E0000184
        errorSummary: A default email template customization can't be deleted.
        errorLink: E0000184
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorEmailCustomizationDefaultAlreadyExists:
      value:
        errorCode: E0000182
        errorSummary: A default email template customization already exists.
        errorLink: E0000182
        errorId: oaeXYwTiMvASsC3O4HCzjFaCA
        errorCauses: []
    ErrorEmailCustomizationLanguageAlreadyExists:
      value:
        errorCode: E0000183
        errorSummary: An email template customization for that language already exists.
        errorLink: E0000183
        errorId: oaeUcGELffqRay0u1OPdnPypw
        errorCauses: []
    ErrorInvalidEmailTemplateRecipients:
      value:
        errorCode: E0000189
        errorSummary: This template does not support the recipients value.
        errorLink: E0000189
        errorId: oae8L1-UkcNTeGi5xVQ28_lww
        errorCauses: []
    ErrorPushProviderUsedByCustomAppAuthenticator:
      value:
        errorCode: E0000187
        errorSummary: Cannot delete push provider because it is being used by a custom app authenticator.
        errorLink: E0000187
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorResourceNotFound:
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorTooManyRequests:
      value:
        errorCode: E0000047
        errorSummary: You exceeded the maximum number of requests. Try again in a while.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    GetEmailTemplateResponse:
      value:
        name: UserActivation
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          settings:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/settings
            hints:
              allow:
                - GET
                - PUT
          defaultContent:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content
            hints:
              allow:
                - GET
          customizations:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations
            hints:
              allow:
                - GET
                - POST
                - DELETE
          test:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    ListEmailCustomizationResponse:
      value:
        - language: en
          isDefault: true
          subject: Welcome to ${org.name}!
          body: <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click <a href="${activationLink}">here</a> to activate your account.</body></html>
          id: oel11u6DqUiMbQkpl0g4
          created: 2021-11-09T20:38:10.000Z
          lastUpdated: 2021-11-11T20:38:10.000Z
          _links:
            self:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            template:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
              hints:
                allow:
                  - GET
            preview:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
              hints:
                allow:
                  - GET
            test:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test
              hints:
                allow:
                  - POST
    ListEmailTemplateResponse:
      value:
        - name: UserActivation
          _links:
            self:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
              hints:
                allow:
                  - GET
            settings:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/settings
              hints:
                allow:
                  - GET
                  - PUT
            defaultContent:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content
              hints:
                allow:
                  - GET
            customizations:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations
              hints:
                allow:
                  - GET
                  - POST
                  - DELETE
            test:
              href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test
              hints:
                allow:
                  - POST
    ListUsersResponse:
      value:
        - id: 00u118oQYT4TBGuay0g4
          status: ACTIVE
          created: 2022-04-04T15:56:05.000Z
          activated: null
          statusChanged: null
          lastLogin: 2022-05-04T19:50:52.000Z
          lastUpdated: 2022-05-05T18:15:44.000Z
          passwordChanged: 2022-04-04T16:00:22.000Z
          type:
            id: oty1162QAr8hJjTaq0g4
          profile:
            firstName: Alice
            lastName: Smith
            mobilePhone: null
            secondEmail: null
            login: alice.smith@example.com
            email: alice.smith@example.com
          credentials:
            password: {}
            provider:
              type: OKTA
              name: OKTA
          _links:
            self:
              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    PreviewEmailCustomizationResponse:
      value:
        subject: Welcome to Okta!
        body: <!DOCTYPE html><html><body><p>Hello, John. Click <a href="https://${yourOktaDomain}/...">here</a> to activate your account.</body></html>
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel2kk1zYJBJbeaGo0g4/preview
            hints:
              allow:
                - GET
          template:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          test:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    PreviewEmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to Okta!
        body: <!DOCTYPE html><html><body><p>Hello, John. Click <a href="https://${yourOktaDomain}/...">here</a> to activate your account.</body></html>
        _links:
          self:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content/preview
            hints:
              allow:
                - GET
          template:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          defaultContent:
            href: https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test/default-content
            hints:
              allow:
                - POST
    PrincipalRateLimitEntityRequestEmptyPercentages:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
    PrincipalRateLimitEntityRequestSSWSToken:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
    PrincipalRateLimitEntityResponseSSWSToken:
      value:
        id: abcd1234
        orgId: org1234
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
        createdDate: '2022-05-19T20:05:32.720Z'
        createdBy: user1234
        lastUpdate: '2022-05-20T21:13:07.410Z'
        lastUpdatedBy: user4321
    PushProviderAPNsRequest:
      value:
        name: APNs Example
        providerType: APNS
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          tokenSigningKey: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE KEY-----\n'
          fileName: fileName.p8
    PushProviderAPNsResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: APNs Example
        providerType: APNS
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
                - DELETE
                - GET
                - PUT
    PushProviderFCMRequest:
      value:
        name: FCM Example
        providerType: FCM
        configuration:
          serviceAccountJson:
            type: service_account
            project_id: PROJECT_ID
            private_key_id: KEY_ID
            private_key: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE KEY-----\n'
            client_email: SERVICE_ACCOUNT_EMAIL
            client_id: CLIENT_ID
            auth_uri: https://accounts.google.com/o/oauth2/auth
            token_uri: https://accounts.google.com/o/oauth2/token
            auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
            client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/SERVICE_ACCOUNT_EMAIL
          fileName: fileName.json
    PushProviderFCMResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: FCM Example
        providerType: FCM
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          projectId: PROJECT_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
                - DELETE
                - GET
                - PUT
  parameters:
    pathApiTokenId:
      name: apiTokenId
      in: path
      schema:
        type: string
        example: 00Tabcdefg1234567890
      required: true
      description: id of the API Token
    pathBehaviorId:
      name: behaviorId
      in: path
      schema:
        type: string
        example: abcd1234
      required: true
      description: id of the Behavior Detection Rule
    pathBrandId:
      name: brandId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the brand.
    pathCaptchaId:
      name: captchaId
      in: path
      schema:
        type: string
        example: abcd1234
      required: true
      description: id of the CAPTCHA
    pathCustomizationId:
      name: customizationId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the email customization.
    pathDeviceAssuranceId:
      in: path
      name: deviceAssuranceId
      required: true
      description: Id of the Device Assurance Policy
      schema:
        type: string
    pathEmailDomainId:
      name: emailDomainId
      in: path
      required: true
      schema:
        type: string
        description: The ID of the email domain.
    pathPoolId:
      name: poolId
      in: path
      description: Id of the agent pool for which the settings will apply
      schema:
        type: string
      required: true
    pathPrincipalRateLimitId:
      name: principalRateLimitId
      in: path
      schema:
        type: string
        example: abcd1234
      required: true
      description: id of the Principal Rate Limit
    pathPushProviderId:
      in: path
      name: pushProviderId
      required: true
      description: Id of the push provider
      schema:
        type: string
    pathTemplateName:
      name: templateName
      in: path
      required: true
      schema:
        type: string
      description: The name of the email template.
    pathUpdateId:
      name: updateId
      in: path
      description: Id of the update
      schema:
        type: string
      required: true
    pathUserId:
      name: userId
      in: path
      required: true
      schema:
        type: string
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: The cursor to use for pagination. It is an opaque string that specifies your current location in the list and is obtained from the `Link` response header. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination) for more information.
    queryExpandEmailTemplate:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - settings
            - customizationCount
      description: Specifies additional metadata to be included in the response.
    queryLanguage:
      name: language
      schema:
        $ref: '#/components/schemas/Language'
      in: query
      description: The language to use for the email. Defaults to the current user's language if unspecified.
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return.
    queryLimitPerPoolType:
      name: limitPerPoolType
      in: query
      schema:
        type: integer
        default: 5
      required: false
      description: Maximum number of AgentPools being returned
    queryPoolType:
      name: poolType
      in: query
      schema:
        $ref: '#/components/schemas/AgentType'
      required: false
      description: Agent type to search for
    queryScheduled:
      name: scheduled
      in: query
      description: Scope the list only to scheduled or ad-hoc updates. If the parameter is not provided we will return the whole list of updates.
      schema:
        type: boolean
      required: false
  schemas:
    APNSConfiguration:
      properties:
        fileName:
          type: string
          description: (Optional) File name for Admin Console display
        keyId:
          type: string
          description: 10-character Key ID obtained from the Apple developer account
        teamId:
          type: string
          description: 10-character Team ID used to develop the iOS app
        tokenSigningKey:
          type: string
          description: APNs private authentication token signing key
          writeOnly: true
    APNSPushProvider:
      allOf:
        - $ref: '#/components/schemas/PushProvider'
        - type: object
          properties:
            configuration:
              $ref: '#/components/schemas/APNSConfiguration'
    AccessPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    AccessPolicyConstraint:
      type: object
      properties:
        methods:
          items:
            type: string
          type: array
        reauthenticateIn:
          type: string
        types:
          items:
            type: string
          type: array
    AccessPolicyConstraints:
      type: object
      properties:
        knowledge:
          $ref: '#/components/schemas/KnowledgeConstraint'
        possession:
          $ref: '#/components/schemas/PossessionConstraint'
    AccessPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/AccessPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/AccessPolicyRuleConditions'
    AccessPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            appSignOn:
              $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'
    AccessPolicyRuleApplicationSignOn:
      type: object
      properties:
        access:
          type: string
        verificationMethod:
          $ref: '#/components/schemas/VerificationMethod'
    AccessPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            device:
              $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'
            elCondition:
              $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'
            userType:
              $ref: '#/components/schemas/UserTypeCondition'
    AccessPolicyRuleCustomCondition:
      properties:
        condition:
          type: string
    AcsEndpoint:
      type: object
      properties:
        index:
          type: integer
        url:
          type: string
    ActivateFactorRequest:
      type: object
      properties:
        attestation:
          type: string
        clientData:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
    Agent:
      description: Agent details
      type: object
      properties:
        id:
          type: string
          readOnly: true
        isHidden:
          type: boolean
        isLatestGAedVersion:
          type: boolean
        lastConnection:
          type: string
          format: date-time
        name:
          type: string
        operationalStatus:
          $ref: '#/components/schemas/OperationalStatus'
        poolId:
          type: string
        type:
          $ref: '#/components/schemas/AgentType'
        updateMessage:
          type: string
        updateStatus:
          $ref: '#/components/schemas/AgentUpdateInstanceStatus'
        version:
          type: string
        _links:
          $ref: '#/components/schemas/HrefObject'
    AgentPool:
      description: An AgentPool is a collection of agents that serve a common purpose. An AgentPool has a unique ID within an org, and contains a collection of agents disjoint to every other AgentPool (i.e. no two AgentPools share an Agent).
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        id:
          type: string
          readOnly: true
        name:
          type: string
        operationalStatus:
          $ref: '#/components/schemas/OperationalStatus'
        type:
          $ref: '#/components/schemas/AgentType'
    AgentPoolUpdate:
      description: Various information about agent auto update configuration
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        agentType:
          $ref: '#/components/schemas/AgentType'
        enabled:
          type: boolean
        id:
          type: string
          readOnly: true
        name:
          type: string
        notifyAdmin:
          type: boolean
        reason:
          type: string
        schedule:
          $ref: '#/components/schemas/AutoUpdateSchedule'
        sortOrder:
          type: integer
        status:
          $ref: '#/components/schemas/AgentUpdateJobStatus'
        targetVersion:
          type: string
        _links:
          $ref: '#/components/schemas/HrefObject'
    AgentPoolUpdateSetting:
      description: Setting for auto-update
      type: object
      properties:
        agentType:
          $ref: '#/components/schemas/AgentType'
        continueOnError:
          type: boolean
        latestVersion:
          type: string
        minimalSupportedVersion:
          type: string
        poolId:
          type: string
          readOnly: true
        poolName:
          type: string
        releaseChannel:
          $ref: '#/components/schemas/ReleaseChannel'
    AgentType:
      description: Agent types that are being monitored
      type: string
      x-okta-known-values:
        - AD
        - IWA
        - LDAP
        - MFA
        - OPP
        - RUM
        - Radius
    AgentUpdateInstanceStatus:
      description: Status for one agent regarding the status to auto-update that agent
      type: string
      x-okta-known-values:
        - Cancelled
        - Failed
        - InProgress
        - PendingCompletion
        - Scheduled
        - Success
    AgentUpdateJobStatus:
      description: Overall state for the auto-update job from admin perspective
      type: string
      x-okta-known-values:
        - Cancelled
        - Failed
        - InProgress
        - Paused
        - Scheduled
        - Success
    AllowedForEnum:
      type: string
      x-okta-known-values:
        - any
        - none
        - recovery
        - sso
    ApiToken:
      title: API Token
      description: An API token for an Okta User. This token is NOT scoped any further and can be used for any API the user has permissions to call.
      type: object
      properties:
        clientName:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        tokenWindow:
          $ref: '#/components/schemas/TimeDuration'
        userId:
          type: string
        _link:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
      required:
        - name
    AppAndInstanceConditionEvaluatorAppOrInstance:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        type:
          $ref: '#/components/schemas/AppAndInstanceType'
    AppAndInstancePolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
        include:
          type: array
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
    AppAndInstanceType:
      type: string
      x-okta-known-values:
        - APP
        - APP_TYPE
    AppInstancePolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    AppLink:
      type: object
      properties:
        appAssignmentId:
          type: string
          readOnly: true
        appInstanceId:
          type: string
          readOnly: true
        appName:
          type: string
          readOnly: true
        credentialsSetup:
          type: boolean
          readOnly: true
        hidden:
          type: boolean
          readOnly: true
        id:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
        linkUrl:
          type: string
          readOnly: true
        logoUrl:
          type: string
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
    AppUser:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: false
        lastSync:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          format: date-time
          readOnly: true
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
        scope:
          type: string
        status:
          type: string
          readOnly: true
        statusChanged:
          type: string
          format: date-time
          readOnly: true
        syncState:
          type: string
          readOnly: true
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    AppUserCredentials:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/AppUserPasswordCredential'
        userName:
          type: string
    AppUserPasswordCredential:
      type: object
      properties:
        value:
          type: string
          format: password
    Application:
      type: object
      properties:
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          type: string
          format: date-time
          readOnly: true
        features:
          type: array
          items:
            type: string
        id:
          type: string
          readOnly: true
        label:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          $ref: '#/components/schemas/ApplicationLifecycleStatus'
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
      discriminator:
        propertyName: signOnMode
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/SamlApplication'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
    ApplicationAccessibility:
      type: object
      properties:
        errorRedirectUrl:
          type: string
        loginRedirectUrl:
          type: string
        selfService:
          type: boolean
    ApplicationCredentials:
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
    ApplicationCredentialsOAuthClient:
      type: object
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint_auth_method:
          $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'
    ApplicationCredentialsScheme:
      type: string
      x-okta-known-values:
        - ADMIN_SETS_CREDENTIALS
        - EDIT_PASSWORD_ONLY
        - EDIT_USERNAME_AND_PASSWORD
        - EXTERNAL_PASSWORD_SYNC
        - SHARED_USERNAME_AND_PASSWORD
    ApplicationCredentialsSigning:
      type: object
      properties:
        kid:
          type: string
        lastRotated:
          type: string
          format: date-time
          readOnly: true
        nextRotation:
          type: string
          format: date-time
          readOnly: true
        rotationMode:
          type: string
        use:
          $ref: '#/components/schemas/ApplicationCredentialsSigningUse'
    ApplicationCredentialsSigningUse:
      type: string
      x-okta-known-values:
        - sig
    ApplicationCredentialsUsernameTemplate:
      type: object
      properties:
        pushStatus:
          type: string
        suffix:
          type: string
        template:
          type: string
        type:
          type: string
    ApplicationFeature:
      type: object
      properties:
        capabilities:
          $ref: '#/components/schemas/CapabilitiesObject'
        description:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/EnabledStatus'
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    ApplicationGroupAssignment:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        priority:
          type: integer
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    ApplicationLayout:
      type: object
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ApplicationLayout'
          type: array
        label:
          type: string
        options:
          type: object
          additionalProperties: true
        rule:
          type: object
          properties:
            effect:
              type: string
            condition:
              $ref: '#/components/schemas/ApplicationLayoutRuleCondition'
        scope:
          type: string
        type:
          type: string
    ApplicationLayoutRuleCondition:
      type: object
      properties:
        schema:
          type: object
          additionalProperties: true
        scope:
          type: string
    ApplicationLicensing:
      type: object
      properties:
        seatCount:
          type: integer
    ApplicationLifecycleStatus:
      type: string
      readOnly: true
      x-okta-known-values:
        - ACTIVE
        - DELETED
        - INACTIVE
    ApplicationSettings:
      type: object
      properties:
        identityStoreId:
          type: string
        implicitAssignment:
          type: boolean
        inlineHookId:
          type: string
        notes:
          $ref: '#/components/schemas/ApplicationSettingsNotes'
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
    ApplicationSettingsNotes:
      type: object
      properties:
        admin:
          type: string
        enduser:
          type: string
    ApplicationSettingsNotifications:
      type: object
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
    ApplicationSettingsNotificationsVpn:
      type: object
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
    ApplicationSettingsNotificationsVpnNetwork:
      type: object
      properties:
        connection:
          type: string
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    ApplicationSignOnMode:
      type: string
      x-okta-known-values:
        - AUTO_LOGIN
        - BASIC_AUTH
        - BOOKMARK
        - BROWSER_PLUGIN
        - OPENID_CONNECT
        - SAML_1_1
        - SAML_2_0
        - SECURE_PASSWORD_STORE
        - WS_FEDERATION
    ApplicationVisibility:
      type: object
      properties:
        appLinks:
          type: object
          additionalProperties:
            type: boolean
        autoLaunch:
          type: boolean
        autoSubmitToolbar:
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
    ApplicationVisibilityHide:
      type: object
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
    AssignRoleRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RoleType'
    AuthenticationProvider:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
    AuthenticationProviderType:
      type: string
      x-okta-known-values:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - IMPORT
        - LDAP
        - OKTA
        - SOCIAL
    Authenticator:
      type: object
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        key:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/AuthenticatorProvider'
        settings:
          $ref: '#/components/schemas/AuthenticatorSettings'
        status:
          $ref: '#/components/schemas/AuthenticatorStatus'
        type:
          $ref: '#/components/schemas/AuthenticatorType'
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    AuthenticatorProvider:
      properties:
        configuration:
          $ref: '#/components/schemas/AuthenticatorProviderConfiguration'
        type:
          type: string
    AuthenticatorProviderConfiguration:
      properties:
        authPort:
          type: integer
        hostName:
          type: string
        instanceId:
          type: string
        sharedSecret:
          type: string
        userNameTemplate:
          $ref: '#/components/schemas/AuthenticatorProviderConfigurationUserNameTemplate'
    AuthenticatorProviderConfigurationUserNameTemplate:
      properties:
        template:
          type: string
    AuthenticatorSettings:
      type: object
      properties:
        allowedFor:
          $ref: '#/components/schemas/AllowedForEnum'
        appInstanceId:
          type: string
        channelBinding:
          $ref: '#/components/schemas/ChannelBinding'
        compliance:
          $ref: '#/components/schemas/Compliance'
        tokenLifetimeInMinutes:
          type: integer
        userVerification:
          $ref: '#/components/schemas/UserVerificationEnum'
    AuthenticatorStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - INACTIVE
    AuthenticatorType:
      type: string
      x-okta-known-values:
        - app
        - email
        - federated
        - password
        - phone
        - security_key
        - security_question
    AuthorizationServer:
      type: object
      properties:
        audiences:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        description:
          type: string
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        issuerMode:
          $ref: '#/components/schemas/IssuerMode'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    AuthorizationServerCredentials:
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'
    AuthorizationServerCredentialsRotationMode:
      type: string
      x-okta-known-values:
        - AUTO
        - MANUAL
    AuthorizationServerCredentialsSigningConfig:
      type: object
      properties:
        kid:
          type: string
        lastRotated:
          type: string
          format: date-time
          readOnly: true
        nextRotation:
          type: string
          format: date-time
          readOnly: true
        rotationMode:
          $ref: '#/components/schemas/AuthorizationServerCredentialsRotationMode'
        use:
          $ref: '#/components/schemas/AuthorizationServerCredentialsUse'
    AuthorizationServerCredentialsUse:
      type: string
      x-okta-known-values:
        - sig
    AuthorizationServerPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    AuthorizationServerPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
    AuthorizationServerPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            token:
              $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'
    AuthorizationServerPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            clients:
              $ref: '#/components/schemas/ClientPolicyCondition'
            grantTypes:
              $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
            scopes:
              $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
    AutoLoginApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
            settings:
              $ref: '#/components/schemas/AutoLoginApplicationSettings'
    AutoLoginApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            signOn:
              $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
    AutoLoginApplicationSettingsSignOn:
      type: object
      properties:
        loginUrl:
          type: string
        redirectUrl:
          type: string
    AutoUpdateSchedule:
      description: The schedule of auto-update configured by admin.
      type: object
      properties:
        cron:
          type: string
        delay:
          description: delay in days
          type: integer
        duration:
          description: duration in minutes
          type: integer
        lastUpdated:
          description: last time when the updated finished (success or failed, exclude cancelled), null if job haven't finished once yet.
          type: string
          format: date-time
        timezone:
          type: string
    BaseEmailDomain:
      type: object
      properties:
        displayName:
          type: string
        userName:
          type: string
      required:
        - displayName
        - userName
    BasicApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/BasicApplicationSettingsApplication'
    BasicApplicationSettingsApplication:
      type: object
      properties:
        authURL:
          type: string
        url:
          type: string
    BasicAuthApplication:
      x-okta-defined-as:
        name: template_basic_auth
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
              default: template_basic_auth
            settings:
              $ref: '#/components/schemas/BasicApplicationSettings'
    BeforeScheduledActionPolicyRuleCondition:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        lifecycleAction:
          $ref: '#/components/schemas/ScheduledUserLifecycleAction'
    BehaviorRule:
      title: Behavior Detection Rule
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/BehaviorRuleType'
        _link:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
      required:
        - name
        - type
      discriminator:
        propertyName: type
        mapping:
          ANOMALOUS_LOCATION: '#/components/schemas/BehaviorRuleAnomalousLocation'
          ANOMALOUS_IP: '#/components/schemas/BehaviorRuleAnomalousIP'
          ANOMALOUS_DEVICE: '#/components/schemas/BehaviorRuleAnomalousDevice'
          VELOCITY: '#/components/schemas/BehaviorRuleVelocity'
    BehaviorRuleAnomalousDevice:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousDevice'
    BehaviorRuleAnomalousIP:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousIP'
    BehaviorRuleAnomalousLocation:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousLocation'
    BehaviorRuleSettings:
      title: Behavior Detection Rule Settings
      type: object
    BehaviorRuleSettingsAnomalousDevice:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
    BehaviorRuleSettingsAnomalousIP:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
        - type: object
          properties:
            maxEventsUsedForEvaluation:
              type: integer
              minimum: 0
              maximum: 100
              default: 50
    BehaviorRuleSettingsAnomalousLocation:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
        - type: object
          properties:
            granularity:
              $ref: '#/components/schemas/LocationGranularity'
            radiusKilometers:
              type: integer
              description: Required when `granularity` is `LAT_LONG`. Radius from the provided coordinates in kilometers.
          required:
            - granularity
    BehaviorRuleSettingsHistoryBased:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettings'
        - title: Behavior Detection Rule Settings based on Event History
          type: object
          properties:
            maxEventsUsedForEvaluation:
              type: integer
              minimum: 1
              maximum: 100
              default: 20
            minEventsNeededForEvaluation:
              type: integer
              minimum: 0
              maximum: 10
              default: 0
    BehaviorRuleSettingsVelocity:
      allOf:
        - $ref: '#/components/schemas/BehaviorRuleSettings'
        - title: Behavior Detection Rule Settings based on device velocity in kilometers per hour.
          type: object
          properties:
            velocityKph:
              type: integer
              minimum: 1
              default: 805
          required:
            - velocityKph
    BehaviorRuleType:
      type: string
      x-okta-known-values:
        - ANOMALOUS_DEVICE
        - ANOMALOUS_IP
        - ANOMALOUS_LOCATION
        - VELOCITY
    BehaviorRuleVelocity:
      allOf:
        - $ref: '#/components/schemas/BehaviorRule'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/BehaviorRuleSettingsVelocity'
    BookmarkApplication:
      x-okta-defined-as:
        name: bookmark
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/ApplicationCredentials'
            name:
              type: string
              default: bookmark
            settings:
              $ref: '#/components/schemas/BookmarkApplicationSettings'
    BookmarkApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
    BookmarkApplicationSettingsApplication:
      type: object
      properties:
        requestIntegration:
          type: boolean
        url:
          type: string
    BouncesRemoveListError:
      type: object
      properties:
        emailAddress:
          type: string
        reason:
          type: string
    BouncesRemoveListObj:
      type: object
      properties:
        emailAddresses:
          type: array
          items:
            type: string
    BouncesRemoveListResult:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BouncesRemoveListError'
    Brand:
      type: object
      properties:
        agreeToCustomPrivacyPolicy:
          type: boolean
        customPrivacyPolicyUrl:
          type: string
        defaultApp:
          type: object
          properties:
            appInstanceId:
              type: string
            appLinkName:
              type: string
        displayLanguage:
          $ref: '#/components/schemas/Language'
        id:
          readOnly: true
          type: string
        optOutOfUserCommunications:
          type: boolean
        removePoweredByOkta:
          type: boolean
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    BrowserPluginApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
            settings:
              $ref: '#/components/schemas/SwaApplicationSettings'
    CAPTCHAInstance:
      title: CAPTCHAInstance
      description: ''
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        secretKey:
          type: string
          writeOnly: true
        siteKey:
          type: string
        type:
          $ref: '#/components/schemas/CAPTCHAType'
        _link:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
    CAPTCHAType:
      type: string
      x-okta-known-values:
        - HCAPTCHA
        - RECAPTCHA_V2
    CallUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/CallUserFactorProfile'
    CallUserFactorProfile:
      type: object
      properties:
        phoneExtension:
          type: string
        phoneNumber:
          type: string
    CapabilitiesCreateObject:
      type: object
      properties:
        lifecycleCreate:
          $ref: '#/components/schemas/LifecycleCreateSettingObject'
    CapabilitiesObject:
      type: object
      properties:
        create:
          $ref: '#/components/schemas/CapabilitiesCreateObject'
        update:
          $ref: '#/components/schemas/CapabilitiesUpdateObject'
    CapabilitiesUpdateObject:
      type: object
      properties:
        lifecycleDeactivate:
          $ref: '#/components/schemas/LifecycleDeactivateSettingObject'
        password:
          $ref: '#/components/schemas/PasswordSettingObject'
        profile:
          $ref: '#/components/schemas/ProfileSettingObject'
    CatalogApplication:
      type: object
      properties:
        category:
          type: string
        description:
          type: string
        displayName:
          type: string
        features:
          type: array
          items:
            type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        signOnModes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/CatalogApplicationStatus'
        verificationStatus:
          type: string
        website:
          type: string
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    CatalogApplicationStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - INACTIVE
    ChangeEnum:
      type: string
      x-okta-known-values:
        - CHANGE
        - KEEP_EXISTING
    ChangePasswordRequest:
      type: object
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
    ChannelBinding:
      type: object
      properties:
        required:
          $ref: '#/components/schemas/RequiredEnum'
        style:
          type: string
    ClientPolicyCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    Compliance:
      type: object
      properties:
        fips:
          $ref: '#/components/schemas/FipsEnum'
    ContextPolicyRuleCondition:
      allOf:
        - $ref: '#/components/schemas/DevicePolicyRuleCondition'
        - type: object
          properties:
            expression:
              type: string
    CreateSessionRequest:
      type: object
      properties:
        sessionToken:
          type: string
    CreateUserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        groupIds:
          type: array
          items:
            type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        type:
          $ref: '#/components/schemas/UserType'
      required:
        - profile
    Csr:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        csr:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        kty:
          type: string
          readOnly: true
    CsrMetadata:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
    CsrMetadataSubject:
      type: object
      properties:
        commonName:
          type: string
        countryName:
          type: string
        localityName:
          type: string
        organizationalUnitName:
          type: string
        organizationName:
          type: string
        stateOrProvinceName:
          type: string
    CsrMetadataSubjectAltNames:
      type: object
      properties:
        dnsNames:
          type: array
          items:
            type: string
    CustomHotpUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            factorProfileId:
              type: string
            profile:
              $ref: '#/components/schemas/CustomHotpUserFactorProfile'
    CustomHotpUserFactorProfile:
      type: object
      properties:
        sharedSecret:
          type: string
    CustomizablePage:
      type: object
      properties:
        pageContent:
          type: string
      required:
        - pageContent
    DNSRecord:
      type: object
      properties:
        expiration:
          type: string
        fqdn:
          type: string
        recordType:
          $ref: '#/components/schemas/DNSRecordType'
        values:
          type: array
          items:
            type: string
    DNSRecordType:
      type: string
      x-okta-known-values:
        - CNAME
        - TXT
    DeviceAccessPolicyRuleCondition:
      allOf:
        - $ref: '#/components/schemas/DevicePolicyRuleCondition'
        - type: object
          properties:
            managed:
              type: boolean
            registered:
              type: boolean
    DeviceAssurance:
      title: DeviceAssurance
      type: object
      properties:
        createdBy:
          type: string
          readOnly: true
        createdDate:
          type: string
          readOnly: true
        diskEncryptionType:
          type: object
          properties:
            include:
              type: array
              items:
                $ref: '#/components/schemas/DiskEncryptionType'
        id:
          type: string
          readOnly: true
        jailbreak:
          type: boolean
        lastUpdatedBy:
          type: string
          readOnly: true
        lastUpdatedDate:
          type: string
          readOnly: true
        name:
          type: string
          description: Display name of the Device Assurance Policy
        osVersion:
          $ref: '#/components/schemas/VersionObject'
        platform:
          $ref: '#/components/schemas/Platform'
        screenLockType:
          type: object
          properties:
            include:
              type: array
              items:
                $ref: '#/components/schemas/ScreenLockType'
        secureHardwarePresent:
          type: boolean
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
    DevicePolicyMDMFramework:
      type: string
      x-okta-known-values:
        - AFW
        - NATIVE
        - SAFE
    DevicePolicyPlatformType:
      type: string
      x-okta-known-values:
        - ANDROID
        - IOS
        - OSX
        - WINDOWS
    DevicePolicyRuleCondition:
      type: object
      properties:
        migrated:
          type: boolean
        platform:
          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
        rooted:
          type: boolean
        trustLevel:
          $ref: '#/components/schemas/DevicePolicyTrustLevel'
    DevicePolicyRuleConditionPlatform:
      type: object
      properties:
        supportedMDMFrameworks:
          type: array
          items:
            $ref: '#/components/schemas/DevicePolicyMDMFramework'
        types:
          type: array
          items:
            $ref: '#/components/schemas/DevicePolicyPlatformType'
    DevicePolicyTrustLevel:
      type: string
      x-okta-known-values:
        - ANY
        - TRUSTED
    DiskEncryptionType:
      type: string
      x-okta-known-values:
        - ALL_INTERNAL_VOLUMES
        - FULL
        - USER
    Domain:
      type: object
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          type: string
        id:
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
    DomainCertificate:
      type: object
      properties:
        certificate:
          type: string
        certificateChain:
          type: string
        privateKey:
          type: string
        type:
          $ref: '#/components/schemas/DomainCertificateType'
    DomainCertificateMetadata:
      type: object
      properties:
        expiration:
          type: string
        fingerprint:
          type: string
        subject:
          type: string
    DomainCertificateSourceType:
      type: string
      x-okta-known-values:
        - MANUAL
        - OKTA_MANAGED
    DomainCertificateType:
      type: string
      x-okta-known-values:
        - PEM
    DomainLinks:
      type: object
      properties:
        certificate:
          type: object
          properties: {}
        self:
          type: object
          properties: {}
        verify:
          type: object
          properties: {}
    DomainListResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            $ref: '#/components/schemas/DomainResponse'
    DomainResponse:
      type: object
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          type: string
        id:
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
        _links:
          $ref: '#/components/schemas/DomainLinks'
    DomainValidationStatus:
      type: string
      x-okta-known-values:
        - COMPLETED
        - IN_PROGRESS
        - NOT_STARTED
        - VERIFIED
    Duration:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
    EmailContent:
      type: object
      properties:
        body:
          type: string
          description: The email's HTML body. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).
        subject:
          type: string
          description: The email's subject. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references).
      required:
        - subject
        - body
    EmailCustomization:
      allOf:
        - $ref: '#/components/schemas/EmailContent'
        - type: object
          properties:
            created:
              type: string
              format: date-time
              readOnly: true
              description: The UTC time at which this email customization was created.
            id:
              type: string
              readOnly: true
              description: A unique identifier for this email customization.
            isDefault:
              type: boolean
              description: Whether this is the default customization for the email template. Each customized email template must have exactly one default customization. Defaults to `true` for the first customization and `false` thereafter.
            language:
              $ref: '#/components/schemas/Language'
            lastUpdated:
              type: string
              format: date-time
              readOnly: true
              description: The UTC time at which this email customization was last updated.
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/HrefObject'
                template:
                  $ref: '#/components/schemas/HrefObject'
                preview:
                  $ref: '#/components/schemas/HrefObject'
                test:
                  $ref: '#/components/schemas/HrefObject'
              readOnly: true
              description: Links to resources related to this email customization.
          required:
            - language
    EmailDefaultContent:
      allOf:
        - $ref: '#/components/schemas/EmailContent'
        - type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/HrefObject'
                template:
                  $ref: '#/components/schemas/HrefObject'
                preview:
                  $ref: '#/components/schemas/HrefObject'
                test:
                  $ref: '#/components/schemas/HrefObject'
              readOnly: true
              description: Links to resources related to this email template's default content.
    EmailDomain:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
      type: object
      properties:
        domain:
          type: string
      required:
        - domain
    EmailDomainListResponse:
      type: object
      properties:
        email-domains:
          type: array
          items:
            $ref: '#/components/schemas/EmailDomainResponse'
    EmailDomainResponse:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
      type: object
      properties:
        dnsValidationRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          type: string
        id:
          type: string
        validationStatus:
          $ref: '#/components/schemas/EmailDomainStatus'
    EmailDomainStatus:
      type: string
      x-okta-known-values:
        - DELETED
        - ERROR
        - NOT_STARTED
        - POLLING
        - VERIFIED
    EmailPreview:
      type: object
      properties:
        body:
          type: string
          readOnly: true
          description: The email's HTML body.
        subject:
          type: string
          readOnly: true
          description: The email's subject.
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
            contentSource:
              $ref: '#/components/schemas/HrefObject'
            template:
              $ref: '#/components/schemas/HrefObject'
            test:
              $ref: '#/components/schemas/HrefObject'
            defaultContent:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
          description: Links to resources related to this email preview.
    EmailSettings:
      type: object
      properties:
        recipients:
          type: string
          enum:
            - ALL_USERS
            - ADMINS_ONLY
            - NO_USERS
      required:
        - recipients
    EmailTemplate:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: The name of this email template.
        _embedded:
          type: object
          properties:
            settings:
              $ref: '#/components/schemas/EmailSettings'
            customizationCount:
              type: integer
          readOnly: true
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
            settings:
              $ref: '#/components/schemas/HrefObject'
            defaultContent:
              $ref: '#/components/schemas/HrefObject'
            customizations:
              $ref: '#/components/schemas/HrefObject'
            test:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
          description: Links to resources related to this email template.
    EmailTemplateTouchPointVariant:
      type: string
      x-okta-known-values:
        - FULL_THEME
        - OKTA_DEFAULT
    EmailUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/EmailUserFactorProfile'
    EmailUserFactorProfile:
      type: object
      properties:
        email:
          type: string
    EnabledStatus:
      type: string
      x-okta-known-values:
        - DISABLED
        - ENABLED
    EndUserDashboardTouchPointVariant:
      type: string
      x-okta-known-values:
        - FULL_THEME
        - LOGO_ON_FULL_WHITE_BACKGROUND
        - OKTA_DEFAULT
        - WHITE_LOGO_BACKGROUND
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            type: object
            properties:
              errorSummary:
                type: string
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: A unique identifier for this error. This can be used by Okta Support to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: A short description of what caused this error. Sometimes this contains dynamically-generated information about your specific error.
    ErrorPageTouchPointVariant:
      type: string
      x-okta-known-values:
        - BACKGROUND_IMAGE
        - BACKGROUND_SECONDARY_COLOR
        - OKTA_DEFAULT
    EventHook:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        verificationStatus:
          $ref: '#/components/schemas/EventHookVerificationStatus'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    EventHookChannel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          $ref: '#/components/schemas/EventHookChannelType'
        version:
          type: string
    EventHookChannelConfig:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
        uri:
          type: string
    EventHookChannelConfigAuthScheme:
      type: object
      properties:
        key:
          type: string
        type:
          $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'
        value:
          type: string
    EventHookChannelConfigAuthSchemeType:
      type: string
      x-okta-known-values:
        - HEADER
    EventHookChannelConfigHeader:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    EventHookChannelType:
      type: string
      x-okta-known-values:
        - HTTP
    EventHookVerificationStatus:
      type: string
      x-okta-known-values:
        - UNVERIFIED
        - VERIFIED
    EventSubscriptionType:
      type: string
      x-okta-known-values:
        - EVENT_TYPE
        - FLOW_EVENT
    EventSubscriptions:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/EventSubscriptionType'
      discriminator:
        propertyName: type
    FCMConfiguration:
      properties:
        fileName:
          type: string
          description: (Optional) File name for Admin Console display
        projectId:
          type: string
          description: Project ID of FCM configuration
          readOnly: true
        serviceAccountJson:
          type: object
          description: JSON containing the private service account key and service account details. See [Creating and managing service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) for more information on creating service account keys in JSON.
          writeOnly: true
    FCMPushProvider:
      allOf:
        - $ref: '#/components/schemas/PushProvider'
        - type: object
          properties:
            configuration:
              $ref: '#/components/schemas/FCMConfiguration'
    FactorProvider:
      type: string
      x-okta-known-values:
        - CUSTOM
        - DUO
        - FIDO
        - GOOGLE
        - OKTA
        - RSA
        - SYMANTEC
        - YUBICO
    FactorResultType:
      type: string
      x-okta-known-values:
        - CANCELLED
        - CHALLENGE
        - ERROR
        - FAILED
        - PASSCODE_REPLAYED
        - REJECTED
        - SUCCESS
        - TIMEOUT
        - TIME_WINDOW_EXCEEDED
        - WAITING
    FactorStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - DISABLED
        - ENROLLED
        - EXPIRED
        - INACTIVE
        - NOT_SETUP
        - PENDING_ACTIVATION
    FactorType:
      type: string
      x-okta-known-values:
        - call
        - email
        - hotp
        - push
        - question
        - sms
        - token
        - token:hardware
        - token:hotp
        - token:software:totp
        - u2f
        - web
        - webauthn
    Feature:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
        stage:
          $ref: '#/components/schemas/FeatureStage'
        status:
          $ref: '#/components/schemas/EnabledStatus'
        type:
          $ref: '#/components/schemas/FeatureType'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    FeatureStage:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FeatureStageState'
        value:
          $ref: '#/components/schemas/FeatureStageValue'
    FeatureStageState:
      type: string
      x-okta-known-values:
        - CLOSED
        - OPEN
    FeatureStageValue:
      type: string
      x-okta-known-values:
        - BETA
        - EA
    FeatureType:
      type: string
      x-okta-known-values:
        - self-service
    FipsEnum:
      type: string
      x-okta-known-values:
        - OPTIONAL
        - REQUIRED
    ForgotPasswordResponse:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
    GrantOrTokenStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - REVOKED
    GrantTypePolicyRuleCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    Group:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastMembershipUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        objectClass:
          type: array
          readOnly: true
          items:
            type: string
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    GroupCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupProfile:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      x-okta-extensible: true
    GroupRule:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
    GroupRuleAction:
      type: object
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
    GroupRuleConditions:
      type: object
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
    GroupRuleExpression:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    GroupRuleGroupAssignment:
      type: object
      properties:
        groupIds:
          type: array
          items:
            type: string
    GroupRuleGroupCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupRulePeopleCondition:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
    GroupRuleStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - INACTIVE
        - INVALID
    GroupRuleUserCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    GroupSchema:
      type: object
      properties:
        $schema:
          readOnly: true
          type: string
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/GroupSchemaDefinitions'
        description:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      x-okta-allow-null-property-value-for-updates: true
    GroupSchemaAttribute:
      type: object
      properties:
        description:
          type: string
        enum:
          items:
            type: string
          type: array
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        permissions:
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
          type: array
        required:
          type: boolean
        scope:
          $ref: '#/components/schemas/UserSchemaAttributeScope'
        title:
          type: string
        type:
          $ref: '#/components/schemas/UserSchemaAttributeType'
        union:
          $ref: '#/components/schemas/UserSchemaAttributeUnion'
        unique:
          type: string
    GroupSchemaBase:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/GroupSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
    GroupSchemaBaseProperties:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/GroupSchemaAttribute'
        name:
          $ref: '#/components/schemas/GroupSchemaAttribute'
    GroupSchemaCustom:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/GroupSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
    GroupSchemaDefinitions:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/GroupSchemaBase'
        custom:
          $ref: '#/components/schemas/GroupSchemaCustom'
    GroupType:
      type: string
      x-okta-known-values:
        - APP_GROUP
        - BUILT_IN
        - OKTA_GROUP
    HardwareUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/HardwareUserFactorProfile'
    HardwareUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    HostedPage:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HostedPageType'
        url:
          type: string
      required:
        - type
    HostedPageType:
      type: string
      x-okta-known-values:
        - EXTERNALLY_HOSTED
        - OKTA_DEFAULT
    HrefObject:
      title: hrefObject
      description: Used for links
      type: object
      properties:
        hints:
          type: object
          properties:
            allow:
              type: array
              items:
                $ref: '#/components/schemas/HttpMethod'
        href:
          type: string
    HttpMethod:
      type: string
      x-okta-known-values:
        - DELETE
        - GET
        - POST
        - PUT
    IdentityProvider:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        id:
          type: string
          readOnly: true
        issuerMode:
          $ref: '#/components/schemas/IssuerMode'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/IdentityProviderType'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    IdentityProviderApplicationUser:
      type: object
      properties:
        created:
          type: string
        externalId:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    IdentityProviderCredentials:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/IdentityProviderCredentialsClient'
        signing:
          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
        trust:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
    IdentityProviderCredentialsClient:
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
    IdentityProviderCredentialsSigning:
      type: object
      properties:
        kid:
          type: string
    IdentityProviderCredentialsTrust:
      type: object
      properties:
        audience:
          type: string
        issuer:
          type: string
        kid:
          type: string
        revocation:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrustRevocation'
        revocationCacheLifetime:
          type: integer
    IdentityProviderCredentialsTrustRevocation:
      type: string
      x-okta-known-values:
        - CRL
        - DELTA_CRL
        - OCSP
    IdentityProviderPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            accountLink:
              $ref: '#/components/schemas/PolicyAccountLink'
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
            maxClockSkew:
              type: integer
            provisioning:
              $ref: '#/components/schemas/Provisioning'
            subject:
              $ref: '#/components/schemas/PolicySubject'
    IdentityProviderPolicyProvider:
      type: string
      x-okta-known-values:
        - ANY
        - OKTA
        - SPECIFIC_IDP
    IdentityProviderPolicyRuleCondition:
      type: object
      properties:
        idpIds:
          type: array
          items:
            type: string
        provider:
          $ref: '#/components/schemas/IdentityProviderPolicyProvider'
    IdentityProviderType:
      type: string
      x-okta-known-values:
        - AgentlessDSSO
        - FACEBOOK
        - GOOGLE
        - IWA
        - LINKEDIN
        - MICROSOFT
        - OIDC
        - OKTA
        - SAML2
        - X509
    IdpPolicyRuleAction:
      type: object
      properties:
        providers:
          items:
            $ref: '#/components/schemas/IdpPolicyRuleActionProvider'
          type: array
    IdpPolicyRuleActionProvider:
      type: object
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
    IframeEmbedScopeAllowedApps:
      type: string
      x-okta-known-values:
        - OKTA_ENDUSER
    ImageUploadResponse:
      type: object
      properties:
        url:
          readOnly: true
          type: string
    InactivityPolicyRuleCondition:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
    InlineHook:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
        version:
          type: string
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    InlineHookChannel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/InlineHookChannelConfig'
        type:
          $ref: '#/components/schemas/InlineHookChannelType'
        version:
          type: string
    InlineHookChannelConfig:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookChannelConfigHeaders'
        method:
          type: string
        uri:
          type: string
    InlineHookChannelConfigAuthScheme:
      type: object
      properties:
        key:
          type: string
        type:
          type: string
        value:
          type: string
    InlineHookChannelConfigHeaders:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    InlineHookChannelType:
      type: string
      x-okta-known-values:
        - HTTP
    InlineHookPayload:
      type: object
      x-okta-extensible: true
    InlineHookResponse:
      type: object
      properties:
        commands:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookResponseCommands'
    InlineHookResponseCommandValue:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
    InlineHookResponseCommands:
      type: object
      properties:
        type:
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/InlineHookResponseCommandValue'
    InlineHookStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - INACTIVE
    InlineHookType:
      type: string
      x-okta-known-values:
        - com.okta.import.transform
        - com.okta.oauth2.tokens.transform
        - com.okta.saml.tokens.transform
        - com.okta.user.credential.password.import
        - com.okta.user.pre-registration
    IssuerMode:
      type: string
      x-okta-known-values:
        - CUSTOM_URL
        - DYNAMIC
        - ORG_URL
    JsonWebKey:
      type: object
      properties:
        alg:
          type: string
        created:
          type: string
          format: date-time
        e:
          type: string
        expiresAt:
          type: string
          format: date-time
        key_ops:
          type: array
          items:
            type: string
        kid:
          type: string
        kty:
          type: string
        lastUpdated:
          type: string
          format: date-time
        'n':
          type: string
        status:
          type: string
        use:
          type: string
        x5c:
          type: array
          items:
            type: string
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    JwkUse:
      type: object
      properties:
        use:
          $ref: '#/components/schemas/JwkUseType'
    JwkUseType:
      type: string
      x-okta-known-values:
        - sig
    KnowledgeConstraint:
      allOf:
        - $ref: '#/components/schemas/AccessPolicyConstraint'
    Language:
      description: The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646).
      type: string
    LifecycleCreateSettingObject:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
    LifecycleDeactivateSettingObject:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
    LifecycleExpirationPolicyRuleCondition:
      type: object
      properties:
        lifecycleStatus:
          type: string
        number:
          type: integer
        unit:
          type: string
    LifecycleStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - INACTIVE
    LinkedObject:
      type: object
      properties:
        associated:
          $ref: '#/components/schemas/LinkedObjectDetails'
        primary:
          $ref: '#/components/schemas/LinkedObjectDetails'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    LinkedObjectDetails:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/LinkedObjectDetailsType'
    LinkedObjectDetailsType:
      type: string
      x-okta-known-values:
        - USER
    LocationGranularity:
      type: string
      x-okta-known-values:
        - CITY
        - COUNTRY
        - LAT_LONG
        - SUBDIVISION
    LogActor:
      type: object
      properties:
        alternateId:
          type: string
          readOnly: true
        detail:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        displayName:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogAuthenticationContext:
      type: object
      properties:
        authenticationProvider:
          $ref: '#/components/schemas/LogAuthenticationProvider'
        authenticationStep:
          type: integer
          readOnly: true
        credentialProvider:
          $ref: '#/components/schemas/LogCredentialProvider'
        credentialType:
          $ref: '#/components/schemas/LogCredentialType'
        externalSessionId:
          type: string
          readOnly: true
        interface:
          type: string
          readOnly: true
        issuer:
          $ref: '#/components/schemas/LogIssuer'
    LogAuthenticationProvider:
      type: string
      x-okta-known-values:
        - ACTIVE_DIRECTORY
        - FACTOR_PROVIDER
        - FEDERATION
        - LDAP
        - OKTA_AUTHENTICATION_PROVIDER
        - SOCIAL
    LogClient:
      type: object
      properties:
        device:
          type: string
          readOnly: true
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        id:
          type: string
          readOnly: true
        ipAddress:
          type: string
          readOnly: true
        userAgent:
          $ref: '#/components/schemas/LogUserAgent'
        zone:
          type: string
          readOnly: true
    LogCredentialProvider:
      type: string
      x-okta-known-values:
        - DUO
        - GOOGLE
        - OKTA_AUTHENTICATION_PROVIDER
        - OKTA_CREDENTIAL_PROVIDER
        - RSA
        - SYMANTEC
        - YUBIKEY
    LogCredentialType:
      type: string
      x-okta-known-values:
        - ASSERTION
        - EMAIL
        - IWA
        - JWT
        - OAuth 2.0
        - OTP
        - PASSWORD
        - SMS
    LogDebugContext:
      type: object
      properties:
        debugData:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    LogEvent:
      type: object
      properties:
        actor:
          $ref: '#/components/schemas/LogActor'
        authenticationContext:
          $ref: '#/components/schemas/LogAuthenticationContext'
        client:
          $ref: '#/components/schemas/LogClient'
        debugContext:
          $ref: '#/components/schemas/LogDebugContext'
        displayMessage:
          type: string
          readOnly: true
        eventType:
          type: string
          readOnly: true
        legacyEventType:
          type: string
          readOnly: true
        outcome:
          $ref: '#/components/schemas/LogOutcome'
        published:
          type: string
          format: date-time
          readOnly: true
        request:
          $ref: '#/components/schemas/LogRequest'
        securityContext:
          $ref: '#/components/schemas/LogSecurityContext'
        severity:
          $ref: '#/components/schemas/LogSeverity'
        target:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LogTarget'
        transaction:
          $ref: '#/components/schemas/LogTransaction'
        uuid:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
    LogGeographicalContext:
      type: object
      properties:
        city:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        geolocation:
          $ref: '#/components/schemas/LogGeolocation'
        postalCode:
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
    LogGeolocation:
      type: object
      properties:
        lat:
          type: number
          format: double
          readOnly: true
        lon:
          type: number
          format: double
          readOnly: true
    LogIpAddress:
      type: object
      properties:
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        ip:
          type: string
          readOnly: true
        source:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
    LogIssuer:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogOutcome:
      type: object
      properties:
        reason:
          type: string
          readOnly: true
        result:
          type: string
          readOnly: true
    LogRequest:
      type: object
      properties:
        ipChain:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LogIpAddress'
    LogSecurityContext:
      type: object
      properties:
        asNumber:
          type: integer
          readOnly: true
        asOrg:
          type: string
          readOnly: true
        domain:
          type: string
          readOnly: true
        isp:
          type: string
          readOnly: true
        isProxy:
          type: boolean
          readOnly: true
    LogSeverity:
      type: string
      x-okta-known-values:
        - DEBUG
        - ERROR
        - INFO
        - WARN
    LogTarget:
      type: object
      properties:
        alternateId:
          type: string
          readOnly: true
        detailEntry:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        displayName:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogTransaction:
      type: object
      properties:
        detail:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        id:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
    LogUserAgent:
      type: object
      properties:
        browser:
          type: string
          readOnly: true
        os:
          type: string
          readOnly: true
        rawUserAgent:
          type: string
          readOnly: true
    MDMEnrollmentPolicyEnrollment:
      type: string
      x-okta-known-values:
        - ANY_OR_NONE
        - OMM
    MDMEnrollmentPolicyRuleCondition:
      type: object
      properties:
        blockNonSafeAndroid:
          type: boolean
        enrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyEnrollment'
    MultifactorEnrollmentPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
            settings:
              $ref: '#/components/schemas/MultifactorEnrollmentPolicySettings'
    MultifactorEnrollmentPolicyAuthenticatorSettings:
      type: object
      properties:
        enroll:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorStatus'
        key:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorType'
    MultifactorEnrollmentPolicyAuthenticatorStatus:
      type: string
      x-okta-known-values:
        - NOT_ALLOWED
        - OPTIONAL
        - REQUIRED
    MultifactorEnrollmentPolicyAuthenticatorType:
      type: string
      x-okta-known-values:
        - custom_app
        - custom_otp
        - duo
        - external_idp
        - google_otp
        - okta_email
        - okta_password
        - okta_verify
        - onprem_mfa
        - phone_number
        - rsa_token
        - security_question
        - symantec_vip
        - webauthn
        - yubikey_token
    MultifactorEnrollmentPolicySettings:
      type: object
      properties:
        authenticators:
          items:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings'
          type: array
        type:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicySettingsType'
    MultifactorEnrollmentPolicySettingsType:
      type: string
      x-okta-known-values:
        - AUTHENTICATORS
    NetworkZone:
      type: object
      properties:
        asns:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time
          readOnly: true
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        locations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
        name:
          type: string
        proxies:
          type: array
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
        proxyType:
          type: string
        status:
          $ref: '#/components/schemas/NetworkZoneStatus'
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/NetworkZoneType'
        usage:
          $ref: '#/components/schemas/NetworkZoneUsage'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    NetworkZoneAddress:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkZoneAddressType'
        value:
          type: string
    NetworkZoneAddressType:
      type: string
      x-okta-known-values:
        - CIDR
        - RANGE
    NetworkZoneLocation:
      type: object
      properties:
        country:
          type: string
        region:
          type: string
    NetworkZoneStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - INACTIVE
    NetworkZoneType:
      type: string
      x-okta-known-values:
        - DYNAMIC
        - IP
    NetworkZoneUsage:
      type: string
      x-okta-known-values:
        - BLOCKLIST
        - POLICY
    NotificationType:
      type: string
      x-okta-known-values:
        - AD_AGENT
        - APP_IMPORT
        - CONNECTOR_AGENT
        - IWA_AGENT
        - LDAP_AGENT
        - OKTA_ANNOUNCEMENT
        - OKTA_ISSUE
        - OKTA_UPDATE
        - RATELIMIT_NOTIFICATION
        - REPORT_SUSPICIOUS_ACTIVITY
        - USER_DEPROVISION
        - USER_LOCKED_OUT
    OAuth2Actor:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
    OAuth2Claim:
      type: object
      properties:
        alwaysIncludeInToken:
          type: boolean
        claimType:
          $ref: '#/components/schemas/OAuth2ClaimType'
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          $ref: '#/components/schemas/OAuth2ClaimGroupFilterType'
        id:
          type: string
          readOnly: true
        name:
          type: string
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
        value:
          type: string
        valueType:
          $ref: '#/components/schemas/OAuth2ClaimValueType'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    OAuth2ClaimConditions:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
    OAuth2ClaimGroupFilterType:
      type: string
      x-okta-known-values:
        - CONTAINS
        - EQUALS
        - REGEX
        - STARTS_WITH
    OAuth2ClaimType:
      type: string
      x-okta-known-values:
        - IDENTITY
        - RESOURCE
    OAuth2ClaimValueType:
      type: string
      x-okta-known-values:
        - EXPRESSION
        - GROUPS
        - SYSTEM
    OAuth2Client:
      type: object
      properties:
        client_id:
          type: string
          readOnly: true
        client_name:
          type: string
          readOnly: true
        client_uri:
          type: string
          readOnly: true
        logo_uri:
          type: string
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    OAuth2RefreshToken:
      type: object
      properties:
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    OAuth2Scope:
      type: object
      properties:
        consent:
          $ref: '#/components/schemas/OAuth2ScopeConsentType'
        default:
          type: boolean
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
          readOnly: true
        metadataPublish:
          $ref: '#/components/schemas/OAuth2ScopeMetadataPublish'
        name:
          type: string
        system:
          type: boolean
    OAuth2ScopeConsentGrant:
      type: object
      properties:
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopeId:
          type: string
        source:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    OAuth2ScopeConsentGrantSource:
      type: string
      x-okta-known-values:
        - ADMIN
        - END_USER
    OAuth2ScopeConsentType:
      type: string
      x-okta-known-values:
        - ADMIN
        - IMPLICIT
        - REQUIRED
    OAuth2ScopeMetadataPublish:
      type: string
      x-okta-known-values:
        - ALL_CLIENTS
        - NO_CLIENTS
    OAuth2ScopesMediationPolicyRuleCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    OAuth2Token:
      type: object
      properties:
        clientId:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        issuer:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    OAuthApplicationCredentials:
      allOf:
        - $ref: '#/components/schemas/ApplicationCredentials'
        - type: object
          properties:
            oauthClient:
              $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
    OAuthEndpointAuthenticationMethod:
      type: string
      x-okta-known-values:
        - client_secret_basic
        - client_secret_jwt
        - client_secret_post
        - none
        - private_key_jwt
    OAuthGrantType:
      type: string
      x-okta-known-values:
        - authorization_code
        - client_credentials
        - implicit
        - interaction_code
        - password
        - refresh_token
    OAuthResponseType:
      type: string
      x-okta-known-values:
        - code
        - id_token
        - token
    OktaSignOnPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/OktaSignOnPolicyConditions'
    OktaSignOnPolicyConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    OktaSignOnPolicyFactorPromptMode:
      type: string
      x-okta-known-values:
        - ALWAYS
        - DEVICE
        - SESSION
    OktaSignOnPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'
    OktaSignOnPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            signon:
              $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
    OktaSignOnPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            authContext:
              $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
            network:
              $ref: '#/components/schemas/PolicyNetworkCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    OktaSignOnPolicyRuleSignonActions:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/PolicyAccess'
        factorLifetime:
          type: integer
        factorPromptMode:
          $ref: '#/components/schemas/OktaSignOnPolicyFactorPromptMode'
        rememberDeviceByDefault:
          type: boolean
          default: false
        requireFactor:
          type: boolean
          default: false
        session:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'
    OktaSignOnPolicyRuleSignonSessionActions:
      type: object
      properties:
        maxSessionIdleMinutes:
          type: integer
        maxSessionLifetimeMinutes:
          type: integer
        usePersistentCookie:
          type: boolean
          default: false
    OpenIdConnectApplication:
      x-okta-defined-as:
        name: oidc_client
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/OAuthApplicationCredentials'
            name:
              type: string
              default: oidc_client
            settings:
              $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
    OpenIdConnectApplicationConsentMethod:
      type: string
      x-okta-known-values:
        - REQUIRED
        - TRUSTED
    OpenIdConnectApplicationIdpInitiatedLogin:
      type: object
      properties:
        default_scope:
          type: array
          items:
            type: string
        mode:
          type: string
    OpenIdConnectApplicationIssuerMode:
      type: string
      x-okta-known-values:
        - CUSTOM_URL
        - DYNAMIC
        - ORG_URL
    OpenIdConnectApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            oauthClient:
              $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
    OpenIdConnectApplicationSettingsClient:
      type: object
      properties:
        application_type:
          $ref: '#/components/schemas/OpenIdConnectApplicationType'
        client_uri:
          type: string
        consent_method:
          $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'
        grant_types:
          type: array
          items:
            $ref: '#/components/schemas/OAuthGrantType'
        idp_initiated_login:
          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
        initiate_login_uri:
          type: string
        issuer_mode:
          $ref: '#/components/schemas/OpenIdConnectApplicationIssuerMode'
        jwks:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
        logo_uri:
          type: string
        policy_uri:
          type: string
        post_logout_redirect_uris:
          type: array
          items:
            type: string
        redirect_uris:
          type: array
          items:
            type: string
        refresh_token:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
        response_types:
          type: array
          items:
            $ref: '#/components/schemas/OAuthResponseType'
        tos_uri:
          type: string
        wildcard_redirect:
          type: string
    OpenIdConnectApplicationSettingsClientKeys:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/JsonWebKey'
    OpenIdConnectApplicationSettingsRefreshToken:
      type: object
      properties:
        leeway:
          type: integer
        rotation_type:
          $ref: '#/components/schemas/OpenIdConnectRefreshTokenRotationType'
    OpenIdConnectApplicationType:
      type: string
      x-okta-known-values:
        - browser
        - native
        - service
        - web
    OpenIdConnectRefreshTokenRotationType:
      type: string
      x-okta-known-values:
        - ROTATE
        - STATIC
    OperationalStatus:
      description: Operational status of a given agent
      type: string
      x-okta-known-values:
        - DEGRADED
        - DISRUPTED
        - INACTIVE
        - OPERATIONAL
    OrgContactType:
      type: string
      x-okta-known-values:
        - BILLING
        - TECHNICAL
    OrgContactTypeObj:
      type: object
      properties:
        contactType:
          $ref: '#/components/schemas/OrgContactType'
        _links:
          additionalProperties:
            type: object
    OrgContactUser:
      type: object
      properties:
        userId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    OrgOktaCommunicationSetting:
      type: object
      properties:
        optOutEmailUsers:
          type: boolean
          readOnly: true
        _links:
          additionalProperties:
            type: object
    OrgOktaSupportSetting:
      type: string
      x-okta-known-values:
        - DISABLED
        - ENABLED
    OrgOktaSupportSettingsObj:
      type: object
      properties:
        expiration:
          format: date-time
          type: string
          readOnly: true
        support:
          $ref: '#/components/schemas/OrgOktaSupportSetting'
        _links:
          additionalProperties:
            type: object
    OrgPreferences:
      type: object
      properties:
        showEndUserFooter:
          type: boolean
          readOnly: true
        _links:
          additionalProperties:
            type: object
    OrgSetting:
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        endUserSupportHelpURL:
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          readOnly: true
          type: string
        subdomain:
          readOnly: true
          type: string
        supportPhoneNumber:
          type: string
        website:
          type: string
        _links:
          additionalProperties:
            type: object
    PasswordCredential:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          type: string
          format: password
    PasswordCredentialHash:
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        salt:
          type: string
        saltOrder:
          type: string
        value:
          type: string
        workFactor:
          type: integer
    PasswordCredentialHashAlgorithm:
      type: string
      x-okta-known-values:
        - BCRYPT
        - MD5
        - SHA-1
        - SHA-256
        - SHA-512
    PasswordCredentialHook:
      type: object
      properties:
        type:
          type: string
    PasswordDictionary:
      type: object
      properties:
        common:
          $ref: '#/components/schemas/PasswordDictionaryCommon'
    PasswordDictionaryCommon:
      type: object
      properties:
        exclude:
          type: boolean
          default: false
    PasswordExpirationPolicyRuleCondition:
      type: object
      properties:
        number:
          type: integer
        unit:
          type: string
    PasswordPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PasswordPolicyConditions'
            settings:
              $ref: '#/components/schemas/PasswordPolicySettings'
    PasswordPolicyAuthenticationProviderCondition:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
        provider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderType'
    PasswordPolicyAuthenticationProviderType:
      type: string
      x-okta-known-values:
        - ACTIVE_DIRECTORY
        - ANY
        - LDAP
        - OKTA
    PasswordPolicyConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            authProvider:
              $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    PasswordPolicyDelegationSettings:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
    PasswordPolicyDelegationSettingsOptions:
      type: object
      properties:
        skipUnlock:
          type: boolean
    PasswordPolicyPasswordSettings:
      type: object
      properties:
        age:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
        complexity:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
        lockout:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
    PasswordPolicyPasswordSettingsAge:
      type: object
      properties:
        expireWarnDays:
          type: integer
        historyCount:
          type: integer
        maxAgeDays:
          type: integer
        minAgeMinutes:
          type: integer
    PasswordPolicyPasswordSettingsComplexity:
      type: object
      properties:
        dictionary:
          $ref: '#/components/schemas/PasswordDictionary'
        excludeAttributes:
          type: array
          items:
            type: string
        excludeUsername:
          type: boolean
          default: true
        minLength:
          type: integer
        minLowerCase:
          type: integer
        minNumber:
          type: integer
        minSymbol:
          type: integer
        minUpperCase:
          type: integer
    PasswordPolicyPasswordSettingsLockout:
      type: object
      properties:
        autoUnlockMinutes:
          type: integer
        maxAttempts:
          type: integer
        showLockoutFailures:
          type: boolean
        userLockoutNotificationChannels:
          type: array
          items:
            type: string
    PasswordPolicyRecoveryEmail:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryEmailProperties:
      type: object
      properties:
        recoveryToken:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
    PasswordPolicyRecoveryEmailRecoveryToken:
      type: object
      properties:
        tokenLifetimeMinutes:
          type: integer
    PasswordPolicyRecoveryFactorSettings:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryFactors:
      type: object
      properties:
        okta_call:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        okta_email:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
        okta_sms:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        recovery_question:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
    PasswordPolicyRecoveryQuestion:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
    PasswordPolicyRecoveryQuestionComplexity:
      type: object
      properties:
        minLength:
          type: integer
          readOnly: true
    PasswordPolicyRecoveryQuestionProperties:
      type: object
      properties:
        complexity:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
    PasswordPolicyRecoverySettings:
      type: object
      properties:
        factors:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
    PasswordPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/PasswordPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/PasswordPolicyRuleConditions'
    PasswordPolicyRuleAction:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/PolicyAccess'
    PasswordPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            passwordChange:
              $ref: '#/components/schemas/PasswordPolicyRuleAction'
            selfServicePasswordReset:
              $ref: '#/components/schemas/PasswordPolicyRuleAction'
            selfServiceUnlock:
              $ref: '#/components/schemas/PasswordPolicyRuleAction'
    PasswordPolicyRuleConditions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleConditions'
        - type: object
          properties:
            network:
              $ref: '#/components/schemas/PolicyNetworkCondition'
            people:
              $ref: '#/components/schemas/PolicyPeopleCondition'
    PasswordPolicySettings:
      type: object
      properties:
        delegation:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
        password:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
        recovery:
          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
    PasswordSettingObject:
      type: object
      properties:
        change:
          $ref: '#/components/schemas/ChangeEnum'
        seed:
          $ref: '#/components/schemas/SeedEnum'
        status:
          $ref: '#/components/schemas/EnabledStatus'
    Platform:
      type: string
      x-okta-known-values:
        - ANDROID
        - IOS
        - MACOS
        - WINDOWS
    PlatformConditionEvaluatorPlatform:
      type: object
      properties:
        os:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'
        type:
          $ref: '#/components/schemas/PolicyPlatformType'
    PlatformConditionEvaluatorPlatformOperatingSystem:
      type: object
      properties:
        expression:
          type: string
        type:
          $ref: '#/components/schemas/PolicyPlatformOperatingSystemType'
        version:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
    PlatformConditionEvaluatorPlatformOperatingSystemVersion:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/PlatformConditionOperatingSystemVersionMatchType'
        value:
          type: string
    PlatformConditionOperatingSystemVersionMatchType:
      type: string
      x-okta-known-values:
        - EXPRESSION
        - SEMVER
    PlatformPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
        include:
          type: array
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
    Policy:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        priority:
          type: integer
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
      discriminator:
        propertyName: type
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicy'
          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'
          MFA_ENROLL: '#/components/schemas/MultifactorEnrollmentPolicy'
          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/AuthorizationServerPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'
    PolicyAccess:
      type: string
      x-okta-known-values:
        - ALLOW
        - DENY
    PolicyAccountLink:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/PolicyAccountLinkAction'
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
    PolicyAccountLinkAction:
      type: string
      x-okta-known-values:
        - AUTO
        - DISABLED
    PolicyAccountLinkFilter:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
    PolicyAccountLinkFilterGroups:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
    PolicyNetworkCondition:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PolicyNetworkConnection'
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    PolicyNetworkConnection:
      type: string
      x-okta-known-values:
        - ANYWHERE
        - ZONE
    PolicyPeopleCondition:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/GroupCondition'
        users:
          $ref: '#/components/schemas/UserCondition'
    PolicyPlatformOperatingSystemType:
      type: string
      x-okta-known-values:
        - ANDROID
        - ANY
        - IOS
        - OSX
        - OTHER
        - WINDOWS
    PolicyPlatformType:
      type: string
      x-okta-known-values:
        - ANY
        - DESKTOP
        - MOBILE
        - OTHER
    PolicyRule:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        priority:
          type: integer
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        system:
          type: boolean
          default: false
        type:
          $ref: '#/components/schemas/PolicyRuleType'
      discriminator:
        propertyName: type
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'
          PASSWORD: '#/components/schemas/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'
          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'
          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'
    PolicyRuleActions:
      type: object
      properties:
        enroll:
          $ref: '#/components/schemas/PolicyRuleActionsEnroll'
        idp:
          $ref: '#/components/schemas/IdpPolicyRuleAction'
        passwordChange:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServicePasswordReset:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServiceUnlock:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        signon:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
    PolicyRuleActionsEnroll:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/PolicyRuleActionsEnrollSelf'
    PolicyRuleActionsEnrollSelf:
      type: string
      x-okta-known-values:
        - CHALLENGE
        - LOGIN
        - NEVER
    PolicyRuleAuthContextCondition:
      type: object
      properties:
        authType:
          $ref: '#/components/schemas/PolicyRuleAuthContextType'
    PolicyRuleAuthContextType:
      type: string
      x-okta-known-values:
        - ANY
        - RADIUS
    PolicyRuleConditions:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
        apps:
          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        beforeScheduledAction:
          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        context:
          $ref: '#/components/schemas/ContextPolicyRuleCondition'
        device:
          $ref: '#/components/schemas/DevicePolicyRuleCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        groups:
          $ref: '#/components/schemas/GroupPolicyRuleCondition'
        identityProvider:
          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
        mdmEnrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        platform:
          $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        risk:
          $ref: '#/components/schemas/RiskPolicyRuleCondition'
        riskScore:
          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        userIdentifier:
          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
        users:
          $ref: '#/components/schemas/UserPolicyRuleCondition'
        userStatus:
          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
    PolicyRuleType:
      type: string
      x-okta-known-values:
        - ACCESS_POLICY
        - IDP_DISCOVERY
        - MFA_ENROLL
        - PASSWORD
        - PROFILE_ENROLLMENT
        - RESOURCE_ACCESS
        - SIGN_ON
    PolicySubject:
      type: object
      properties:
        filter:
          type: string
        format:
          type: array
          items:
            type: string
        matchAttribute:
          type: string
        matchType:
          $ref: '#/components/schemas/PolicySubjectMatchType'
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
    PolicySubjectMatchType:
      type: string
      x-okta-known-values:
        - CUSTOM_ATTRIBUTE
        - EMAIL
        - USERNAME
        - USERNAME_OR_EMAIL
    PolicyType:
      type: string
      x-okta-known-values:
        - ACCESS_POLICY
        - IDP_DISCOVERY
        - MFA_ENROLL
        - OAUTH_AUTHORIZATION_POLICY
        - OKTA_SIGN_ON
        - PASSWORD
        - PROFILE_ENROLLMENT
    PolicyUserNameTemplate:
      type: object
      properties:
        template:
          type: string
    PolicyUserStatus:
      type: string
      x-okta-known-values:
        - ACTIVATING
        - ACTIVE
        - DELETED
        - DELETING
        - EXPIRED_PASSWORD
        - INACTIVE
        - PENDING
        - SUSPENDED
    PossessionConstraint:
      allOf:
        - $ref: '#/components/schemas/AccessPolicyConstraint'
        - type: object
          properties:
            deviceBound:
              type: string
            hardwareProtection:
              type: string
            phishingResistant:
              type: string
            userPresence:
              type: string
    PreRegistrationInlineHook:
      type: object
      properties:
        inlineHookId:
          type: string
    PrincipalRateLimitEntity:
      title: PrincipalRateLimitEntity
      description: ''
      type: object
      properties:
        createdBy:
          type: string
          readOnly: true
        createdDate:
          type: string
          format: date-time
          readOnly: true
        defaultConcurrencyPercentage:
          type: integer
          readOnly: true
        defaultPercentage:
          type: integer
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdate:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        orgId:
          type: string
          readOnly: true
        principalId:
          type: string
        principalType:
          $ref: '#/components/schemas/PrincipalType'
      required:
        - principalId
        - principalType
    PrincipalType:
      type: string
      x-okta-known-values:
        - SSWS_TOKEN
    ProfileEnrollmentPolicy:
      allOf:
        - $ref: '#/components/schemas/Policy'
        - type: object
          properties:
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    ProfileEnrollmentPolicyRule:
      allOf:
        - $ref: '#/components/schemas/PolicyRule'
        - type: object
          properties:
            actions:
              $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'
            conditions:
              $ref: '#/components/schemas/PolicyRuleConditions'
    ProfileEnrollmentPolicyRuleAction:
      type: object
      properties:
        access:
          type: string
        activationRequirements:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement'
        preRegistrationInlineHooks:
          items:
            $ref: '#/components/schemas/PreRegistrationInlineHook'
          type: array
        profileAttributes:
          items:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'
          type: array
        targetGroupIds:
          items:
            type: string
          type: array
        unknownUserAction:
          type: string
    ProfileEnrollmentPolicyRuleActions:
      allOf:
        - $ref: '#/components/schemas/PolicyRuleActions'
        - type: object
          properties:
            profileEnrollment:
              $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'
    ProfileEnrollmentPolicyRuleActivationRequirement:
      type: object
      properties:
        emailVerification:
          type: boolean
    ProfileEnrollmentPolicyRuleProfileAttribute:
      type: object
      properties:
        label:
          type: string
        name:
          type: string
        required:
          type: boolean
    ProfileMapping:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: true
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingSource'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    ProfileMappingProperty:
      type: object
      properties:
        expression:
          type: string
        pushStatus:
          $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'
    ProfileMappingPropertyPushStatus:
      type: string
      x-okta-known-values:
        - DONT_PUSH
        - PUSH
    ProfileMappingSource:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    ProfileSettingObject:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/EnabledStatus'
    Protocol:
      type: object
      properties:
        algorithms:
          $ref: '#/components/schemas/ProtocolAlgorithms'
        credentials:
          $ref: '#/components/schemas/IdentityProviderCredentials'
        endpoints:
          $ref: '#/components/schemas/ProtocolEndpoints'
        issuer:
          $ref: '#/components/schemas/ProtocolEndpoint'
        relayState:
          $ref: '#/components/schemas/ProtocolRelayState'
        scopes:
          type: array
          items:
            type: string
        settings:
          $ref: '#/components/schemas/ProtocolSettings'
        type:
          $ref: '#/components/schemas/ProtocolType'
    ProtocolAlgorithmType:
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
    ProtocolAlgorithmTypeSignature:
      type: object
      properties:
        algorithm:
          type: string
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignatureScope'
    ProtocolAlgorithmTypeSignatureScope:
      type: string
      x-okta-known-values:
        - ANY
        - NONE
        - REQUEST
        - RESPONSE
        - TOKEN
    ProtocolAlgorithms:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
        response:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
    ProtocolEndpoint:
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        destination:
          type: string
        type:
          $ref: '#/components/schemas/ProtocolEndpointType'
        url:
          type: string
    ProtocolEndpointBinding:
      type: string
      x-okta-known-values:
        - HTTP-POST
        - HTTP-REDIRECT
    ProtocolEndpointType:
      type: string
      x-okta-known-values:
        - INSTANCE
        - ORG
    ProtocolEndpoints:
      type: object
      properties:
        acs:
          $ref: '#/components/schemas/ProtocolEndpoint'
        authorization:
          $ref: '#/components/schemas/ProtocolEndpoint'
        jwks:
          $ref: '#/components/schemas/ProtocolEndpoint'
        metadata:
          $ref: '#/components/schemas/ProtocolEndpoint'
        slo:
          $ref: '#/components/schemas/ProtocolEndpoint'
        sso:
          $ref: '#/components/schemas/ProtocolEndpoint'
        token:
          $ref: '#/components/schemas/ProtocolEndpoint'
        userInfo:
          $ref: '#/components/schemas/ProtocolEndpoint'
    ProtocolRelayState:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/ProtocolRelayStateFormat'
    ProtocolRelayStateFormat:
      type: string
      x-okta-known-values:
        - FROM_URL
        - OPAQUE
    ProtocolSettings:
      type: object
      properties:
        nameFormat:
          type: string
    ProtocolType:
      type: string
      x-okta-known-values:
        - MTLS
        - OAUTH2
        - OIDC
        - SAML2
    ProviderType:
      type: string
      x-okta-known-values:
        - APNS
        - FCM
    Provisioning:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningAction'
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
    ProvisioningAction:
      type: string
      x-okta-known-values:
        - AUTO
        - CALLOUT
        - DISABLED
    ProvisioningConditions:
      type: object
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
    ProvisioningConnection:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
        status:
          $ref: '#/components/schemas/ProvisioningConnectionStatus'
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    ProvisioningConnectionAuthScheme:
      type: string
      x-okta-known-values:
        - TOKEN
        - UNKNOWN
    ProvisioningConnectionProfile:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
        token:
          type: string
    ProvisioningConnectionRequest:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/ProvisioningConnectionProfile'
    ProvisioningConnectionStatus:
      type: string
      x-okta-known-values:
        - DISABLED
        - ENABLED
        - UNKNOWN
    ProvisioningDeprovisionedAction:
      type: string
      x-okta-known-values:
        - NONE
        - REACTIVATE
    ProvisioningDeprovisionedCondition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningDeprovisionedAction'
    ProvisioningGroups:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningGroupsAction'
        assignments:
          type: array
          items:
            type: string
        filter:
          type: array
          items:
            type: string
        sourceAttributeName:
          type: string
    ProvisioningGroupsAction:
      type: string
      x-okta-known-values:
        - APPEND
        - ASSIGN
        - NONE
        - SYNC
    ProvisioningSuspendedAction:
      type: string
      x-okta-known-values:
        - NONE
        - UNSUSPEND
    ProvisioningSuspendedCondition:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningSuspendedAction'
    PushProvider:
      title: PushProvider
      type: object
      properties:
        id:
          type: string
          readOnly: true
        lastUpdatedDate:
          type: string
          readOnly: true
        name:
          type: string
          description: Display name of the push provider
        providerType:
          $ref: '#/components/schemas/ProviderType'
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
      discriminator:
        propertyName: providerType
        mapping:
          APNS: '#/components/schemas/APNSPushProvider'
          FCM: '#/components/schemas/FCMPushProvider'
    PushUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            expiresAt:
              type: string
              format: date-time
            factorResult:
              $ref: '#/components/schemas/FactorResultType'
            profile:
              $ref: '#/components/schemas/PushUserFactorProfile'
    PushUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
        deviceToken:
          type: string
        deviceType:
          type: string
        name:
          type: string
        platform:
          type: string
        version:
          type: string
    RecoveryQuestionCredential:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
    ReleaseChannel:
      description: Release channel for auto-update
      type: string
      x-okta-known-values:
        - BETA
        - EA
        - GA
        - TEST
    RequiredEnum:
      type: string
      x-okta-known-values:
        - ALWAYS
        - HIGH_RISK_ONLY
        - NEVER
    ResetPasswordToken:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
    ResponseLinks:
      type: object
    RiskPolicyRuleCondition:
      type: object
      properties:
        behaviors:
          uniqueItems: true
          type: array
          items:
            type: string
    RiskScorePolicyRuleCondition:
      type: object
      properties:
        level:
          type: string
    Role:
      type: object
      properties:
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        id:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/RoleType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    RoleAssignmentType:
      type: string
      x-okta-known-values:
        - GROUP
        - USER
    RoleType:
      type: string
      x-okta-known-values:
        - API_ACCESS_MANAGEMENT_ADMIN
        - APP_ADMIN
        - GROUP_MEMBERSHIP_ADMIN
        - HELP_DESK_ADMIN
        - MOBILE_ADMIN
        - ORG_ADMIN
        - READ_ONLY_ADMIN
        - REPORT_ADMIN
        - SUPER_ADMIN
        - USER_ADMIN
    SamlApplication:
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/ApplicationCredentials'
            name:
              type: string
            settings:
              $ref: '#/components/schemas/SamlApplicationSettings'
    SamlApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/SamlApplicationSettingsApplication'
            signOn:
              $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
    SamlApplicationSettingsApplication:
      type: object
      properties:
        acsUrl:
          type: string
        audRestriction:
          type: string
        baseUrl:
          type: string
    SamlApplicationSettingsSignOn:
      type: object
      properties:
        acsEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/AcsEndpoint'
        allowMultipleAcsEndpoints:
          type: boolean
        assertionSigned:
          type: boolean
        attributeStatements:
          type: array
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
        audience:
          type: string
        audienceOverride:
          type: string
        authnContextClassRef:
          type: string
        defaultRelayState:
          type: string
        destination:
          type: string
        destinationOverride:
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          type: boolean
        idpIssuer:
          type: string
        inlineHooks:
          items:
            $ref: '#/components/schemas/SignOnInlineHook'
          type: array
        recipient:
          type: string
        recipientOverride:
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        signatureAlgorithm:
          type: string
        slo:
          $ref: '#/components/schemas/SingleLogout'
        spCertificate:
          $ref: '#/components/schemas/SpCertificate'
        spIssuer:
          type: string
        ssoAcsUrl:
          type: string
        ssoAcsUrlOverride:
          type: string
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
    SamlAttributeStatement:
      type: object
      properties:
        filterType:
          type: string
        filterValue:
          type: string
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        values:
          type: array
          items:
            type: string
    ScheduledUserLifecycleAction:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PolicyUserStatus'
    SchemeApplicationCredentials:
      allOf:
        - $ref: '#/components/schemas/ApplicationCredentials'
        - type: object
          properties:
            password:
              $ref: '#/components/schemas/PasswordCredential'
            revealPassword:
              type: boolean
            scheme:
              $ref: '#/components/schemas/ApplicationCredentialsScheme'
            signing:
              $ref: '#/components/schemas/ApplicationCredentialsSigning'
            userName:
              type: string
    ScreenLockType:
      type: string
      x-okta-known-values:
        - BIOMETRIC
        - PASSCODE
    SecurePasswordStoreApplication:
      x-okta-defined-as:
        name: template_sps
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            credentials:
              $ref: '#/components/schemas/SchemeApplicationCredentials'
            name:
              type: string
              default: template_sps
            settings:
              $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
    SecurePasswordStoreApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
    SecurePasswordStoreApplicationSettingsApplication:
      type: object
      properties:
        optionalField1:
          type: string
        optionalField1Value:
          type: string
        optionalField2:
          type: string
        optionalField2Value:
          type: string
        optionalField3:
          type: string
        optionalField3Value:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
    SecurityQuestion:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
    SecurityQuestionUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/SecurityQuestionUserFactorProfile'
    SecurityQuestionUserFactorProfile:
      type: object
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
    SeedEnum:
      type: string
      x-okta-known-values:
        - OKTA
        - RANDOM
    Session:
      type: object
      properties:
        amr:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SessionAuthenticationMethod'
        createdAt:
          type: string
          format: date-time
          readOnly: true
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        idp:
          $ref: '#/components/schemas/SessionIdentityProvider'
        lastFactorVerification:
          type: string
          format: date-time
          readOnly: true
        lastPasswordVerification:
          type: string
          format: date-time
          readOnly: true
        login:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/SessionStatus'
        userId:
          type: string
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    SessionAuthenticationMethod:
      type: string
      x-okta-known-values:
        - fpt
        - geo
        - hwk
        - kba
        - mca
        - mfa
        - otp
        - pwd
        - sc
        - sms
        - swk
        - tel
    SessionIdentityProvider:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/SessionIdentityProviderType'
    SessionIdentityProviderType:
      type: string
      x-okta-known-values:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - LDAP
        - OKTA
        - SOCIAL
    SessionStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - MFA_ENROLL
        - MFA_REQUIRED
    SignInPage:
      allOf:
        - $ref: '#/components/schemas/CustomizablePage'
        - type: object
          properties:
            type:
              $ref: '#/components/schemas/HostedPageType'
            url:
              type: string
            widgetCustomizations:
              type: object
              properties:
                signInLabel:
                  type: string
                usernameLabel:
                  type: string
                usernameInfoTip:
                  type: string
                passwordLabel:
                  type: string
                passwordInfoTip:
                  type: string
                showPasswordVisibilityToggle:
                  type: boolean
                showUserIdentifier:
                  type: boolean
                forgotPasswordLabel:
                  type: string
                forgotPasswordUrl:
                  type: string
                unlockAccountLabel:
                  type: string
                unlockAccountUrl:
                  type: string
                helpLabel:
                  type: string
                helpUrl:
                  type: string
                customLink1Label:
                  type: string
                customLink1Url:
                  type: string
                customLink2Label:
                  type: string
                customLink2Url:
                  type: string
                authenticatorPageCustomLinkLabel:
                  type: string
                authenticatorPageCustomLinkUrl:
                  type: string
                classicRecoveryFlowEmailOrUsernameLabel:
                  type: string
            widgetVersion:
              $ref: '#/components/schemas/Version'
          required:
            - type
    SignInPageTouchPointVariant:
      type: string
      x-okta-known-values:
        - BACKGROUND_IMAGE
        - BACKGROUND_SECONDARY_COLOR
        - OKTA_DEFAULT
    SignOnInlineHook:
      properties:
        id:
          type: string
          readOnly: false
    SingleLogout:
      type: object
      properties:
        enabled:
          type: boolean
        issuer:
          type: string
        logoutUrl:
          type: string
    SmsTemplate:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        template:
          type: string
        translations:
          $ref: '#/components/schemas/SmsTemplateTranslations'
        type:
          $ref: '#/components/schemas/SmsTemplateType'
    SmsTemplateTranslations:
      type: object
      x-okta-extensible: true
    SmsTemplateType:
      type: string
      x-okta-known-values:
        - SMS_VERIFY_CODE
    SmsUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/SmsUserFactorProfile'
    SmsUserFactorProfile:
      type: object
      properties:
        phoneNumber:
          type: string
    SocialAuthToken:
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          readOnly: true
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
        tokenAuthScheme:
          type: string
        tokenType:
          type: string
    SpCertificate:
      type: object
      properties:
        x5c:
          type: array
          items:
            type: string
    Subscription:
      type: object
      properties:
        channels:
          items:
            type: string
          type: array
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    SubscriptionStatus:
      type: string
      x-okta-known-values:
        - subscribed
        - unsubscribed
    SwaApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/SwaApplicationSettingsApplication'
    SwaApplicationSettingsApplication:
      type: object
      properties:
        buttonField:
          type: string
        buttonSelector:
          type: string
        checkbox:
          type: string
        extraFieldSelector:
          type: string
        extraFieldValue:
          type: string
        loginUrlRegex:
          type: string
        passwordField:
          type: string
        passwordSelector:
          type: string
        redirectUrl:
          type: string
        targetURL:
          type: string
        url:
          type: string
        usernameField:
          type: string
        userNameSelector:
          type: string
    TempPassword:
      type: object
      properties:
        tempPassword:
          type: string
          readOnly: true
    Theme:
      type: object
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    ThemeResponse:
      type: object
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        favicon:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        logo:
          readOnly: true
          type: string
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
    ThreatInsightConfiguration:
      type: object
      properties:
        action:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        excludeZones:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    TimeDuration:
      description: A time duration specified as an [ISO-8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
      type: string
      pattern: ^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$
    TokenAuthorizationServerPolicyRuleAction:
      type: object
      properties:
        accessTokenLifetimeMinutes:
          type: integer
        inlineHook:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook'
        refreshTokenLifetimeMinutes:
          type: integer
        refreshTokenWindowMinutes:
          type: integer
    TokenAuthorizationServerPolicyRuleActionInlineHook:
      type: object
      properties:
        id:
          type: string
          readOnly: false
    TokenUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/TokenUserFactorProfile'
    TokenUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    TotpUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/TotpUserFactorProfile'
    TotpUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    TrustedOrigin:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
        name:
          type: string
        origin:
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/TrustedOriginScope'
        status:
          type: string
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    TrustedOriginScope:
      type: object
      properties:
        allowedOktaApps:
          type: array
          items:
            $ref: '#/components/schemas/IframeEmbedScopeAllowedApps'
        type:
          $ref: '#/components/schemas/TrustedOriginScopeType'
    TrustedOriginScopeType:
      type: string
      x-okta-known-values:
        - CORS
        - IFRAME_EMBED
        - REDIRECT
    U2fUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/U2fUserFactorProfile'
    U2fUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    UpdateEmailDomain:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
    UpdateUserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        profile:
          $ref: '#/components/schemas/UserProfile'
    User:
      type: object
      properties:
        activated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          type: string
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
        type:
          $ref: '#/components/schemas/UserType'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    UserActivationToken:
      type: object
      properties:
        activationToken:
          type: string
          readOnly: true
        activationUrl:
          type: string
          readOnly: true
    UserCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
    UserCredentials:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
    UserFactor:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        factorType:
          $ref: '#/components/schemas/FactorType'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        provider:
          $ref: '#/components/schemas/FactorProvider'
        status:
          $ref: '#/components/schemas/FactorStatus'
        verify:
          $ref: '#/components/schemas/VerifyFactorRequest'
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
      discriminator:
        propertyName: factorType
        mapping:
          call: '#/components/schemas/CallUserFactor'
          email: '#/components/schemas/EmailUserFactor'
          push: '#/components/schemas/PushUserFactor'
          question: '#/components/schemas/SecurityQuestionUserFactor'
          sms: '#/components/schemas/SmsUserFactor'
          token: '#/components/schemas/TokenUserFactor'
          token:hardware: '#/components/schemas/HardwareUserFactor'
          token:hotp: '#/components/schemas/CustomHotpUserFactor'
          token:software:totp: '#/components/schemas/TotpUserFactor'
          u2f: '#/components/schemas/U2fUserFactor'
          web: '#/components/schemas/WebUserFactor'
          webauthn: '#/components/schemas/WebAuthnUserFactor'
          hotp: '#/components/schemas/CustomHotpUserFactor'
    UserIdentifierConditionEvaluatorPattern:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/UserIdentifierMatchType'
        value:
          type: string
    UserIdentifierMatchType:
      type: string
      x-okta-known-values:
        - CONTAINS
        - EQUALS
        - EXPRESSION
        - STARTS_WITH
        - SUFFIX
    UserIdentifierPolicyRuleCondition:
      type: object
      properties:
        attribute:
          type: string
        patterns:
          type: array
          items:
            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
        type:
          $ref: '#/components/schemas/UserIdentifierType'
    UserIdentifierType:
      type: string
      x-okta-known-values:
        - ATTRIBUTE
        - IDENTIFIER
    UserIdentityProviderLinkRequest:
      type: object
      properties:
        externalId:
          type: string
    UserLifecycleAttributePolicyRuleCondition:
      type: object
      properties:
        attributeName:
          type: string
        matchingValue:
          type: string
    UserNextLogin:
      type: string
      x-okta-known-values:
        - changePassword
    UserPolicyRuleCondition:
      type: object
      properties:
        exclude:
          type: array
          items:
            type: string
        inactivity:
          $ref: '#/components/schemas/InactivityPolicyRuleCondition'
        include:
          type: array
          items:
            type: string
        lifecycleExpiration:
          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
        passwordExpiration:
          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
        userLifecycleAttribute:
          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
    UserProfile:
      type: object
      additionalProperties: true
      properties:
        city:
          type: string
          maxLength: 128
          nullable: true
        costCenter:
          type: string
        countryCode:
          type: string
          maxLength: 2
          nullable: true
        department:
          type: string
        displayName:
          type: string
        division:
          type: string
        email:
          type: string
          format: email
          minLength: 5
          maxLength: 100
        employeeNumber:
          type: string
        firstName:
          type: string
          minLength: 1
          maxLength: 50
          nullable: true
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string
        lastName:
          type: string
          minLength: 1
          maxLength: 50
          nullable: true
        locale:
          $ref: '#/components/schemas/Language'
        login:
          type: string
          maxLength: 100
        manager:
          type: string
        managerId:
          type: string
        middleName:
          type: string
        mobilePhone:
          type: string
          maxLength: 100
          nullable: true
        nickName:
          type: string
        organization:
          type: string
        postalAddress:
          type: string
          maxLength: 4096
          nullable: true
        preferredLanguage:
          type: string
        primaryPhone:
          type: string
          maxLength: 100
          nullable: true
        profileUrl:
          type: string
        secondEmail:
          type: string
          format: email
          minLength: 5
          maxLength: 100
          nullable: true
        state:
          type: string
          maxLength: 128
          nullable: true
        streetAddress:
          type: string
          maxLength: 1024
          nullable: true
        timezone:
          type: string
        title:
          type: string
        userType:
          type: string
        zipCode:
          type: string
          maxLength: 50
          nullable: true
    UserSchema:
      type: object
      properties:
        $schema:
          type: string
          readOnly: true
        created:
          type: string
          readOnly: true
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        id:
          type: string
          readOnly: true
        lastUpdated:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          type: string
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    UserSchemaAttribute:
      type: object
      properties:
        description:
          type: string
        enum:
          type: array
          items:
            type: string
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        pattern:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
        required:
          type: boolean
        scope:
          $ref: '#/components/schemas/UserSchemaAttributeScope'
        title:
          type: string
        type:
          $ref: '#/components/schemas/UserSchemaAttributeType'
        union:
          $ref: '#/components/schemas/UserSchemaAttributeUnion'
        unique:
          type: string
      x-okta-allow-null-property-value-for-updates: true
    UserSchemaAttributeEnum:
      type: object
      properties:
        const:
          type: string
        title:
          type: string
    UserSchemaAttributeItems:
      type: object
      properties:
        enum:
          type: array
          items:
            type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        type:
          type: string
    UserSchemaAttributeMaster:
      type: object
      properties:
        priority:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
        type:
          $ref: '#/components/schemas/UserSchemaAttributeMasterType'
    UserSchemaAttributeMasterPriority:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    UserSchemaAttributeMasterType:
      type: string
      x-okta-known-values:
        - OKTA
        - OVERRIDE
        - PROFILE_MASTER
    UserSchemaAttributePermission:
      type: object
      properties:
        action:
          type: string
        principal:
          type: string
    UserSchemaAttributeScope:
      type: string
      x-okta-known-values:
        - NONE
        - SELF
    UserSchemaAttributeType:
      type: string
      x-okta-known-values:
        - array
        - boolean
        - integer
        - number
        - string
    UserSchemaAttributeUnion:
      type: string
      x-okta-known-values:
        - DISABLE
        - ENABLE
    UserSchemaBase:
      type: object
      properties:
        id:
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaBaseProperties'
        required:
          type: array
          items:
            type: string
        type:
          type: string
    UserSchemaBaseProperties:
      type: object
      properties:
        city:
          $ref: '#/components/schemas/UserSchemaAttribute'
        costCenter:
          $ref: '#/components/schemas/UserSchemaAttribute'
        countryCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        department:
          $ref: '#/components/schemas/UserSchemaAttribute'
        displayName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        division:
          $ref: '#/components/schemas/UserSchemaAttribute'
        email:
          $ref: '#/components/schemas/UserSchemaAttribute'
        employeeNumber:
          $ref: '#/components/schemas/UserSchemaAttribute'
        firstName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificPrefix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificSuffix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        lastName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        locale:
          $ref: '#/components/schemas/UserSchemaAttribute'
        login:
          $ref: '#/components/schemas/UserSchemaAttribute'
        manager:
          $ref: '#/components/schemas/UserSchemaAttribute'
        managerId:
          $ref: '#/components/schemas/UserSchemaAttribute'
        middleName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        mobilePhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        nickName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        organization:
          $ref: '#/components/schemas/UserSchemaAttribute'
        postalAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        preferredLanguage:
          $ref: '#/components/schemas/UserSchemaAttribute'
        primaryPhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        profileUrl:
          $ref: '#/components/schemas/UserSchemaAttribute'
        secondEmail:
          $ref: '#/components/schemas/UserSchemaAttribute'
        state:
          $ref: '#/components/schemas/UserSchemaAttribute'
        streetAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        timezone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        title:
          $ref: '#/components/schemas/UserSchemaAttribute'
        userType:
          $ref: '#/components/schemas/UserSchemaAttribute'
        zipCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
    UserSchemaDefinitions:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/UserSchemaBase'
        custom:
          $ref: '#/components/schemas/UserSchemaPublic'
    UserSchemaProperties:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UserSchemaPropertiesProfile'
    UserSchemaPropertiesProfile:
      type: object
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
    UserSchemaPropertiesProfileItem:
      type: object
      properties:
        $ref:
          type: string
    UserSchemaPublic:
      type: object
      properties:
        id:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserSchemaAttribute'
        required:
          type: array
          items:
            type: string
        type:
          type: string
    UserStatus:
      type: string
      x-okta-known-values:
        - ACTIVE
        - DEPROVISIONED
        - LOCKED_OUT
        - PASSWORD_EXPIRED
        - PROVISIONED
        - RECOVERY
        - STAGED
        - SUSPENDED
    UserStatusPolicyRuleCondition:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/PolicyUserStatus'
    UserType:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          readOnly: true
        default:
          type: boolean
          readOnly: true
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        name:
          type: string
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    UserTypeCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
    UserVerificationEnum:
      type: string
      x-okta-known-values:
        - PREFERRED
        - REQUIRED
    VerificationMethod:
      type: object
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/AccessPolicyConstraints'
          type: array
        factorMode:
          type: string
        reauthenticateIn:
          type: string
        type:
          type: string
    VerifyFactorRequest:
      type: object
      properties:
        activationToken:
          type: string
        answer:
          type: string
        attestation:
          type: string
        clientData:
          type: string
        nextPassCode:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
    VerifyUserFactorResponse:
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
          readOnly: true
        factorResult:
          $ref: '#/components/schemas/VerifyUserFactorResult'
        factorResultMessage:
          type: string
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
    VerifyUserFactorResult:
      type: string
      x-okta-known-values:
        - CHALLENGE
        - ERROR
        - EXPIRED
        - FAILED
        - PASSCODE_REPLAYED
        - REJECTED
        - SUCCESS
        - TIMEOUT
        - TIME_WINDOW_EXCEEDED
        - WAITING
    Version:
      description: The version specified as a [Semantic Version](https://semver.org/).
      type: string
      pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
    VersionObject:
      type: object
      properties:
        minimum:
          type: string
    WebAuthnUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/WebAuthnUserFactorProfile'
    WebAuthnUserFactorProfile:
      type: object
      properties:
        authenticatorName:
          type: string
        credentialId:
          type: string
    WebUserFactor:
      allOf:
        - $ref: '#/components/schemas/UserFactor'
        - type: object
          properties:
            profile:
              $ref: '#/components/schemas/WebUserFactorProfile'
    WebUserFactorProfile:
      type: object
      properties:
        credentialId:
          type: string
    WsFederationApplication:
      x-okta-defined-as:
        name: template_wsfed
      allOf:
        - $ref: '#/components/schemas/Application'
        - type: object
          properties:
            name:
              type: string
              default: template_wsfed
            settings:
              $ref: '#/components/schemas/WsFederationApplicationSettings'
    WsFederationApplicationSettings:
      allOf:
        - $ref: '#/components/schemas/ApplicationSettings'
        - type: object
          properties:
            app:
              $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
    WsFederationApplicationSettingsApplication:
      type: object
      properties:
        attributeStatements:
          type: string
        audienceRestriction:
          type: string
        authnContextClassRef:
          type: string
        groupFilter:
          type: string
        groupName:
          type: string
        groupValueFormat:
          type: string
        nameIDFormat:
          type: string
        realm:
          type: string
        siteURL:
          type: string
        usernameAttribute:
          type: string
        wReplyOverride:
          type: boolean
        wReplyURL:
          type: string
  responses:
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            API Validation Failed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Access Denied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Resource Not Found:
              $ref: '#/components/examples/ErrorResourceNotFound'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Resource Not Found:
              $ref: '#/components/examples/ErrorTooManyRequests'
