/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Defines FactorResultType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum FactorResultType
    {
        /// <summary>
        /// Enum CANCELLED for value: CANCELLED
        /// </summary>
        [EnumMember(Value = "CANCELLED")]
        CANCELLED = 1,

        /// <summary>
        /// Enum CHALLENGE for value: CHALLENGE
        /// </summary>
        [EnumMember(Value = "CHALLENGE")]
        CHALLENGE = 2,

        /// <summary>
        /// Enum ERROR for value: ERROR
        /// </summary>
        [EnumMember(Value = "ERROR")]
        ERROR = 3,

        /// <summary>
        /// Enum FAILED for value: FAILED
        /// </summary>
        [EnumMember(Value = "FAILED")]
        FAILED = 4,

        /// <summary>
        /// Enum PASSCODEREPLAYED for value: PASSCODE_REPLAYED
        /// </summary>
        [EnumMember(Value = "PASSCODE_REPLAYED")]
        PASSCODEREPLAYED = 5,

        /// <summary>
        /// Enum REJECTED for value: REJECTED
        /// </summary>
        [EnumMember(Value = "REJECTED")]
        REJECTED = 6,

        /// <summary>
        /// Enum SUCCESS for value: SUCCESS
        /// </summary>
        [EnumMember(Value = "SUCCESS")]
        SUCCESS = 7,

        /// <summary>
        /// Enum TIMEOUT for value: TIMEOUT
        /// </summary>
        [EnumMember(Value = "TIMEOUT")]
        TIMEOUT = 8,

        /// <summary>
        /// Enum TIMEWINDOWEXCEEDED for value: TIME_WINDOW_EXCEEDED
        /// </summary>
        [EnumMember(Value = "TIME_WINDOW_EXCEEDED")]
        TIMEWINDOWEXCEEDED = 9,

        /// <summary>
        /// Enum WAITING for value: WAITING
        /// </summary>
        [EnumMember(Value = "WAITING")]
        WAITING = 10

    }

}
