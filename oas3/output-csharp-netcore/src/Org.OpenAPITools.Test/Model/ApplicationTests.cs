/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing Application
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ApplicationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Application
        //private Application instance;

        public ApplicationTests()
        {
            // TODO uncomment below to create an instance of Application
            //instance = new Application();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Application
        /// </summary>
        [Fact]
        public void ApplicationInstanceTest()
        {
            // TODO uncomment below to test "IsType" Application
            //Assert.IsType<Application>(instance);
        }

        /// <summary>
        /// Test deserialize a AutoLoginApplication from type Application
        /// </summary>
        [Fact]
        public void AutoLoginApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a AutoLoginApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new AutoLoginApplication().ToJson()));
        }
        /// <summary>
        /// Test deserialize a OpenIdConnectApplication from type Application
        /// </summary>
        [Fact]
        public void OpenIdConnectApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a OpenIdConnectApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new OpenIdConnectApplication().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SamlApplication from type Application
        /// </summary>
        [Fact]
        public void SamlApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a SamlApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new SamlApplication().ToJson()));
        }
        /// <summary>
        /// Test deserialize a BookmarkApplication from type Application
        /// </summary>
        [Fact]
        public void BookmarkApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a BookmarkApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new BookmarkApplication().ToJson()));
        }
        /// <summary>
        /// Test deserialize a BasicAuthApplication from type Application
        /// </summary>
        [Fact]
        public void BasicAuthApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a BasicAuthApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new BasicAuthApplication().ToJson()));
        }
        /// <summary>
        /// Test deserialize a WsFederationApplication from type Application
        /// </summary>
        [Fact]
        public void WsFederationApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a WsFederationApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new WsFederationApplication().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SecurePasswordStoreApplication from type Application
        /// </summary>
        [Fact]
        public void SecurePasswordStoreApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a SecurePasswordStoreApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new SecurePasswordStoreApplication().ToJson()));
        }
        /// <summary>
        /// Test deserialize a BrowserPluginApplication from type Application
        /// </summary>
        [Fact]
        public void BrowserPluginApplicationDeserializeFromApplicationTest()
        {
            // TODO uncomment below to test deserialize a BrowserPluginApplication from type Application
            //Assert.IsType<Application>(JsonConvert.DeserializeObject<Application>(new BrowserPluginApplication().ToJson()));
        }

        /// <summary>
        /// Test the property 'Embedded'
        /// </summary>
        [Fact]
        public void EmbeddedTest()
        {
            // TODO unit test for the property 'Embedded'
        }
        /// <summary>
        /// Test the property 'Links'
        /// </summary>
        [Fact]
        public void LinksTest()
        {
            // TODO unit test for the property 'Links'
        }
        /// <summary>
        /// Test the property 'Accessibility'
        /// </summary>
        [Fact]
        public void AccessibilityTest()
        {
            // TODO unit test for the property 'Accessibility'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Credentials'
        /// </summary>
        [Fact]
        public void CredentialsTest()
        {
            // TODO unit test for the property 'Credentials'
        }
        /// <summary>
        /// Test the property 'Features'
        /// </summary>
        [Fact]
        public void FeaturesTest()
        {
            // TODO unit test for the property 'Features'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Fact]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'LastUpdated'
        /// </summary>
        [Fact]
        public void LastUpdatedTest()
        {
            // TODO unit test for the property 'LastUpdated'
        }
        /// <summary>
        /// Test the property 'Licensing'
        /// </summary>
        [Fact]
        public void LicensingTest()
        {
            // TODO unit test for the property 'Licensing'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Profile'
        /// </summary>
        [Fact]
        public void ProfileTest()
        {
            // TODO unit test for the property 'Profile'
        }
        /// <summary>
        /// Test the property 'Settings'
        /// </summary>
        [Fact]
        public void SettingsTest()
        {
            // TODO unit test for the property 'Settings'
        }
        /// <summary>
        /// Test the property 'SignOnMode'
        /// </summary>
        [Fact]
        public void SignOnModeTest()
        {
            // TODO unit test for the property 'SignOnMode'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Visibility'
        /// </summary>
        [Fact]
        public void VisibilityTest()
        {
            // TODO unit test for the property 'Visibility'
        }

    }

}
