/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing PolicyRule
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PolicyRuleTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PolicyRule
        //private PolicyRule instance;

        public PolicyRuleTests()
        {
            // TODO uncomment below to create an instance of PolicyRule
            //instance = new PolicyRule();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PolicyRule
        /// </summary>
        [Fact]
        public void PolicyRuleInstanceTest()
        {
            // TODO uncomment below to test "IsType" PolicyRule
            //Assert.IsType<PolicyRule>(instance);
        }

        /// <summary>
        /// Test deserialize a ProfileEnrollmentPolicyRule from type PolicyRule
        /// </summary>
        [Fact]
        public void ProfileEnrollmentPolicyRuleDeserializeFromPolicyRuleTest()
        {
            // TODO uncomment below to test deserialize a ProfileEnrollmentPolicyRule from type PolicyRule
            //Assert.IsType<PolicyRule>(JsonConvert.DeserializeObject<PolicyRule>(new ProfileEnrollmentPolicyRule().ToJson()));
        }
        /// <summary>
        /// Test deserialize a OktaSignOnPolicyRule from type PolicyRule
        /// </summary>
        [Fact]
        public void OktaSignOnPolicyRuleDeserializeFromPolicyRuleTest()
        {
            // TODO uncomment below to test deserialize a OktaSignOnPolicyRule from type PolicyRule
            //Assert.IsType<PolicyRule>(JsonConvert.DeserializeObject<PolicyRule>(new OktaSignOnPolicyRule().ToJson()));
        }
        /// <summary>
        /// Test deserialize a PasswordPolicyRule from type PolicyRule
        /// </summary>
        [Fact]
        public void PasswordPolicyRuleDeserializeFromPolicyRuleTest()
        {
            // TODO uncomment below to test deserialize a PasswordPolicyRule from type PolicyRule
            //Assert.IsType<PolicyRule>(JsonConvert.DeserializeObject<PolicyRule>(new PasswordPolicyRule().ToJson()));
        }
        /// <summary>
        /// Test deserialize a AccessPolicyRule from type PolicyRule
        /// </summary>
        [Fact]
        public void AccessPolicyRuleDeserializeFromPolicyRuleTest()
        {
            // TODO uncomment below to test deserialize a AccessPolicyRule from type PolicyRule
            //Assert.IsType<PolicyRule>(JsonConvert.DeserializeObject<PolicyRule>(new AccessPolicyRule().ToJson()));
        }
        /// <summary>
        /// Test deserialize a AuthorizationServerPolicyRule from type PolicyRule
        /// </summary>
        [Fact]
        public void AuthorizationServerPolicyRuleDeserializeFromPolicyRuleTest()
        {
            // TODO uncomment below to test deserialize a AuthorizationServerPolicyRule from type PolicyRule
            //Assert.IsType<PolicyRule>(JsonConvert.DeserializeObject<PolicyRule>(new AuthorizationServerPolicyRule().ToJson()));
        }

        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'LastUpdated'
        /// </summary>
        [Fact]
        public void LastUpdatedTest()
        {
            // TODO unit test for the property 'LastUpdated'
        }
        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Fact]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'System'
        /// </summary>
        [Fact]
        public void SystemTest()
        {
            // TODO unit test for the property 'System'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Conditions'
        /// </summary>
        [Fact]
        public void ConditionsTest()
        {
            // TODO unit test for the property 'Conditions'
        }
        /// <summary>
        /// Test the property 'Actions'
        /// </summary>
        [Fact]
        public void ActionsTest()
        {
            // TODO unit test for the property 'Actions'
        }

    }

}
