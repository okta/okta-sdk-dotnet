/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing SystemLogApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SystemLogApiTests : IDisposable
    {
        private SystemLogApi instance;

        public SystemLogApiTests()
        {
            instance = new SystemLogApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SystemLogApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SystemLogApi
            //Assert.IsType<SystemLogApi>(instance);
        }

        /// <summary>
        /// Test GetLogs
        /// </summary>
        [Fact]
        public void GetLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? since = null;
            //DateTime? until = null;
            //string filter = null;
            //string q = null;
            //int? limit = null;
            //string sortOrder = null;
            //string after = null;
            //var response = instance.GetLogs(since, until, filter, q, limit, sortOrder, after);
            //Assert.IsType<List<LogEvent>>(response);
        }
    }
}
