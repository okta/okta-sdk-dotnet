/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing PolicyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PolicyApiTests : IDisposable
    {
        private PolicyApi instance;

        public PolicyApiTests()
        {
            instance = new PolicyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PolicyApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PolicyApi
            //Assert.IsType<PolicyApi>(instance);
        }

        /// <summary>
        /// Test ActivatePolicy
        /// </summary>
        [Fact]
        public void ActivatePolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //instance.ActivatePolicy(policyId);
        }

        /// <summary>
        /// Test ActivatePolicyRule
        /// </summary>
        [Fact]
        public void ActivatePolicyRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //string ruleId = null;
            //instance.ActivatePolicyRule(policyId, ruleId);
        }

        /// <summary>
        /// Test CreatePolicy
        /// </summary>
        [Fact]
        public void CreatePolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Policy policy = null;
            //bool? activate = null;
            //var response = instance.CreatePolicy(policy, activate);
            //Assert.IsType<Policy>(response);
        }

        /// <summary>
        /// Test CreatePolicyRule
        /// </summary>
        [Fact]
        public void CreatePolicyRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //PolicyRule policyRule = null;
            //var response = instance.CreatePolicyRule(policyId, policyRule);
            //Assert.IsType<PolicyRule>(response);
        }

        /// <summary>
        /// Test DeactivatePolicy
        /// </summary>
        [Fact]
        public void DeactivatePolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //instance.DeactivatePolicy(policyId);
        }

        /// <summary>
        /// Test DeactivatePolicyRule
        /// </summary>
        [Fact]
        public void DeactivatePolicyRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //string ruleId = null;
            //instance.DeactivatePolicyRule(policyId, ruleId);
        }

        /// <summary>
        /// Test DeletePolicy
        /// </summary>
        [Fact]
        public void DeletePolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //instance.DeletePolicy(policyId);
        }

        /// <summary>
        /// Test DeletePolicyRule
        /// </summary>
        [Fact]
        public void DeletePolicyRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //string ruleId = null;
            //instance.DeletePolicyRule(policyId, ruleId);
        }

        /// <summary>
        /// Test GetPolicy
        /// </summary>
        [Fact]
        public void GetPolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //string expand = null;
            //var response = instance.GetPolicy(policyId, expand);
            //Assert.IsType<Policy>(response);
        }

        /// <summary>
        /// Test GetPolicyRule
        /// </summary>
        [Fact]
        public void GetPolicyRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //string ruleId = null;
            //var response = instance.GetPolicyRule(policyId, ruleId);
            //Assert.IsType<PolicyRule>(response);
        }

        /// <summary>
        /// Test ListPolicies
        /// </summary>
        [Fact]
        public void ListPoliciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //string status = null;
            //string expand = null;
            //var response = instance.ListPolicies(type, status, expand);
            //Assert.IsType<List<Policy>>(response);
        }

        /// <summary>
        /// Test ListPolicyRules
        /// </summary>
        [Fact]
        public void ListPolicyRulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //var response = instance.ListPolicyRules(policyId);
            //Assert.IsType<List<PolicyRule>>(response);
        }

        /// <summary>
        /// Test UpdatePolicy
        /// </summary>
        [Fact]
        public void UpdatePolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //Policy policy = null;
            //var response = instance.UpdatePolicy(policyId, policy);
            //Assert.IsType<Policy>(response);
        }

        /// <summary>
        /// Test UpdatePolicyRule
        /// </summary>
        [Fact]
        public void UpdatePolicyRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string policyId = null;
            //string ruleId = null;
            //PolicyRule policyRule = null;
            //var response = instance.UpdatePolicyRule(policyId, ruleId, policyRule);
            //Assert.IsType<PolicyRule>(response);
        }
    }
}
