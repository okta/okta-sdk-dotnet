/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing CAPTCHAApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CAPTCHAApiTests : IDisposable
    {
        private CAPTCHAApi instance;

        public CAPTCHAApiTests()
        {
            instance = new CAPTCHAApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CAPTCHAApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CAPTCHAApi
            //Assert.IsType<CAPTCHAApi>(instance);
        }

        /// <summary>
        /// Test CreateCaptchaInstance
        /// </summary>
        [Fact]
        public void CreateCaptchaInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CAPTCHAInstance instance = null;
            //var response = instance.CreateCaptchaInstance(instance);
            //Assert.IsType<CAPTCHAInstance>(response);
        }

        /// <summary>
        /// Test DeleteCaptchaInstance
        /// </summary>
        [Fact]
        public void DeleteCaptchaInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string captchaId = null;
            //instance.DeleteCaptchaInstance(captchaId);
        }

        /// <summary>
        /// Test GetCaptchaInstance
        /// </summary>
        [Fact]
        public void GetCaptchaInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string captchaId = null;
            //var response = instance.GetCaptchaInstance(captchaId);
            //Assert.IsType<CAPTCHAInstance>(response);
        }

        /// <summary>
        /// Test ListCaptchaInstances
        /// </summary>
        [Fact]
        public void ListCaptchaInstancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListCaptchaInstances();
            //Assert.IsType<List<CAPTCHAInstance>>(response);
        }

        /// <summary>
        /// Test PartialUpdateCaptchaInstance
        /// </summary>
        [Fact]
        public void PartialUpdateCaptchaInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string captchaId = null;
            //CAPTCHAInstance instance = null;
            //var response = instance.PartialUpdateCaptchaInstance(captchaId, instance);
            //Assert.IsType<CAPTCHAInstance>(response);
        }

        /// <summary>
        /// Test UpdateCaptchaInstance
        /// </summary>
        [Fact]
        public void UpdateCaptchaInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string captchaId = null;
            //CAPTCHAInstance instance = null;
            //var response = instance.UpdateCaptchaInstance(captchaId, instance);
            //Assert.IsType<CAPTCHAInstance>(response);
        }
    }
}
