/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing FeatureApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class FeatureApiTests : IDisposable
    {
        private FeatureApi instance;

        public FeatureApiTests()
        {
            instance = new FeatureApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FeatureApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' FeatureApi
            //Assert.IsType<FeatureApi>(instance);
        }

        /// <summary>
        /// Test GetFeature
        /// </summary>
        [Fact]
        public void GetFeatureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string featureId = null;
            //var response = instance.GetFeature(featureId);
            //Assert.IsType<Feature>(response);
        }

        /// <summary>
        /// Test ListFeatureDependencies
        /// </summary>
        [Fact]
        public void ListFeatureDependenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string featureId = null;
            //var response = instance.ListFeatureDependencies(featureId);
            //Assert.IsType<List<Feature>>(response);
        }

        /// <summary>
        /// Test ListFeatureDependents
        /// </summary>
        [Fact]
        public void ListFeatureDependentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string featureId = null;
            //var response = instance.ListFeatureDependents(featureId);
            //Assert.IsType<List<Feature>>(response);
        }

        /// <summary>
        /// Test ListFeatures
        /// </summary>
        [Fact]
        public void ListFeaturesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListFeatures();
            //Assert.IsType<List<Feature>>(response);
        }

        /// <summary>
        /// Test UpdateFeatureLifecycle
        /// </summary>
        [Fact]
        public void UpdateFeatureLifecycleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string featureId = null;
            //string lifecycle = null;
            //string mode = null;
            //var response = instance.UpdateFeatureLifecycle(featureId, lifecycle, mode);
            //Assert.IsType<Feature>(response);
        }
    }
}
