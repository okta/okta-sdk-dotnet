/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing SchemaApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SchemaApiTests : IDisposable
    {
        private SchemaApi instance;

        public SchemaApiTests()
        {
            instance = new SchemaApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SchemaApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SchemaApi
            //Assert.IsType<SchemaApi>(instance);
        }

        /// <summary>
        /// Test GetApplicationUserSchema
        /// </summary>
        [Fact]
        public void GetApplicationUserSchemaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appInstanceId = null;
            //var response = instance.GetApplicationUserSchema(appInstanceId);
            //Assert.IsType<UserSchema>(response);
        }

        /// <summary>
        /// Test GetGroupSchema
        /// </summary>
        [Fact]
        public void GetGroupSchemaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetGroupSchema();
            //Assert.IsType<GroupSchema>(response);
        }

        /// <summary>
        /// Test GetUserSchema
        /// </summary>
        [Fact]
        public void GetUserSchemaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string schemaId = null;
            //var response = instance.GetUserSchema(schemaId);
            //Assert.IsType<UserSchema>(response);
        }

        /// <summary>
        /// Test UpdateApplicationUserProfile
        /// </summary>
        [Fact]
        public void UpdateApplicationUserProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appInstanceId = null;
            //UserSchema body = null;
            //var response = instance.UpdateApplicationUserProfile(appInstanceId, body);
            //Assert.IsType<UserSchema>(response);
        }

        /// <summary>
        /// Test UpdateGroupSchema
        /// </summary>
        [Fact]
        public void UpdateGroupSchemaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GroupSchema groupSchema = null;
            //var response = instance.UpdateGroupSchema(groupSchema);
            //Assert.IsType<GroupSchema>(response);
        }

        /// <summary>
        /// Test UpdateUserProfile
        /// </summary>
        [Fact]
        public void UpdateUserProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string schemaId = null;
            //UserSchema userSchema = null;
            //var response = instance.UpdateUserProfile(schemaId, userSchema);
            //Assert.IsType<UserSchema>(response);
        }
    }
}
