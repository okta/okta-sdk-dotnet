/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing TrustedOriginApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TrustedOriginApiTests : IDisposable
    {
        private TrustedOriginApi instance;

        public TrustedOriginApiTests()
        {
            instance = new TrustedOriginApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TrustedOriginApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TrustedOriginApi
            //Assert.IsType<TrustedOriginApi>(instance);
        }

        /// <summary>
        /// Test ActivateOrigin
        /// </summary>
        [Fact]
        public void ActivateOriginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trustedOriginId = null;
            //var response = instance.ActivateOrigin(trustedOriginId);
            //Assert.IsType<TrustedOrigin>(response);
        }

        /// <summary>
        /// Test CreateOrigin
        /// </summary>
        [Fact]
        public void CreateOriginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TrustedOrigin trustedOrigin = null;
            //var response = instance.CreateOrigin(trustedOrigin);
            //Assert.IsType<TrustedOrigin>(response);
        }

        /// <summary>
        /// Test DeactivateOrigin
        /// </summary>
        [Fact]
        public void DeactivateOriginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trustedOriginId = null;
            //var response = instance.DeactivateOrigin(trustedOriginId);
            //Assert.IsType<TrustedOrigin>(response);
        }

        /// <summary>
        /// Test DeleteOrigin
        /// </summary>
        [Fact]
        public void DeleteOriginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trustedOriginId = null;
            //instance.DeleteOrigin(trustedOriginId);
        }

        /// <summary>
        /// Test GetOrigin
        /// </summary>
        [Fact]
        public void GetOriginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trustedOriginId = null;
            //var response = instance.GetOrigin(trustedOriginId);
            //Assert.IsType<TrustedOrigin>(response);
        }

        /// <summary>
        /// Test ListOrigins
        /// </summary>
        [Fact]
        public void ListOriginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string q = null;
            //string filter = null;
            //string after = null;
            //int? limit = null;
            //var response = instance.ListOrigins(q, filter, after, limit);
            //Assert.IsType<List<TrustedOrigin>>(response);
        }

        /// <summary>
        /// Test UpdateOrigin
        /// </summary>
        [Fact]
        public void UpdateOriginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trustedOriginId = null;
            //TrustedOrigin trustedOrigin = null;
            //var response = instance.UpdateOrigin(trustedOriginId, trustedOrigin);
            //Assert.IsType<TrustedOrigin>(response);
        }
    }
}
