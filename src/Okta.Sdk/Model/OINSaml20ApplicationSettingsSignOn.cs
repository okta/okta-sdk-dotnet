/*
 * Okta Admin Management
 *
 * Allows customers to easily access the Okta Management APIs
 *
 * The version of the OpenAPI document: 2024.07.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Template: ModelGeneric
    /// Contains SAML 2.0 sign-on mode attributes. &gt; **Note:** Set &#x60;destinationOverride&#x60; to configure any other SAML 2.0 attributes in this section.
    /// </summary>
    [DataContract(Name = "OINSaml20ApplicationSettingsSignOn")]
    
    public partial class OINSaml20ApplicationSettingsSignOn : IEquatable<OINSaml20ApplicationSettingsSignOn>
    {
        
        /// <summary>
        /// Audience override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).
        /// </summary>
        /// <value>Audience override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).</value>
        [DataMember(Name = "audienceOverride", EmitDefaultValue = true)]
        public string AudienceOverride { get; set; }

        /// <summary>
        /// Gets or Sets ConfiguredAttributeStatements
        /// </summary>
        [DataMember(Name = "configuredAttributeStatements", EmitDefaultValue = true)]
        public List<SamlAttributeStatement> ConfiguredAttributeStatements { get; set; }

        /// <summary>
        /// Identifies a specific application resource in an IdP-initiated SSO scenario
        /// </summary>
        /// <value>Identifies a specific application resource in an IdP-initiated SSO scenario</value>
        [DataMember(Name = "defaultRelayState", EmitDefaultValue = true)]
        public string DefaultRelayState { get; set; }

        /// <summary>
        /// Destination override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).
        /// </summary>
        /// <value>Destination override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).</value>
        [DataMember(Name = "destinationOverride", EmitDefaultValue = true)]
        public string DestinationOverride { get; set; }

        /// <summary>
        /// Recipient override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).
        /// </summary>
        /// <value>Recipient override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).</value>
        [DataMember(Name = "recipientOverride", EmitDefaultValue = true)]
        public string RecipientOverride { get; set; }

        /// <summary>
        /// Determines the SAML app session lifetimes with Okta
        /// </summary>
        /// <value>Determines the SAML app session lifetimes with Okta</value>
        [DataMember(Name = "samlAssertionLifetimeSeconds", EmitDefaultValue = true)]
        public int SamlAssertionLifetimeSeconds { get; set; }

        /// <summary>
        /// Assertion Consumer Service (ACS) URL override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).
        /// </summary>
        /// <value>Assertion Consumer Service (ACS) URL override for CASB configuration. See [CASB config guide](https://help.okta.com/en-us/Content/Topics/Apps/CASB-config-guide.htm).</value>
        [DataMember(Name = "ssoAcsUrlOverride", EmitDefaultValue = true)]
        public string SsoAcsUrlOverride { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OINSaml20ApplicationSettingsSignOn {\n");
            sb.Append("  AudienceOverride: ").Append(AudienceOverride).Append("\n");
            sb.Append("  ConfiguredAttributeStatements: ").Append(ConfiguredAttributeStatements).Append("\n");
            sb.Append("  DefaultRelayState: ").Append(DefaultRelayState).Append("\n");
            sb.Append("  DestinationOverride: ").Append(DestinationOverride).Append("\n");
            sb.Append("  RecipientOverride: ").Append(RecipientOverride).Append("\n");
            sb.Append("  SamlAssertionLifetimeSeconds: ").Append(SamlAssertionLifetimeSeconds).Append("\n");
            sb.Append("  SsoAcsUrlOverride: ").Append(SsoAcsUrlOverride).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OINSaml20ApplicationSettingsSignOn);
        }

        /// <summary>
        /// Returns true if OINSaml20ApplicationSettingsSignOn instances are equal
        /// </summary>
        /// <param name="input">Instance of OINSaml20ApplicationSettingsSignOn to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OINSaml20ApplicationSettingsSignOn input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AudienceOverride == input.AudienceOverride ||
                    (this.AudienceOverride != null &&
                    this.AudienceOverride.Equals(input.AudienceOverride))
                ) && 
                (
                    this.ConfiguredAttributeStatements == input.ConfiguredAttributeStatements ||
                    this.ConfiguredAttributeStatements != null &&
                    input.ConfiguredAttributeStatements != null &&
                    this.ConfiguredAttributeStatements.SequenceEqual(input.ConfiguredAttributeStatements)
                ) && 
                (
                    this.DefaultRelayState == input.DefaultRelayState ||
                    (this.DefaultRelayState != null &&
                    this.DefaultRelayState.Equals(input.DefaultRelayState))
                ) && 
                (
                    this.DestinationOverride == input.DestinationOverride ||
                    (this.DestinationOverride != null &&
                    this.DestinationOverride.Equals(input.DestinationOverride))
                ) && 
                (
                    this.RecipientOverride == input.RecipientOverride ||
                    (this.RecipientOverride != null &&
                    this.RecipientOverride.Equals(input.RecipientOverride))
                ) && 
                (
                    this.SamlAssertionLifetimeSeconds == input.SamlAssertionLifetimeSeconds ||
                    this.SamlAssertionLifetimeSeconds.Equals(input.SamlAssertionLifetimeSeconds)
                ) && 
                (
                    this.SsoAcsUrlOverride == input.SsoAcsUrlOverride ||
                    (this.SsoAcsUrlOverride != null &&
                    this.SsoAcsUrlOverride.Equals(input.SsoAcsUrlOverride))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                
                if (this.AudienceOverride != null)
                {
                    hashCode = (hashCode * 59) + this.AudienceOverride.GetHashCode();
                }
                if (this.ConfiguredAttributeStatements != null)
                {
                    hashCode = (hashCode * 59) + this.ConfiguredAttributeStatements.GetHashCode();
                }
                if (this.DefaultRelayState != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultRelayState.GetHashCode();
                }
                if (this.DestinationOverride != null)
                {
                    hashCode = (hashCode * 59) + this.DestinationOverride.GetHashCode();
                }
                if (this.RecipientOverride != null)
                {
                    hashCode = (hashCode * 59) + this.RecipientOverride.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.SamlAssertionLifetimeSeconds.GetHashCode();
                if (this.SsoAcsUrlOverride != null)
                {
                    hashCode = (hashCode * 59) + this.SsoAcsUrlOverride.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
