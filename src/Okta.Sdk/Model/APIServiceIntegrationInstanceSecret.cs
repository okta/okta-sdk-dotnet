/*
 * Okta Admin Management
 *
 * Allows customers to easily access the Okta Management APIs
 *
 * The version of the OpenAPI document: 5.1.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Template: ModelGeneric
    /// APIServiceIntegrationInstanceSecret
    /// </summary>
    [DataContract(Name = "APIServiceIntegrationInstanceSecret")]
    
    public partial class APIServiceIntegrationInstanceSecret : IEquatable<APIServiceIntegrationInstanceSecret>
    {
        /// <summary>
        /// Status of the API Service Integration instance Secret
        /// </summary>
        /// <value>Status of the API Service Integration instance Secret</value>
        [JsonConverter(typeof(StringEnumSerializingConverter))]
        public sealed class StatusEnum : StringEnum
        {
            /// <summary>
            /// StringEnum ACTIVE for value: ACTIVE
            /// </summary>
            
            public static StatusEnum ACTIVE = new StatusEnum("ACTIVE");

            /// <summary>
            /// StringEnum INACTIVE for value: INACTIVE
            /// </summary>
            
            public static StatusEnum INACTIVE = new StatusEnum("INACTIVE");


            /// <summary>
            /// Implicit operator declaration to accept and convert a string value as a <see cref="StatusEnum"/>
            /// </summary>
            /// <param name="value">The value to use</param>
            public static implicit operator StatusEnum(string value) => new StatusEnum(value);

            /// <summary>
            /// Creates a new <see cref="Status"/> instance.
            /// </summary>
            /// <param name="value">The value to use.</param>
            public StatusEnum(string value)
                : base(value)
            {
            }
        }


        /// <summary>
        /// Status of the API Service Integration instance Secret
        /// </summary>
        /// <value>Status of the API Service Integration instance Secret</value>
        [DataMember(Name = "status", EmitDefaultValue = true)]
        
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="APIServiceIntegrationInstanceSecret" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public APIServiceIntegrationInstanceSecret() { }
        
        /// <summary>
        /// The OAuth 2.0 client secret string. The client secret string is returned in the response of a Secret creation request. In other responses (such as list, activate, or deactivate requests), the client secret is returned as an undisclosed hashed value.
        /// </summary>
        /// <value>The OAuth 2.0 client secret string. The client secret string is returned in the response of a Secret creation request. In other responses (such as list, activate, or deactivate requests), the client secret is returned as an undisclosed hashed value.</value>
        [DataMember(Name = "client_secret", EmitDefaultValue = true)]
        public string ClientSecret { get; private set; }

        /// <summary>
        /// Returns false as ClientSecret should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeClientSecret()
        {
            return false;
        }
        /// <summary>
        /// Timestamp when the API Service Integration instance Secret was created
        /// </summary>
        /// <value>Timestamp when the API Service Integration instance Secret was created</value>
        [DataMember(Name = "created", EmitDefaultValue = true)]
        public string Created { get; private set; }

        /// <summary>
        /// Returns false as Created should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreated()
        {
            return false;
        }
        /// <summary>
        /// The ID of the API Service Integration instance Secret
        /// </summary>
        /// <value>The ID of the API Service Integration instance Secret</value>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; private set; }

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return false;
        }
        /// <summary>
        /// Timestamp when the API Service Integration instance Secret was updated
        /// </summary>
        /// <value>Timestamp when the API Service Integration instance Secret was updated</value>
        [DataMember(Name = "lastUpdated", EmitDefaultValue = true)]
        public string LastUpdated { get; private set; }

        /// <summary>
        /// Returns false as LastUpdated should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeLastUpdated()
        {
            return false;
        }
        /// <summary>
        /// OAuth 2.0 client secret string hash
        /// </summary>
        /// <value>OAuth 2.0 client secret string hash</value>
        [DataMember(Name = "secret_hash", EmitDefaultValue = true)]
        public string SecretHash { get; private set; }

        /// <summary>
        /// Returns false as SecretHash should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSecretHash()
        {
            return false;
        }
        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name = "_links", EmitDefaultValue = true)]
        public APIServiceIntegrationSecretLinks Links { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class APIServiceIntegrationInstanceSecret {\n");
            sb.Append("  ClientSecret: ").Append(ClientSecret).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  SecretHash: ").Append(SecretHash).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as APIServiceIntegrationInstanceSecret);
        }

        /// <summary>
        /// Returns true if APIServiceIntegrationInstanceSecret instances are equal
        /// </summary>
        /// <param name="input">Instance of APIServiceIntegrationInstanceSecret to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(APIServiceIntegrationInstanceSecret input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ClientSecret == input.ClientSecret ||
                    (this.ClientSecret != null &&
                    this.ClientSecret.Equals(input.ClientSecret))
                ) && 
                (
                    this.Created == input.Created ||
                    (this.Created != null &&
                    this.Created.Equals(input.Created))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LastUpdated == input.LastUpdated ||
                    (this.LastUpdated != null &&
                    this.LastUpdated.Equals(input.LastUpdated))
                ) && 
                (
                    this.SecretHash == input.SecretHash ||
                    (this.SecretHash != null &&
                    this.SecretHash.Equals(input.SecretHash))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.Links == input.Links ||
                    (this.Links != null &&
                    this.Links.Equals(input.Links))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                
                if (this.ClientSecret != null)
                {
                    hashCode = (hashCode * 59) + this.ClientSecret.GetHashCode();
                }
                if (this.Created != null)
                {
                    hashCode = (hashCode * 59) + this.Created.GetHashCode();
                }
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.LastUpdated != null)
                {
                    hashCode = (hashCode * 59) + this.LastUpdated.GetHashCode();
                }
                if (this.SecretHash != null)
                {
                    hashCode = (hashCode * 59) + this.SecretHash.GetHashCode();
                }
                if (this.Status != null)
                {
                    hashCode = (hashCode * 59) + this.Status.GetHashCode();
                }
                if (this.Links != null)
                {
                    hashCode = (hashCode * 59) + this.Links.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
