/*
 * Okta Admin Management
 *
 * Allows customers to easily access the Okta Management APIs
 *
 * The version of the OpenAPI document: 5.1.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Defines OAuthGrantType
    /// </summary>
    [JsonConverter(typeof(StringEnumSerializingConverter))]
    public sealed class OAuthGrantType : StringEnum
    {
        /// <summary>
        /// StringEnum OAuthGrantType for value: authorization_code
        /// </summary>
        public static OAuthGrantType AuthorizationCode = new OAuthGrantType("authorization_code");
        /// <summary>
        /// StringEnum OAuthGrantType for value: client_credentials
        /// </summary>
        public static OAuthGrantType ClientCredentials = new OAuthGrantType("client_credentials");
        /// <summary>
        /// StringEnum OAuthGrantType for value: implicit
        /// </summary>
        public static OAuthGrantType Implicit = new OAuthGrantType("implicit");
        /// <summary>
        /// StringEnum OAuthGrantType for value: interaction_code
        /// </summary>
        public static OAuthGrantType InteractionCode = new OAuthGrantType("interaction_code");
        /// <summary>
        /// StringEnum OAuthGrantType for value: password
        /// </summary>
        public static OAuthGrantType Password = new OAuthGrantType("password");
        /// <summary>
        /// StringEnum OAuthGrantType for value: refresh_token
        /// </summary>
        public static OAuthGrantType RefreshToken = new OAuthGrantType("refresh_token");
        /// <summary>
        /// StringEnum OAuthGrantType for value: urn:ietf:params:oauth:grant-type:device_code
        /// </summary>
        public static OAuthGrantType UrnietfparamsoauthgrantTypedeviceCode = new OAuthGrantType("urn:ietf:params:oauth:grant-type:device_code");
        /// <summary>
        /// StringEnum OAuthGrantType for value: urn:ietf:params:oauth:grant-type:jwt-bearer
        /// </summary>
        public static OAuthGrantType UrnietfparamsoauthgrantTypejwtBearer = new OAuthGrantType("urn:ietf:params:oauth:grant-type:jwt-bearer");
        /// <summary>
        /// StringEnum OAuthGrantType for value: urn:ietf:params:oauth:grant-type:saml2-bearer
        /// </summary>
        public static OAuthGrantType UrnietfparamsoauthgrantTypesaml2Bearer = new OAuthGrantType("urn:ietf:params:oauth:grant-type:saml2-bearer");
        /// <summary>
        /// StringEnum OAuthGrantType for value: urn:ietf:params:oauth:grant-type:token-exchange
        /// </summary>
        public static OAuthGrantType UrnietfparamsoauthgrantTypetokenExchange = new OAuthGrantType("urn:ietf:params:oauth:grant-type:token-exchange");

        /// <summary>
        /// Implicit operator declaration to accept and convert a string value as a <see cref="OAuthGrantType"/>
        /// </summary>
        /// <param name="value">The value to use</param>
        public static implicit operator OAuthGrantType(string value) => new OAuthGrantType(value);

        /// <summary>
        /// Creates a new <see cref="OAuthGrantType"/> instance.
        /// </summary>
        /// <param name="value">The value to use.</param>
        public OAuthGrantType(string value)
            : base(value)
        {
        }
    }


}
