/*
 * Okta Management
 *
 * Allows customers to easily access the Okta Management APIs
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Defines NotificationType
    /// </summary>
    [JsonConverter(typeof(StringEnumSerializingConverter))]
    public sealed class NotificationType : StringEnum
    {
        /// <summary>
        /// StringEnum NotificationType for value: AD_AGENT
        /// </summary>
        public static NotificationType ADAGENT = new NotificationType("AD_AGENT");
        /// <summary>
        /// StringEnum NotificationType for value: APP_IMPORT
        /// </summary>
        public static NotificationType APPIMPORT = new NotificationType("APP_IMPORT");
        /// <summary>
        /// StringEnum NotificationType for value: CONNECTOR_AGENT
        /// </summary>
        public static NotificationType CONNECTORAGENT = new NotificationType("CONNECTOR_AGENT");
        /// <summary>
        /// StringEnum NotificationType for value: IWA_AGENT
        /// </summary>
        public static NotificationType IWAAGENT = new NotificationType("IWA_AGENT");
        /// <summary>
        /// StringEnum NotificationType for value: LDAP_AGENT
        /// </summary>
        public static NotificationType LDAPAGENT = new NotificationType("LDAP_AGENT");
        /// <summary>
        /// StringEnum NotificationType for value: OKTA_ANNOUNCEMENT
        /// </summary>
        public static NotificationType OKTAANNOUNCEMENT = new NotificationType("OKTA_ANNOUNCEMENT");
        /// <summary>
        /// StringEnum NotificationType for value: OKTA_ISSUE
        /// </summary>
        public static NotificationType OKTAISSUE = new NotificationType("OKTA_ISSUE");
        /// <summary>
        /// StringEnum NotificationType for value: OKTA_UPDATE
        /// </summary>
        public static NotificationType OKTAUPDATE = new NotificationType("OKTA_UPDATE");
        /// <summary>
        /// StringEnum NotificationType for value: RATELIMIT_NOTIFICATION
        /// </summary>
        public static NotificationType RATELIMITNOTIFICATION = new NotificationType("RATELIMIT_NOTIFICATION");
        /// <summary>
        /// StringEnum NotificationType for value: REPORT_SUSPICIOUS_ACTIVITY
        /// </summary>
        public static NotificationType REPORTSUSPICIOUSACTIVITY = new NotificationType("REPORT_SUSPICIOUS_ACTIVITY");
        /// <summary>
        /// StringEnum NotificationType for value: USER_DEPROVISION
        /// </summary>
        public static NotificationType USERDEPROVISION = new NotificationType("USER_DEPROVISION");
        /// <summary>
        /// StringEnum NotificationType for value: USER_LOCKED_OUT
        /// </summary>
        public static NotificationType USERLOCKEDOUT = new NotificationType("USER_LOCKED_OUT");

        /// <summary>
        /// Implicit operator declaration to accept and convert a string value as a <see cref="NotificationType"/>
        /// </summary>
        /// <param name="value">The value to use</param>
        public static implicit operator NotificationType(string value) => new NotificationType(value);

        /// <summary>
        /// Creates a new <see cref="NotificationType"/> instance.
        /// </summary>
        /// <param name="value">The value to use.</param>
        public NotificationType(string value)
            : base(value)
        {
        }
    }


}
