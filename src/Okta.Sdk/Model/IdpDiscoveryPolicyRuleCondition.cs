/*
 * Okta Admin Management
 *
 * Allows customers to easily access the Okta Management APIs
 *
 * The version of the OpenAPI document: 5.1.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Template: ModelGeneric
    /// IdpDiscoveryPolicyRuleCondition
    /// </summary>
    [DataContract(Name = "IdpDiscoveryPolicyRuleCondition")]
    
    public partial class IdpDiscoveryPolicyRuleCondition : IEquatable<IdpDiscoveryPolicyRuleCondition>
    {
        
        /// <summary>
        /// Gets or Sets App
        /// </summary>
        [DataMember(Name = "app", EmitDefaultValue = true)]
        public AppAndInstancePolicyRuleCondition App { get; set; }

        /// <summary>
        /// Gets or Sets Network
        /// </summary>
        [DataMember(Name = "network", EmitDefaultValue = true)]
        public PolicyNetworkCondition Network { get; set; }

        /// <summary>
        /// Gets or Sets UserIdentifier
        /// </summary>
        [DataMember(Name = "userIdentifier", EmitDefaultValue = true)]
        public UserIdentifierPolicyRuleCondition UserIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        [DataMember(Name = "platform", EmitDefaultValue = true)]
        public PlatformPolicyRuleCondition Platform { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IdpDiscoveryPolicyRuleCondition {\n");
            sb.Append("  App: ").Append(App).Append("\n");
            sb.Append("  Network: ").Append(Network).Append("\n");
            sb.Append("  UserIdentifier: ").Append(UserIdentifier).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as IdpDiscoveryPolicyRuleCondition);
        }

        /// <summary>
        /// Returns true if IdpDiscoveryPolicyRuleCondition instances are equal
        /// </summary>
        /// <param name="input">Instance of IdpDiscoveryPolicyRuleCondition to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IdpDiscoveryPolicyRuleCondition input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.App == input.App ||
                    (this.App != null &&
                    this.App.Equals(input.App))
                ) && 
                (
                    this.Network == input.Network ||
                    (this.Network != null &&
                    this.Network.Equals(input.Network))
                ) && 
                (
                    this.UserIdentifier == input.UserIdentifier ||
                    (this.UserIdentifier != null &&
                    this.UserIdentifier.Equals(input.UserIdentifier))
                ) && 
                (
                    this.Platform == input.Platform ||
                    (this.Platform != null &&
                    this.Platform.Equals(input.Platform))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                
                if (this.App != null)
                {
                    hashCode = (hashCode * 59) + this.App.GetHashCode();
                }
                if (this.Network != null)
                {
                    hashCode = (hashCode * 59) + this.Network.GetHashCode();
                }
                if (this.UserIdentifier != null)
                {
                    hashCode = (hashCode * 59) + this.UserIdentifier.GetHashCode();
                }
                if (this.Platform != null)
                {
                    hashCode = (hashCode * 59) + this.Platform.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
