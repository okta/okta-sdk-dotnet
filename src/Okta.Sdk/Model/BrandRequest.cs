/*
 * Okta Admin Management
 *
 * Allows customers to easily access the Okta Management APIs
 *
 * The version of the OpenAPI document: 5.1.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Template: ModelGeneric
    /// BrandRequest
    /// </summary>
    [DataContract(Name = "BrandRequest")]
    
    public partial class BrandRequest : IEquatable<BrandRequest>
    {
        
        /// <summary>
        /// Gets or Sets AgreeToCustomPrivacyPolicy
        /// </summary>
        [DataMember(Name = "agreeToCustomPrivacyPolicy", EmitDefaultValue = true)]
        public bool AgreeToCustomPrivacyPolicy { get; set; }

        /// <summary>
        /// Gets or Sets CustomPrivacyPolicyUrl
        /// </summary>
        [DataMember(Name = "customPrivacyPolicyUrl", EmitDefaultValue = true)]
        public string CustomPrivacyPolicyUrl { get; set; }

        /// <summary>
        /// Gets or Sets DefaultApp
        /// </summary>
        [DataMember(Name = "defaultApp", EmitDefaultValue = true)]
        public DefaultApp DefaultApp { get; set; }

        /// <summary>
        /// Gets or Sets EmailDomainId
        /// </summary>
        [DataMember(Name = "emailDomainId", EmitDefaultValue = true)]
        public string EmailDomainId { get; set; }

        /// <summary>
        /// The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)
        /// </summary>
        /// <value>The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)</value>
        [DataMember(Name = "locale", EmitDefaultValue = true)]
        public string Locale { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets RemovePoweredByOkta
        /// </summary>
        [DataMember(Name = "removePoweredByOkta", EmitDefaultValue = true)]
        public bool RemovePoweredByOkta { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BrandRequest {\n");
            sb.Append("  AgreeToCustomPrivacyPolicy: ").Append(AgreeToCustomPrivacyPolicy).Append("\n");
            sb.Append("  CustomPrivacyPolicyUrl: ").Append(CustomPrivacyPolicyUrl).Append("\n");
            sb.Append("  DefaultApp: ").Append(DefaultApp).Append("\n");
            sb.Append("  EmailDomainId: ").Append(EmailDomainId).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  RemovePoweredByOkta: ").Append(RemovePoweredByOkta).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BrandRequest);
        }

        /// <summary>
        /// Returns true if BrandRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of BrandRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BrandRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AgreeToCustomPrivacyPolicy == input.AgreeToCustomPrivacyPolicy ||
                    this.AgreeToCustomPrivacyPolicy.Equals(input.AgreeToCustomPrivacyPolicy)
                ) && 
                (
                    this.CustomPrivacyPolicyUrl == input.CustomPrivacyPolicyUrl ||
                    (this.CustomPrivacyPolicyUrl != null &&
                    this.CustomPrivacyPolicyUrl.Equals(input.CustomPrivacyPolicyUrl))
                ) && 
                (
                    this.DefaultApp == input.DefaultApp ||
                    (this.DefaultApp != null &&
                    this.DefaultApp.Equals(input.DefaultApp))
                ) && 
                (
                    this.EmailDomainId == input.EmailDomainId ||
                    (this.EmailDomainId != null &&
                    this.EmailDomainId.Equals(input.EmailDomainId))
                ) && 
                (
                    this.Locale == input.Locale ||
                    (this.Locale != null &&
                    this.Locale.Equals(input.Locale))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.RemovePoweredByOkta == input.RemovePoweredByOkta ||
                    this.RemovePoweredByOkta.Equals(input.RemovePoweredByOkta)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                
                hashCode = (hashCode * 59) + this.AgreeToCustomPrivacyPolicy.GetHashCode();
                if (this.CustomPrivacyPolicyUrl != null)
                {
                    hashCode = (hashCode * 59) + this.CustomPrivacyPolicyUrl.GetHashCode();
                }
                if (this.DefaultApp != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultApp.GetHashCode();
                }
                if (this.EmailDomainId != null)
                {
                    hashCode = (hashCode * 59) + this.EmailDomainId.GetHashCode();
                }
                if (this.Locale != null)
                {
                    hashCode = (hashCode * 59) + this.Locale.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.RemovePoweredByOkta.GetHashCode();
                return hashCode;
            }
        }

    }

}
