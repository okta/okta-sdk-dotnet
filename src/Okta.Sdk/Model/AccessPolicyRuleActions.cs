/*
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Template: ModelGeneric
    /// AccessPolicyRuleActions
    /// </summary>
    [DataContract(Name = "AccessPolicyRuleActions")]
    
    public partial class AccessPolicyRuleActions : IEquatable<AccessPolicyRuleActions>
    {
        
        /// <summary>
        /// Gets or Sets Enroll
        /// </summary>
        [DataMember(Name = "enroll", EmitDefaultValue = false)]
        public PolicyRuleActionsEnroll Enroll { get; set; }

        /// <summary>
        /// Gets or Sets Idp
        /// </summary>
        [DataMember(Name = "idp", EmitDefaultValue = false)]
        public IdpPolicyRuleAction Idp { get; set; }

        /// <summary>
        /// Gets or Sets PasswordChange
        /// </summary>
        [DataMember(Name = "passwordChange", EmitDefaultValue = false)]
        public PasswordPolicyRuleAction PasswordChange { get; set; }

        /// <summary>
        /// Gets or Sets SelfServicePasswordReset
        /// </summary>
        [DataMember(Name = "selfServicePasswordReset", EmitDefaultValue = false)]
        public PasswordPolicyRuleAction SelfServicePasswordReset { get; set; }

        /// <summary>
        /// Gets or Sets SelfServiceUnlock
        /// </summary>
        [DataMember(Name = "selfServiceUnlock", EmitDefaultValue = false)]
        public PasswordPolicyRuleAction SelfServiceUnlock { get; set; }

        /// <summary>
        /// Gets or Sets Signon
        /// </summary>
        [DataMember(Name = "signon", EmitDefaultValue = false)]
        public OktaSignOnPolicyRuleSignonActions Signon { get; set; }

        /// <summary>
        /// Gets or Sets AppSignOn
        /// </summary>
        [DataMember(Name = "appSignOn", EmitDefaultValue = false)]
        public AccessPolicyRuleApplicationSignOn AppSignOn { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccessPolicyRuleActions {\n");
            sb.Append("  Enroll: ").Append(Enroll).Append("\n");
            sb.Append("  Idp: ").Append(Idp).Append("\n");
            sb.Append("  PasswordChange: ").Append(PasswordChange).Append("\n");
            sb.Append("  SelfServicePasswordReset: ").Append(SelfServicePasswordReset).Append("\n");
            sb.Append("  SelfServiceUnlock: ").Append(SelfServiceUnlock).Append("\n");
            sb.Append("  Signon: ").Append(Signon).Append("\n");
            sb.Append("  AppSignOn: ").Append(AppSignOn).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccessPolicyRuleActions);
        }

        /// <summary>
        /// Returns true if AccessPolicyRuleActions instances are equal
        /// </summary>
        /// <param name="input">Instance of AccessPolicyRuleActions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccessPolicyRuleActions input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Enroll == input.Enroll ||
                    (this.Enroll != null &&
                    this.Enroll.Equals(input.Enroll))
                ) && 
                (
                    this.Idp == input.Idp ||
                    (this.Idp != null &&
                    this.Idp.Equals(input.Idp))
                ) && 
                (
                    this.PasswordChange == input.PasswordChange ||
                    (this.PasswordChange != null &&
                    this.PasswordChange.Equals(input.PasswordChange))
                ) && 
                (
                    this.SelfServicePasswordReset == input.SelfServicePasswordReset ||
                    (this.SelfServicePasswordReset != null &&
                    this.SelfServicePasswordReset.Equals(input.SelfServicePasswordReset))
                ) && 
                (
                    this.SelfServiceUnlock == input.SelfServiceUnlock ||
                    (this.SelfServiceUnlock != null &&
                    this.SelfServiceUnlock.Equals(input.SelfServiceUnlock))
                ) && 
                (
                    this.Signon == input.Signon ||
                    (this.Signon != null &&
                    this.Signon.Equals(input.Signon))
                ) && 
                (
                    this.AppSignOn == input.AppSignOn ||
                    (this.AppSignOn != null &&
                    this.AppSignOn.Equals(input.AppSignOn))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                
                if (this.Enroll != null)
                {
                    hashCode = (hashCode * 59) + this.Enroll.GetHashCode();
                }
                if (this.Idp != null)
                {
                    hashCode = (hashCode * 59) + this.Idp.GetHashCode();
                }
                if (this.PasswordChange != null)
                {
                    hashCode = (hashCode * 59) + this.PasswordChange.GetHashCode();
                }
                if (this.SelfServicePasswordReset != null)
                {
                    hashCode = (hashCode * 59) + this.SelfServicePasswordReset.GetHashCode();
                }
                if (this.SelfServiceUnlock != null)
                {
                    hashCode = (hashCode * 59) + this.SelfServiceUnlock.GetHashCode();
                }
                if (this.Signon != null)
                {
                    hashCode = (hashCode * 59) + this.Signon.GetHashCode();
                }
                if (this.AppSignOn != null)
                {
                    hashCode = (hashCode * 59) + this.AppSignOn.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
