/*
 * Okta Admin Management
 *
 * Allows customers to easily access the Okta Management APIs
 *
 * The version of the OpenAPI document: 5.1.0
 * Contact: devex-public@okta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Okta.Sdk.Client.OpenAPIDateConverter;

namespace Okta.Sdk.Model
{
    /// <summary>
    /// Template: ModelGeneric
    /// ProfileEnrollmentPolicyRuleAction
    /// </summary>
    [DataContract(Name = "ProfileEnrollmentPolicyRuleAction")]
    
    public partial class ProfileEnrollmentPolicyRuleAction : IEquatable<ProfileEnrollmentPolicyRuleAction>
    {
        /// <summary>
        /// Defines ProgressiveProfilingAction
        /// </summary>
        [JsonConverter(typeof(StringEnumSerializingConverter))]
        public sealed class ProgressiveProfilingActionEnum : StringEnum
        {
            /// <summary>
            /// StringEnum ENABLED for value: ENABLED
            /// </summary>
            
            public static ProgressiveProfilingActionEnum ENABLED = new ProgressiveProfilingActionEnum("ENABLED");

            /// <summary>
            /// StringEnum DISABLED for value: DISABLED
            /// </summary>
            
            public static ProgressiveProfilingActionEnum DISABLED = new ProgressiveProfilingActionEnum("DISABLED");


            /// <summary>
            /// Implicit operator declaration to accept and convert a string value as a <see cref="ProgressiveProfilingActionEnum"/>
            /// </summary>
            /// <param name="value">The value to use</param>
            public static implicit operator ProgressiveProfilingActionEnum(string value) => new ProgressiveProfilingActionEnum(value);

            /// <summary>
            /// Creates a new <see cref="ProgressiveProfilingAction"/> instance.
            /// </summary>
            /// <param name="value">The value to use.</param>
            public ProgressiveProfilingActionEnum(string value)
                : base(value)
            {
            }
        }


        /// <summary>
        /// Gets or Sets ProgressiveProfilingAction
        /// </summary>
        [DataMember(Name = "progressiveProfilingAction", EmitDefaultValue = true)]
        
        public ProgressiveProfilingActionEnum ProgressiveProfilingAction { get; set; }
        /// <summary>
        /// Defines UnknownUserAction
        /// </summary>
        [JsonConverter(typeof(StringEnumSerializingConverter))]
        public sealed class UnknownUserActionEnum : StringEnum
        {
            /// <summary>
            /// StringEnum DENY for value: DENY
            /// </summary>
            
            public static UnknownUserActionEnum DENY = new UnknownUserActionEnum("DENY");

            /// <summary>
            /// StringEnum REGISTER for value: REGISTER
            /// </summary>
            
            public static UnknownUserActionEnum REGISTER = new UnknownUserActionEnum("REGISTER");


            /// <summary>
            /// Implicit operator declaration to accept and convert a string value as a <see cref="UnknownUserActionEnum"/>
            /// </summary>
            /// <param name="value">The value to use</param>
            public static implicit operator UnknownUserActionEnum(string value) => new UnknownUserActionEnum(value);

            /// <summary>
            /// Creates a new <see cref="UnknownUserAction"/> instance.
            /// </summary>
            /// <param name="value">The value to use.</param>
            public UnknownUserActionEnum(string value)
                : base(value)
            {
            }
        }


        /// <summary>
        /// Gets or Sets UnknownUserAction
        /// </summary>
        [DataMember(Name = "unknownUserAction", EmitDefaultValue = true)]
        
        public UnknownUserActionEnum UnknownUserAction { get; set; }
        
        /// <summary>
        /// Gets or Sets Access
        /// </summary>
        [DataMember(Name = "access", EmitDefaultValue = true)]
        public string Access { get; set; }

        /// <summary>
        /// Gets or Sets ActivationRequirements
        /// </summary>
        [DataMember(Name = "activationRequirements", EmitDefaultValue = true)]
        public ProfileEnrollmentPolicyRuleActivationRequirement ActivationRequirements { get; set; }

        /// <summary>
        /// Gets or Sets PreRegistrationInlineHooks
        /// </summary>
        [DataMember(Name = "preRegistrationInlineHooks", EmitDefaultValue = true)]
        public List<PreRegistrationInlineHook> PreRegistrationInlineHooks { get; set; }

        /// <summary>
        /// Gets or Sets ProfileAttributes
        /// </summary>
        [DataMember(Name = "profileAttributes", EmitDefaultValue = true)]
        public List<ProfileEnrollmentPolicyRuleProfileAttribute> ProfileAttributes { get; set; }

        /// <summary>
        /// Gets or Sets TargetGroupIds
        /// </summary>
        [DataMember(Name = "targetGroupIds", EmitDefaultValue = true)]
        public List<string> TargetGroupIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProfileEnrollmentPolicyRuleAction {\n");
            sb.Append("  Access: ").Append(Access).Append("\n");
            sb.Append("  ActivationRequirements: ").Append(ActivationRequirements).Append("\n");
            sb.Append("  PreRegistrationInlineHooks: ").Append(PreRegistrationInlineHooks).Append("\n");
            sb.Append("  ProfileAttributes: ").Append(ProfileAttributes).Append("\n");
            sb.Append("  ProgressiveProfilingAction: ").Append(ProgressiveProfilingAction).Append("\n");
            sb.Append("  TargetGroupIds: ").Append(TargetGroupIds).Append("\n");
            sb.Append("  UnknownUserAction: ").Append(UnknownUserAction).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProfileEnrollmentPolicyRuleAction);
        }

        /// <summary>
        /// Returns true if ProfileEnrollmentPolicyRuleAction instances are equal
        /// </summary>
        /// <param name="input">Instance of ProfileEnrollmentPolicyRuleAction to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProfileEnrollmentPolicyRuleAction input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Access == input.Access ||
                    (this.Access != null &&
                    this.Access.Equals(input.Access))
                ) && 
                (
                    this.ActivationRequirements == input.ActivationRequirements ||
                    (this.ActivationRequirements != null &&
                    this.ActivationRequirements.Equals(input.ActivationRequirements))
                ) && 
                (
                    this.PreRegistrationInlineHooks == input.PreRegistrationInlineHooks ||
                    this.PreRegistrationInlineHooks != null &&
                    input.PreRegistrationInlineHooks != null &&
                    this.PreRegistrationInlineHooks.SequenceEqual(input.PreRegistrationInlineHooks)
                ) && 
                (
                    this.ProfileAttributes == input.ProfileAttributes ||
                    this.ProfileAttributes != null &&
                    input.ProfileAttributes != null &&
                    this.ProfileAttributes.SequenceEqual(input.ProfileAttributes)
                ) && 
                (
                    this.ProgressiveProfilingAction == input.ProgressiveProfilingAction ||
                    this.ProgressiveProfilingAction.Equals(input.ProgressiveProfilingAction)
                ) && 
                (
                    this.TargetGroupIds == input.TargetGroupIds ||
                    this.TargetGroupIds != null &&
                    input.TargetGroupIds != null &&
                    this.TargetGroupIds.SequenceEqual(input.TargetGroupIds)
                ) && 
                (
                    this.UnknownUserAction == input.UnknownUserAction ||
                    this.UnknownUserAction.Equals(input.UnknownUserAction)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                
                if (this.Access != null)
                {
                    hashCode = (hashCode * 59) + this.Access.GetHashCode();
                }
                if (this.ActivationRequirements != null)
                {
                    hashCode = (hashCode * 59) + this.ActivationRequirements.GetHashCode();
                }
                if (this.PreRegistrationInlineHooks != null)
                {
                    hashCode = (hashCode * 59) + this.PreRegistrationInlineHooks.GetHashCode();
                }
                if (this.ProfileAttributes != null)
                {
                    hashCode = (hashCode * 59) + this.ProfileAttributes.GetHashCode();
                }
                if (this.ProgressiveProfilingAction != null)
                {
                    hashCode = (hashCode * 59) + this.ProgressiveProfilingAction.GetHashCode();
                }
                if (this.TargetGroupIds != null)
                {
                    hashCode = (hashCode * 59) + this.TargetGroupIds.GetHashCode();
                }
                if (this.UnknownUserAction != null)
                {
                    hashCode = (hashCode * 59) + this.UnknownUserAction.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
