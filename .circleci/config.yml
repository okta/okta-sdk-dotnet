# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  windows: circleci/windows@5.0
  general-platform-helpers: okta/general-platform-helpers@1.9
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@5.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  reversing-labs:
    steps:
      - checkout
  
      - run: dotnet --version

      - run: 
          name: build Binary to scan
          command: dotnet build ./src/Okta.Sdk.sln
       
      // Necessary to Install rl wrapper   
      - run:
          name: Install Python
          command: |
            sudo apt-get update
            sudo apt-get install -y python3 python3-pip
            sudo pip install --upgrade pip
  
      // Download the scanner from Okta Security
      - run:
          name: Download Reverse Labs Scanner
          command: |
            curl https://dso-resources.oktasecurity.com/scanner \
              -H "x-api-key: $DSO_RLSECURE_TOKEN" \
              --output rl_wrapper-0.0.2+35ababa-py3-none-any.whl
      // Install the wrapper that was downloaded
      - run:
          name: Install RL Wrapper
          command: |
            pip install ./rl_wrapper-0.0.2+35ababa-py3-none-any.whl
  
      // Setup the AWS profile
      - aws-cli/setup:
          profile_name: default
          role_arn: $AWS_ARN
          region: us-east-1
  
      // Get the credentials and save to env
      - run: >-
          eval "$(aws configure export-credentials --profile default --format env)" 2> /dev/null
  
      // Run the wrapper, do not change anything here
      - run:
          name: Run Reversing Labs Wrapper Scanner
          command: |
            rl-wrapper \
              --artifact ${CIRCLE_WORKING_DIRECTORY/#\~/$HOME} \
              --name $CIRCLE_PROJECT_REPONAME\
              --version $CIRCLE_SHA1\
              --repository $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
              --commit $CIRCLE_SHA1 \
              --build-env "circleci" \
              --suppress_output
  build:
    description: Run tests and build
    executor:
      name: windows/default
    steps:
      - checkout
      - run:
          name: "Install required components"
          command: |
              choco install -y dotnetcore-sdk
      - run:
          name: "Build and Test"
          command: |
              ./build.ps1;
      - persist_to_workspace: # Allows for sharing of build-workspace (containing downloaded dependencies) (optional)
          root: ~/project
          paths:
            - src
            - .git
      - when:
          condition:
            equal: [ "<<pipeline.git.branch>>", "master" ]
          steps:
            - general-platform-helpers/step-artifacts-prepare-and-upload-windows:
                files-to-upload: "artifacts"
                location: "com/okta/devex/okta-sdk-dotnet"
  snyk-scan:
    docker:
      - image: cimg/python:3.10

    steps:
      - attach_workspace: # Allows for sharing of build-workspace (containing downloaded dependencies) (optional)
          at: ~/project
      - general-platform-helpers/step-load-dependencies
      - general-platform-helpers/step-run-snyk-monitor:
          scan-all-projects: true
          skip-unresolved: false
          run-on-non-main: true
          detection-depth: 4
          
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  "Circle CI Tests":
    jobs:
      - build
      - snyk-scan:
          name: execute-snyk
          context:
            - static-analysis
          requires:
            - build
  "Semgrep":
    jobs:
      - general-platform-helpers/job-semgrep-scan:
          context:
            - static-analysis
          name: "Scan with Semgrep"
  "Malware Scanner":
    jobs:
      - reversing-labs:
          context:
            - static-analysis 

# VS Code Extension Version: 1.4.0
