// <copyright file="{{modelName}}Resolver.cs" company="Okta, Inc">
// Copyright (c) 2014-2017 Okta, Inc. All rights reserved.
// Licensed under the Apache 2.0 license. See the LICENSE file in the project root for full license information.
// </copyright>

using System;
using System.Collections.Generic;
using System.Linq;

namespace Okta.Sdk.Internal
{
    /// <summary>
    /// Resolves {{modelName}} resources based on the {{pascalCase resolutionStrategy.propertyName}} property.
    /// </summary>
    public class {{modelName}}Resolver : AbstractResourceTypeResolver<{{modelName}}>
    {
        /// <summary>
        /// Gets the type of a {{modelName}} resource given its <paramref name="data"/>.
        /// </summary>
        /// <param name="data">The resource data.</param>
        /// <returns>The resource type.</returns>
        public override Type GetResolvedType(IDictionary<string, object> data)
        {
            var value = data
                ?.Where(kv => kv.Key.Equals("{{resolutionStrategy.propertyName}}", StringComparison.OrdinalIgnoreCase))
                ?.FirstOrDefault().Value?.ToString();

            if (string.IsNullOrEmpty(value))
            {
                return typeof({{modelName}});
            }
            {{nbsp 0}}{{~#each resolutionStrategy.valueToModelMapping}}
            if (value.Equals("{{@key}}"))
            {
                return typeof({{this}});
            }
            {{nbsp 0}}
            {{~/each}}

            return typeof({{modelName}});
        }
    }
}
