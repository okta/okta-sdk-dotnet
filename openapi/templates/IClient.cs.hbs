// <copyright file="I{{tag}}sClient.Generated.cs" company="Okta, Inc">
// Copyright (c) 2014-2017 Okta, Inc. All rights reserved.
// Licensed under the Apache 2.0 license. See the LICENSE file in the project root for full license information.
// </copyright>

// This file was automatically generated. Don't modify it directly.

using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Okta.Sdk
{
    /// <summary>A client that works with Okta {{tag}} resources.</summary>
    public partial interface I{{tag}}sClient
    {
        {{~#each operations as |operation|}}
        {{~#unless hidden}}
        {{~nbsp 0}}
        /// <summary>
        /// {{description}}
        /// </summary>
        {{#if bodyModel}}
        /// <param name="{{camelCase bodyModel}}">The <see cref="I{{bodyModel}}"/> resource.</param>
        {{/if}}
        {{#each pathParams}}
        /// <param name="{{name}}">{{description}}</param>
        {{/each}}
        {{#each queryParams}}
        /// <param name="{{name}}">{{description}}</param>
        {{/each}}
{{nbsp 0}}
        {{~#unless isArray}}
        /// <param name="cancellationToken">The cancellation token.</param>
{{nbsp 0}}
        {{~/unless}}
        {{#if isArray}}/// <returns>A collection of <see cref="I{{operation.responseModel}}"/> that can be enumerated asynchronously.</returns>
        {{~else}}
            {{~#if operation.responseModel}}/// <returns>The <see cref="I{{operation.responseModel}}"/> response.</returns>
            {{~else}}/// <returns>A Task that represents the asynchronous operation.</returns>
            {{~/if}}
        {{~/if}}
        
        {{nbsp 0}}

            {{~#if isArray}}IAsyncEnumerable<I{{operation.responseModel}}>
            {{~else}}Task{{#if operation.responseModel}}<I{{operation.responseModel}}>{{/if}}
            {{~/if}}{{nbsp}}

            {{~pascalCase operationId}}

            {{~#unless isArray}}Async{{/unless}}
            
            {{~nbsp 0}}(
                {{~#if bodyModel}}
                    {{~nbsp 0}}I{{bodyModel}} {{camelCase bodyModel}},{{nbsp}}
                {{~/if}}

                {{~#each allParams}}
                    {{~paramToCLRType this}}{{nbsp}}
                    {{~name}}
                    {{~#if (exists this "default")}}
                        {{~nbsp}}= {{#if (eq this.type "string")}}"{{/if}}
                        {{~nbsp 0}}{{default}}
                        {{~nbsp 0}}{{#if (eq this.type "string")}}"{{/if}}
                    {{~else}}
                        {{~#unless required}} = null{{/unless}}
                    {{~/if}}
                    {{~#unless @last}},{{nbsp}}{{/unless}}
                {{~/each}}
                {{~#unless isArray}}
                    {{~#if allParams.length}},{{nbsp}}{{/if}}
                    {{~nbsp 0}}CancellationToken cancellationToken = default(CancellationToken)
                {{~/unless}}
            {{~nbsp 0}});
        
        {{~nbsp 0}}
{{nbsp 0}}
        {{~/unless}}
        {{~/each}}
    }
}
